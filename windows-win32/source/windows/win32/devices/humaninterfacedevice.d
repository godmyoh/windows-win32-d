module windows.win32.devices.humaninterfacedevice;

import windows.win32.guid : GUID;
import windows.win32.devices.properties : DEVPROPKEY;
import windows.win32.foundation : BOOL, BOOLEAN, CHAR, FILETIME, HANDLE, HINSTANCE, HRESULT, HWND, NTSTATUS, POINT, PSTR, PWSTR, RECT;
import windows.win32.system.com : IUnknown;
import windows.win32.system.registry : HKEY;

version (Windows):
extern (Windows):

HRESULT DirectInput8Create(HINSTANCE, uint, const(GUID)*, void**, IUnknown);
uint joyConfigChanged(uint);
NTSTATUS HidP_GetCaps(PHIDP_PREPARSED_DATA, HIDP_CAPS*);
NTSTATUS HidP_GetLinkCollectionNodes(HIDP_LINK_COLLECTION_NODE*, uint*, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_GetSpecificButtonCaps(HIDP_REPORT_TYPE, ushort, ushort, ushort, HIDP_BUTTON_CAPS*, ushort*, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_GetButtonCaps(HIDP_REPORT_TYPE, HIDP_BUTTON_CAPS*, ushort*, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_GetSpecificValueCaps(HIDP_REPORT_TYPE, ushort, ushort, ushort, HIDP_VALUE_CAPS*, ushort*, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_GetValueCaps(HIDP_REPORT_TYPE, HIDP_VALUE_CAPS*, ushort*, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_GetExtendedAttributes(HIDP_REPORT_TYPE, ushort, PHIDP_PREPARSED_DATA, HIDP_EXTENDED_ATTRIBUTES*, uint*);
NTSTATUS HidP_InitializeReportForID(HIDP_REPORT_TYPE, ubyte, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_SetData(HIDP_REPORT_TYPE, HIDP_DATA*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetData(HIDP_REPORT_TYPE, HIDP_DATA*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
uint HidP_MaxDataListLength(HIDP_REPORT_TYPE, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_SetUsages(HIDP_REPORT_TYPE, ushort, ushort, ushort*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_UnsetUsages(HIDP_REPORT_TYPE, ushort, ushort, ushort*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetUsages(HIDP_REPORT_TYPE, ushort, ushort, ushort*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetUsagesEx(HIDP_REPORT_TYPE, ushort, USAGE_AND_PAGE*, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
uint HidP_MaxUsageListLength(HIDP_REPORT_TYPE, ushort, PHIDP_PREPARSED_DATA);
NTSTATUS HidP_SetUsageValue(HIDP_REPORT_TYPE, ushort, ushort, ushort, uint, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_SetScaledUsageValue(HIDP_REPORT_TYPE, ushort, ushort, ushort, int, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_SetUsageValueArray(HIDP_REPORT_TYPE, ushort, ushort, ushort, PSTR, ushort, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetUsageValue(HIDP_REPORT_TYPE, ushort, ushort, ushort, uint*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetScaledUsageValue(HIDP_REPORT_TYPE, ushort, ushort, ushort, int*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_GetUsageValueArray(HIDP_REPORT_TYPE, ushort, ushort, ushort, PSTR, ushort, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_UsageListDifference(ushort*, ushort*, ushort*, ushort*, uint);
NTSTATUS HidP_GetButtonArray(HIDP_REPORT_TYPE, ushort, ushort, ushort, HIDP_BUTTON_ARRAY_DATA*, ushort*, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_SetButtonArray(HIDP_REPORT_TYPE, ushort, ushort, ushort, HIDP_BUTTON_ARRAY_DATA*, ushort, PHIDP_PREPARSED_DATA, PSTR, uint);
NTSTATUS HidP_TranslateUsagesToI8042ScanCodes(ushort*, uint, HIDP_KEYBOARD_DIRECTION, HIDP_KEYBOARD_MODIFIER_STATE*, PHIDP_INSERT_SCANCODES, void*);
BOOLEAN HidD_GetAttributes(HANDLE, HIDD_ATTRIBUTES*);
void HidD_GetHidGuid(GUID*);
BOOLEAN HidD_GetPreparsedData(HANDLE, PHIDP_PREPARSED_DATA*);
BOOLEAN HidD_FreePreparsedData(PHIDP_PREPARSED_DATA);
BOOLEAN HidD_FlushQueue(HANDLE);
BOOLEAN HidD_GetConfiguration(HANDLE, HIDD_CONFIGURATION*, uint);
BOOLEAN HidD_SetConfiguration(HANDLE, HIDD_CONFIGURATION*, uint);
BOOLEAN HidD_GetFeature(HANDLE, void*, uint);
BOOLEAN HidD_SetFeature(HANDLE, void*, uint);
BOOLEAN HidD_GetInputReport(HANDLE, void*, uint);
BOOLEAN HidD_SetOutputReport(HANDLE, void*, uint);
BOOLEAN HidD_GetNumInputBuffers(HANDLE, uint*);
BOOLEAN HidD_SetNumInputBuffers(HANDLE, uint);
BOOLEAN HidD_GetPhysicalDescriptor(HANDLE, void*, uint);
BOOLEAN HidD_GetManufacturerString(HANDLE, void*, uint);
BOOLEAN HidD_GetProductString(HANDLE, void*, uint);
BOOLEAN HidD_GetIndexedString(HANDLE, uint, void*, uint);
BOOLEAN HidD_GetSerialNumberString(HANDLE, void*, uint);
BOOLEAN HidD_GetMsGenreDescriptor(HANDLE, void*, uint);
enum DIRECTINPUT_VERSION = 0x00000800;
enum JOY_HW_NONE = 0x00000000;
enum JOY_HW_CUSTOM = 0x00000001;
enum JOY_HW_2A_2B_GENERIC = 0x00000002;
enum JOY_HW_2A_4B_GENERIC = 0x00000003;
enum JOY_HW_2B_GAMEPAD = 0x00000004;
enum JOY_HW_2B_FLIGHTYOKE = 0x00000005;
enum JOY_HW_2B_FLIGHTYOKETHROTTLE = 0x00000006;
enum JOY_HW_3A_2B_GENERIC = 0x00000007;
enum JOY_HW_3A_4B_GENERIC = 0x00000008;
enum JOY_HW_4B_GAMEPAD = 0x00000009;
enum JOY_HW_4B_FLIGHTYOKE = 0x0000000a;
enum JOY_HW_4B_FLIGHTYOKETHROTTLE = 0x0000000b;
enum JOY_HW_TWO_2A_2B_WITH_Y = 0x0000000c;
enum JOY_HW_LASTENTRY = 0x0000000d;
enum JOY_ISCAL_XY = 0x00000001;
enum JOY_ISCAL_Z = 0x00000002;
enum JOY_ISCAL_R = 0x00000004;
enum JOY_ISCAL_U = 0x00000008;
enum JOY_ISCAL_V = 0x00000010;
enum JOY_ISCAL_POV = 0x00000020;
enum JOY_POV_NUMDIRS = 0x00000004;
enum JOY_POVVAL_FORWARD = 0x00000000;
enum JOY_POVVAL_BACKWARD = 0x00000001;
enum JOY_POVVAL_LEFT = 0x00000002;
enum JOY_POVVAL_RIGHT = 0x00000003;
enum JOY_HWS_HASZ = 0x00000001;
enum JOY_HWS_HASPOV = 0x00000002;
enum JOY_HWS_POVISBUTTONCOMBOS = 0x00000004;
enum JOY_HWS_POVISPOLL = 0x00000008;
enum JOY_HWS_ISYOKE = 0x00000010;
enum JOY_HWS_ISGAMEPAD = 0x00000020;
enum JOY_HWS_ISCARCTRL = 0x00000040;
enum JOY_HWS_XISJ1Y = 0x00000080;
enum JOY_HWS_XISJ2X = 0x00000100;
enum JOY_HWS_XISJ2Y = 0x00000200;
enum JOY_HWS_YISJ1X = 0x00000400;
enum JOY_HWS_YISJ2X = 0x00000800;
enum JOY_HWS_YISJ2Y = 0x00001000;
enum JOY_HWS_ZISJ1X = 0x00002000;
enum JOY_HWS_ZISJ1Y = 0x00004000;
enum JOY_HWS_ZISJ2X = 0x00008000;
enum JOY_HWS_POVISJ1X = 0x00010000;
enum JOY_HWS_POVISJ1Y = 0x00020000;
enum JOY_HWS_POVISJ2X = 0x00040000;
enum JOY_HWS_HASR = 0x00080000;
enum JOY_HWS_RISJ1X = 0x00100000;
enum JOY_HWS_RISJ1Y = 0x00200000;
enum JOY_HWS_RISJ2Y = 0x00400000;
enum JOY_HWS_HASU = 0x00800000;
enum JOY_HWS_HASV = 0x01000000;
enum JOY_US_HASRUDDER = 0x00000001;
enum JOY_US_PRESENT = 0x00000002;
enum JOY_US_ISOEM = 0x00000004;
enum JOY_US_RESERVED = 0xffffffff80000000;
enum JOYTYPE_ZEROGAMEENUMOEMDATA = 0x00000001;
enum JOYTYPE_NOAUTODETECTGAMEPORT = 0x00000002;
enum JOYTYPE_NOHIDDIRECT = 0x00000004;
enum JOYTYPE_ANALOGCOMPAT = 0x00000008;
enum JOYTYPE_DEFAULTPROPSHEET = 0xffffffff80000000;
enum JOYTYPE_DEVICEHIDE = 0x00010000;
enum JOYTYPE_MOUSEHIDE = 0x00020000;
enum JOYTYPE_KEYBHIDE = 0x00040000;
enum JOYTYPE_GAMEHIDE = 0x00080000;
enum JOYTYPE_HIDEACTIVE = 0x00100000;
enum JOYTYPE_INFOMASK = 0x00e00000;
enum JOYTYPE_INFODEFAULT = 0x00000000;
enum JOYTYPE_INFOYYPEDALS = 0x00200000;
enum JOYTYPE_INFOZYPEDALS = 0x00400000;
enum JOYTYPE_INFOYRPEDALS = 0x00600000;
enum JOYTYPE_INFOZRPEDALS = 0x00800000;
enum JOYTYPE_INFOZISSLIDER = 0x00200000;
enum JOYTYPE_INFOZISZ = 0x00400000;
enum JOYTYPE_ENABLEINPUTREPORT = 0x01000000;
enum MAX_JOYSTRING = 0x00000100;
enum MAX_JOYSTICKOEMVXDNAME = 0x00000104;
enum DITC_REGHWSETTINGS = 0x00000001;
enum DITC_CLSIDCONFIG = 0x00000002;
enum DITC_DISPLAYNAME = 0x00000004;
enum DITC_CALLOUT = 0x00000008;
enum DITC_HARDWAREID = 0x00000010;
enum DITC_FLAGS1 = 0x00000020;
enum DITC_FLAGS2 = 0x00000040;
enum DITC_MAPFILE = 0x00000080;
enum DIJC_GUIDINSTANCE = 0x00000001;
enum DIJC_REGHWCONFIGTYPE = 0x00000002;
enum DIJC_GAIN = 0x00000004;
enum DIJC_CALLOUT = 0x00000008;
enum DIJC_WDMGAMEPORT = 0x00000010;
enum DIJU_USERVALUES = 0x00000001;
enum DIJU_GLOBALDRIVER = 0x00000002;
enum DIJU_GAMEPORTEMULATOR = 0x00000004;
enum GUID_KeyboardClass = GUID(0x4d36e96b, 0xe325, 0x11ce, [0xbf, 0xc1, 0x8, 0x0, 0x2b, 0xe1, 0x3, 0x18]);
enum GUID_MediaClass = GUID(0x4d36e96c, 0xe325, 0x11ce, [0xbf, 0xc1, 0x8, 0x0, 0x2b, 0xe1, 0x3, 0x18]);
enum GUID_MouseClass = GUID(0x4d36e96f, 0xe325, 0x11ce, [0xbf, 0xc1, 0x8, 0x0, 0x2b, 0xe1, 0x3, 0x18]);
enum GUID_HIDClass = GUID(0x745a17a0, 0x74d3, 0x11d0, [0xb6, 0xfe, 0x0, 0xa0, 0xc9, 0xf, 0x57, 0xda]);
enum DIRECTINPUT_NOTIFICATION_MSGSTRINGA = "DIRECTINPUT_NOTIFICATION_MSGSTRING";
enum DIRECTINPUT_NOTIFICATION_MSGSTRINGW = "DIRECTINPUT_NOTIFICATION_MSGSTRING";
enum DIRECTINPUT_NOTIFICATION_MSGSTRING = "DIRECTINPUT_NOTIFICATION_MSGSTRING";
enum DIMSGWP_NEWAPPSTART = 0x00000001;
enum DIMSGWP_DX8APPSTART = 0x00000002;
enum DIMSGWP_DX8MAPPERAPPSTART = 0x00000003;
enum DIAPPIDFLAG_NOTIME = 0x00000001;
enum DIAPPIDFLAG_NOSIZE = 0x00000002;
enum DIRECTINPUT_REGSTR_VAL_APPIDFLAGA = "AppIdFlag";
enum DIRECTINPUT_REGSTR_KEY_LASTAPPA = "MostRecentApplication";
enum DIRECTINPUT_REGSTR_KEY_LASTMAPAPPA = "MostRecentMapperApplication";
enum DIRECTINPUT_REGSTR_VAL_VERSIONA = "Version";
enum DIRECTINPUT_REGSTR_VAL_NAMEA = "Name";
enum DIRECTINPUT_REGSTR_VAL_IDA = "Id";
enum DIRECTINPUT_REGSTR_VAL_MAPPERA = "UsesMapper";
enum DIRECTINPUT_REGSTR_VAL_LASTSTARTA = "MostRecentStart";
enum DIRECTINPUT_REGSTR_VAL_APPIDFLAGW = "AppIdFlag";
enum DIRECTINPUT_REGSTR_KEY_LASTAPPW = "MostRecentApplication";
enum DIRECTINPUT_REGSTR_KEY_LASTMAPAPPW = "MostRecentMapperApplication";
enum DIRECTINPUT_REGSTR_VAL_VERSIONW = "Version";
enum DIRECTINPUT_REGSTR_VAL_NAMEW = "Name";
enum DIRECTINPUT_REGSTR_VAL_IDW = "Id";
enum DIRECTINPUT_REGSTR_VAL_MAPPERW = "UsesMapper";
enum DIRECTINPUT_REGSTR_VAL_LASTSTARTW = "MostRecentStart";
enum DIRECTINPUT_REGSTR_VAL_APPIDFLAG = "AppIdFlag";
enum DIRECTINPUT_REGSTR_KEY_LASTAPP = "MostRecentApplication";
enum DIRECTINPUT_REGSTR_KEY_LASTMAPAPP = "MostRecentMapperApplication";
enum DIRECTINPUT_REGSTR_VAL_VERSION = "Version";
enum DIRECTINPUT_REGSTR_VAL_NAME = "Name";
enum DIRECTINPUT_REGSTR_VAL_ID = "Id";
enum DIRECTINPUT_REGSTR_VAL_MAPPER = "UsesMapper";
enum DIRECTINPUT_REGSTR_VAL_LASTSTART = "MostRecentStart";
enum DIERR_NOMOREITEMS = 0xffffffff80070103;
enum DIERR_DRIVERFIRST = 0xffffffff80040300;
enum DIERR_DRIVERLAST = 0xffffffff800403ff;
enum DIERR_INVALIDCLASSINSTALLER = 0xffffffff80040400;
enum DIERR_CANCELLED = 0xffffffff80040401;
enum DIERR_BADINF = 0xffffffff80040402;
enum DIDIFT_DELETE = 0x01000000;
enum GUID_DEVINTERFACE_HID = GUID(0x4d1e55b2, 0xf16f, 0x11cf, [0x88, 0xcb, 0x0, 0x11, 0x11, 0x0, 0x0, 0x30]);
enum GUID_HID_INTERFACE_NOTIFY = GUID(0x2c4e2e88, 0x25e6, 0x4c33, [0x88, 0x2f, 0x3d, 0x82, 0xe6, 0x7, 0x36, 0x81]);
enum GUID_HID_INTERFACE_HIDPARSE = GUID(0xf5c315a5, 0x69ac, 0x4bc2, [0x92, 0x79, 0xd0, 0xb6, 0x45, 0x76, 0xf4, 0x4b]);
enum DEVPKEY_DeviceInterface_HID_UsagePage = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 2);
enum DEVPKEY_DeviceInterface_HID_UsageId = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 3);
enum DEVPKEY_DeviceInterface_HID_IsReadOnly = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 4);
enum DEVPKEY_DeviceInterface_HID_VendorId = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 5);
enum DEVPKEY_DeviceInterface_HID_ProductId = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 6);
enum DEVPKEY_DeviceInterface_HID_VersionNumber = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 7);
enum DEVPKEY_DeviceInterface_HID_BackgroundAccess = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 8);
enum DEVPKEY_DeviceInterface_HID_WakeScreenOnInputCapable = DEVPROPKEY(GUID(3421733648, 18967, 17168, [161, 235, 36, 127, 11, 103, 89, 59]), 9);
enum HID_REVISION = 0x00000001;
enum HIDP_STATUS_SUCCESS = 0x00110000;
enum HIDP_STATUS_NULL = 0xffffffff80110001;
enum HIDP_STATUS_INVALID_PREPARSED_DATA = 0xffffffffc0110001;
enum HIDP_STATUS_INVALID_REPORT_TYPE = 0xffffffffc0110002;
enum HIDP_STATUS_INVALID_REPORT_LENGTH = 0xffffffffc0110003;
enum HIDP_STATUS_USAGE_NOT_FOUND = 0xffffffffc0110004;
enum HIDP_STATUS_VALUE_OUT_OF_RANGE = 0xffffffffc0110005;
enum HIDP_STATUS_BAD_LOG_PHY_VALUES = 0xffffffffc0110006;
enum HIDP_STATUS_BUFFER_TOO_SMALL = 0xffffffffc0110007;
enum HIDP_STATUS_INTERNAL_ERROR = 0xffffffffc0110008;
enum HIDP_STATUS_I8042_TRANS_UNKNOWN = 0xffffffffc0110009;
enum HIDP_STATUS_INCOMPATIBLE_REPORT_ID = 0xffffffffc011000a;
enum HIDP_STATUS_NOT_VALUE_ARRAY = 0xffffffffc011000b;
enum HIDP_STATUS_IS_VALUE_ARRAY = 0xffffffffc011000c;
enum HIDP_STATUS_DATA_INDEX_NOT_FOUND = 0xffffffffc011000d;
enum HIDP_STATUS_DATA_INDEX_OUT_OF_RANGE = 0xffffffffc011000e;
enum HIDP_STATUS_BUTTON_NOT_PRESSED = 0xffffffffc011000f;
enum HIDP_STATUS_REPORT_DOES_NOT_EXIST = 0xffffffffc0110010;
enum HIDP_STATUS_NOT_IMPLEMENTED = 0xffffffffc0110020;
enum HIDP_STATUS_NOT_BUTTON_ARRAY = 0xffffffffc0110021;
enum HIDP_STATUS_I8242_TRANS_UNKNOWN = 0xffffffffc0110009;
enum HID_USAGE_PAGE_UNDEFINED = 0x0000;
enum HID_USAGE_PAGE_GENERIC = 0x0001;
enum HID_USAGE_PAGE_SIMULATION = 0x0002;
enum HID_USAGE_PAGE_VR = 0x0003;
enum HID_USAGE_PAGE_SPORT = 0x0004;
enum HID_USAGE_PAGE_GAME = 0x0005;
enum HID_USAGE_PAGE_GENERIC_DEVICE = 0x0006;
enum HID_USAGE_PAGE_KEYBOARD = 0x0007;
enum HID_USAGE_PAGE_LED = 0x0008;
enum HID_USAGE_PAGE_BUTTON = 0x0009;
enum HID_USAGE_PAGE_ORDINAL = 0x000a;
enum HID_USAGE_PAGE_TELEPHONY = 0x000b;
enum HID_USAGE_PAGE_CONSUMER = 0x000c;
enum HID_USAGE_PAGE_DIGITIZER = 0x000d;
enum HID_USAGE_PAGE_HAPTICS = 0x000e;
enum HID_USAGE_PAGE_PID = 0x000f;
enum HID_USAGE_PAGE_UNICODE = 0x0010;
enum HID_USAGE_PAGE_ALPHANUMERIC = 0x0014;
enum HID_USAGE_PAGE_SENSOR = 0x0020;
enum HID_USAGE_PAGE_LIGHTING_ILLUMINATION = 0x0059;
enum HID_USAGE_PAGE_BARCODE_SCANNER = 0x008c;
enum HID_USAGE_PAGE_WEIGHING_DEVICE = 0x008d;
enum HID_USAGE_PAGE_MAGNETIC_STRIPE_READER = 0x008e;
enum HID_USAGE_PAGE_CAMERA_CONTROL = 0x0090;
enum HID_USAGE_PAGE_ARCADE = 0x0091;
enum HID_USAGE_PAGE_MICROSOFT_BLUETOOTH_HANDSFREE = 0xfff3;
enum HID_USAGE_PAGE_VENDOR_DEFINED_BEGIN = 0xff00;
enum HID_USAGE_PAGE_VENDOR_DEFINED_END = 0xffff;
enum HID_USAGE_GENERIC_POINTER = 0x0001;
enum HID_USAGE_GENERIC_MOUSE = 0x0002;
enum HID_USAGE_GENERIC_JOYSTICK = 0x0004;
enum HID_USAGE_GENERIC_GAMEPAD = 0x0005;
enum HID_USAGE_GENERIC_KEYBOARD = 0x0006;
enum HID_USAGE_GENERIC_KEYPAD = 0x0007;
enum HID_USAGE_GENERIC_MULTI_AXIS_CONTROLLER = 0x0008;
enum HID_USAGE_GENERIC_TABLET_PC_SYSTEM_CTL = 0x0009;
enum HID_USAGE_GENERIC_PORTABLE_DEVICE_CONTROL = 0x000d;
enum HID_USAGE_GENERIC_INTERACTIVE_CONTROL = 0x000e;
enum HID_USAGE_GENERIC_COUNTED_BUFFER = 0x003a;
enum HID_USAGE_GENERIC_SYSTEM_CTL = 0x0080;
enum HID_USAGE_GENERIC_X = 0x0030;
enum HID_USAGE_GENERIC_Y = 0x0031;
enum HID_USAGE_GENERIC_Z = 0x0032;
enum HID_USAGE_GENERIC_RX = 0x0033;
enum HID_USAGE_GENERIC_RY = 0x0034;
enum HID_USAGE_GENERIC_RZ = 0x0035;
enum HID_USAGE_GENERIC_SLIDER = 0x0036;
enum HID_USAGE_GENERIC_DIAL = 0x0037;
enum HID_USAGE_GENERIC_WHEEL = 0x0038;
enum HID_USAGE_GENERIC_HATSWITCH = 0x0039;
enum HID_USAGE_GENERIC_BYTE_COUNT = 0x003b;
enum HID_USAGE_GENERIC_MOTION_WAKEUP = 0x003c;
enum HID_USAGE_GENERIC_START = 0x003d;
enum HID_USAGE_GENERIC_SELECT = 0x003e;
enum HID_USAGE_GENERIC_VX = 0x0040;
enum HID_USAGE_GENERIC_VY = 0x0041;
enum HID_USAGE_GENERIC_VZ = 0x0042;
enum HID_USAGE_GENERIC_VBRX = 0x0043;
enum HID_USAGE_GENERIC_VBRY = 0x0044;
enum HID_USAGE_GENERIC_VBRZ = 0x0045;
enum HID_USAGE_GENERIC_VNO = 0x0046;
enum HID_USAGE_GENERIC_FEATURE_NOTIFICATION = 0x0047;
enum HID_USAGE_GENERIC_RESOLUTION_MULTIPLIER = 0x0048;
enum HID_USAGE_GENERIC_SYSCTL_POWER = 0x0081;
enum HID_USAGE_GENERIC_SYSCTL_SLEEP = 0x0082;
enum HID_USAGE_GENERIC_SYSCTL_WAKE = 0x0083;
enum HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU = 0x0084;
enum HID_USAGE_GENERIC_SYSCTL_MAIN_MENU = 0x0085;
enum HID_USAGE_GENERIC_SYSCTL_APP_MENU = 0x0086;
enum HID_USAGE_GENERIC_SYSCTL_HELP_MENU = 0x0087;
enum HID_USAGE_GENERIC_SYSCTL_MENU_EXIT = 0x0088;
enum HID_USAGE_GENERIC_SYSCTL_MENU_SELECT = 0x0089;
enum HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT = 0x008a;
enum HID_USAGE_GENERIC_SYSCTL_MENU_LEFT = 0x008b;
enum HID_USAGE_GENERIC_SYSCTL_MENU_UP = 0x008c;
enum HID_USAGE_GENERIC_SYSCTL_MENU_DOWN = 0x008d;
enum HID_USAGE_GENERIC_SYSCTL_COLD_RESTART = 0x008e;
enum HID_USAGE_GENERIC_SYSCTL_WARM_RESTART = 0x008f;
enum HID_USAGE_GENERIC_DPAD_UP = 0x0090;
enum HID_USAGE_GENERIC_DPAD_DOWN = 0x0091;
enum HID_USAGE_GENERIC_DPAD_RIGHT = 0x0092;
enum HID_USAGE_GENERIC_DPAD_LEFT = 0x0093;
enum HID_USAGE_GENERIC_SYSCTL_FN = 0x0097;
enum HID_USAGE_GENERIC_SYSCTL_FN_LOCK = 0x0098;
enum HID_USAGE_GENERIC_SYSCTL_FN_LOCK_INDICATOR = 0x0099;
enum HID_USAGE_GENERIC_SYSCTL_DISMISS_NOTIFICATION = 0x009a;
enum HID_USAGE_GENERIC_SYSCTL_DOCK = 0x00a0;
enum HID_USAGE_GENERIC_SYSCTL_UNDOCK = 0x00a1;
enum HID_USAGE_GENERIC_SYSCTL_SETUP = 0x00a2;
enum HID_USAGE_GENERIC_SYSCTL_SYS_BREAK = 0x00a3;
enum HID_USAGE_GENERIC_SYSCTL_SYS_DBG_BREAK = 0x00a4;
enum HID_USAGE_GENERIC_SYSCTL_APP_BREAK = 0x00a5;
enum HID_USAGE_GENERIC_SYSCTL_APP_DBG_BREAK = 0x00a6;
enum HID_USAGE_GENERIC_SYSCTL_MUTE = 0x00a7;
enum HID_USAGE_GENERIC_SYSCTL_HIBERNATE = 0x00a8;
enum HID_USAGE_GENERIC_SYSCTL_DISP_INVERT = 0x00b0;
enum HID_USAGE_GENERIC_SYSCTL_DISP_INTERNAL = 0x00b1;
enum HID_USAGE_GENERIC_SYSCTL_DISP_EXTERNAL = 0x00b2;
enum HID_USAGE_GENERIC_SYSCTL_DISP_BOTH = 0x00b3;
enum HID_USAGE_GENERIC_SYSCTL_DISP_DUAL = 0x00b4;
enum HID_USAGE_GENERIC_SYSCTL_DISP_TOGGLE = 0x00b5;
enum HID_USAGE_GENERIC_SYSCTL_DISP_SWAP = 0x00b6;
enum HID_USAGE_GENERIC_SYSCTL_DISP_AUTOSCALE = 0x00b7;
enum HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_BUTTON = 0x00c9;
enum HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_SLIDER_SWITCH = 0x00ca;
enum HID_USAGE_GENERIC_CONTROL_ENABLE = 0x00cb;
enum HID_USAGE_SIMULATION_FLIGHT_SIMULATION_DEVICE = 0x0001;
enum HID_USAGE_SIMULATION_AUTOMOBILE_SIMULATION_DEVICE = 0x0002;
enum HID_USAGE_SIMULATION_TANK_SIMULATION_DEVICE = 0x0003;
enum HID_USAGE_SIMULATION_SPACESHIP_SIMULATION_DEVICE = 0x0004;
enum HID_USAGE_SIMULATION_SUBMARINE_SIMULATION_DEVICE = 0x0005;
enum HID_USAGE_SIMULATION_SAILING_SIMULATION_DEVICE = 0x0006;
enum HID_USAGE_SIMULATION_MOTORCYCLE_SIMULATION_DEVICE = 0x0007;
enum HID_USAGE_SIMULATION_SPORTS_SIMULATION_DEVICE = 0x0008;
enum HID_USAGE_SIMULATION_AIRPLANE_SIMULATION_DEVICE = 0x0009;
enum HID_USAGE_SIMULATION_HELICOPTER_SIMULATION_DEVICE = 0x000a;
enum HID_USAGE_SIMULATION_MAGIC_CARPET_SIMULATION_DEVICE = 0x000b;
enum HID_USAGE_SIMULATION_BICYCLE_SIMULATION_DEVICE = 0x000c;
enum HID_USAGE_SIMULATION_FLIGHT_CONTROL_STICK = 0x0020;
enum HID_USAGE_SIMULATION_FLIGHT_STICK = 0x0021;
enum HID_USAGE_SIMULATION_CYCLIC_CONTROL = 0x0022;
enum HID_USAGE_SIMULATION_CYCLIC_TRIM = 0x0023;
enum HID_USAGE_SIMULATION_FLIGHT_YOKE = 0x0024;
enum HID_USAGE_SIMULATION_TRACK_CONTROL = 0x0025;
enum HID_USAGE_SIMULATION_AILERON = 0x00b0;
enum HID_USAGE_SIMULATION_AILERON_TRIM = 0x00b1;
enum HID_USAGE_SIMULATION_ANTI_TORQUE_CONTROL = 0x00b2;
enum HID_USAGE_SIMULATION_AUTOPIOLOT_ENABLE = 0x00b3;
enum HID_USAGE_SIMULATION_CHAFF_RELEASE = 0x00b4;
enum HID_USAGE_SIMULATION_COLLECTIVE_CONTROL = 0x00b5;
enum HID_USAGE_SIMULATION_DIVE_BRAKE = 0x00b6;
enum HID_USAGE_SIMULATION_ELECTRONIC_COUNTERMEASURES = 0x00b7;
enum HID_USAGE_SIMULATION_ELEVATOR = 0x00b8;
enum HID_USAGE_SIMULATION_ELEVATOR_TRIM = 0x00b9;
enum HID_USAGE_SIMULATION_RUDDER = 0x00ba;
enum HID_USAGE_SIMULATION_THROTTLE = 0x00bb;
enum HID_USAGE_SIMULATION_FLIGHT_COMMUNICATIONS = 0x00bc;
enum HID_USAGE_SIMULATION_FLARE_RELEASE = 0x00bd;
enum HID_USAGE_SIMULATION_LANDING_GEAR = 0x00be;
enum HID_USAGE_SIMULATION_TOE_BRAKE = 0x00bf;
enum HID_USAGE_SIMULATION_TRIGGER = 0x00c0;
enum HID_USAGE_SIMULATION_WEAPONS_ARM = 0x00c1;
enum HID_USAGE_SIMULATION_WEAPONS_SELECT = 0x00c2;
enum HID_USAGE_SIMULATION_WING_FLAPS = 0x00c3;
enum HID_USAGE_SIMULATION_ACCELLERATOR = 0x00c4;
enum HID_USAGE_SIMULATION_BRAKE = 0x00c5;
enum HID_USAGE_SIMULATION_CLUTCH = 0x00c6;
enum HID_USAGE_SIMULATION_SHIFTER = 0x00c7;
enum HID_USAGE_SIMULATION_STEERING = 0x00c8;
enum HID_USAGE_SIMULATION_TURRET_DIRECTION = 0x00c9;
enum HID_USAGE_SIMULATION_BARREL_ELEVATION = 0x00ca;
enum HID_USAGE_SIMULATION_DIVE_PLANE = 0x00cb;
enum HID_USAGE_SIMULATION_BALLAST = 0x00cc;
enum HID_USAGE_SIMULATION_BICYCLE_CRANK = 0x00cd;
enum HID_USAGE_SIMULATION_HANDLE_BARS = 0x00ce;
enum HID_USAGE_SIMULATION_FRONT_BRAKE = 0x00cf;
enum HID_USAGE_SIMULATION_REAR_BRAKE = 0x00d0;
enum HID_USAGE_VR_BELT = 0x0001;
enum HID_USAGE_VR_BODY_SUIT = 0x0002;
enum HID_USAGE_VR_FLEXOR = 0x0003;
enum HID_USAGE_VR_GLOVE = 0x0004;
enum HID_USAGE_VR_HEAD_TRACKER = 0x0005;
enum HID_USAGE_VR_HEAD_MOUNTED_DISPLAY = 0x0006;
enum HID_USAGE_VR_HAND_TRACKER = 0x0007;
enum HID_USAGE_VR_OCULOMETER = 0x0008;
enum HID_USAGE_VR_VEST = 0x0009;
enum HID_USAGE_VR_ANIMATRONIC_DEVICE = 0x000a;
enum HID_USAGE_VR_STEREO_ENABLE = 0x0020;
enum HID_USAGE_VR_DISPLAY_ENABLE = 0x0021;
enum HID_USAGE_SPORT_BASEBALL_BAT = 0x0001;
enum HID_USAGE_SPORT_GOLF_CLUB = 0x0002;
enum HID_USAGE_SPORT_ROWING_MACHINE = 0x0003;
enum HID_USAGE_SPORT_TREADMILL = 0x0004;
enum HID_USAGE_SPORT_STICK_TYPE = 0x0038;
enum HID_USAGE_SPORT_OAR = 0x0030;
enum HID_USAGE_SPORT_SLOPE = 0x0031;
enum HID_USAGE_SPORT_RATE = 0x0032;
enum HID_USAGE_SPORT_STICK_SPEED = 0x0033;
enum HID_USAGE_SPORT_STICK_FACE_ANGLE = 0x0034;
enum HID_USAGE_SPORT_HEEL_TOE = 0x0035;
enum HID_USAGE_SPORT_FOLLOW_THROUGH = 0x0036;
enum HID_USAGE_SPORT_TEMPO = 0x0037;
enum HID_USAGE_SPORT_HEIGHT = 0x0039;
enum HID_USAGE_SPORT_PUTTER = 0x0050;
enum HID_USAGE_SPORT_1_IRON = 0x0051;
enum HID_USAGE_SPORT_2_IRON = 0x0052;
enum HID_USAGE_SPORT_3_IRON = 0x0053;
enum HID_USAGE_SPORT_4_IRON = 0x0054;
enum HID_USAGE_SPORT_5_IRON = 0x0055;
enum HID_USAGE_SPORT_6_IRON = 0x0056;
enum HID_USAGE_SPORT_7_IRON = 0x0057;
enum HID_USAGE_SPORT_8_IRON = 0x0058;
enum HID_USAGE_SPORT_9_IRON = 0x0059;
enum HID_USAGE_SPORT_10_IRON = 0x005a;
enum HID_USAGE_SPORT_11_IRON = 0x005b;
enum HID_USAGE_SPORT_SAND_WEDGE = 0x005c;
enum HID_USAGE_SPORT_LOFT_WEDGE = 0x005d;
enum HID_USAGE_SPORT_POWER_WEDGE = 0x005e;
enum HID_USAGE_SPORT_1_WOOD = 0x005f;
enum HID_USAGE_SPORT_3_WOOD = 0x0060;
enum HID_USAGE_SPORT_5_WOOD = 0x0061;
enum HID_USAGE_SPORT_7_WOOD = 0x0062;
enum HID_USAGE_SPORT_9_WOOD = 0x0063;
enum HID_USAGE_GAME_3D_GAME_CONTROLLER = 0x0001;
enum HID_USAGE_GAME_PINBALL_DEVICE = 0x0002;
enum HID_USAGE_GAME_GUN_DEVICE = 0x0003;
enum HID_USAGE_GAME_POINT_OF_VIEW = 0x0020;
enum HID_USAGE_GAME_GUN_SELECTOR = 0x0032;
enum HID_USAGE_GAME_GAMEPAD_FIRE_JUMP = 0x0037;
enum HID_USAGE_GAME_GAMEPAD_TRIGGER = 0x0039;
enum HID_USAGE_GAME_TURN_RIGHT_LEFT = 0x0021;
enum HID_USAGE_GAME_PITCH_FORWARD_BACK = 0x0022;
enum HID_USAGE_GAME_ROLL_RIGHT_LEFT = 0x0023;
enum HID_USAGE_GAME_MOVE_RIGHT_LEFT = 0x0024;
enum HID_USAGE_GAME_MOVE_FORWARD_BACK = 0x0025;
enum HID_USAGE_GAME_MOVE_UP_DOWN = 0x0026;
enum HID_USAGE_GAME_LEAN_RIGHT_LEFT = 0x0027;
enum HID_USAGE_GAME_LEAN_FORWARD_BACK = 0x0028;
enum HID_USAGE_GAME_POV_HEIGHT = 0x0029;
enum HID_USAGE_GAME_FLIPPER = 0x002a;
enum HID_USAGE_GAME_SECONDARY_FLIPPER = 0x002b;
enum HID_USAGE_GAME_BUMP = 0x002c;
enum HID_USAGE_GAME_NEW_GAME = 0x002d;
enum HID_USAGE_GAME_SHOOT_BALL = 0x002e;
enum HID_USAGE_GAME_PLAYER = 0x002f;
enum HID_USAGE_GAME_GUN_BOLT = 0x0030;
enum HID_USAGE_GAME_GUN_CLIP = 0x0031;
enum HID_USAGE_GAME_GUN_SINGLE_SHOT = 0x0033;
enum HID_USAGE_GAME_GUN_BURST = 0x0034;
enum HID_USAGE_GAME_GUN_AUTOMATIC = 0x0035;
enum HID_USAGE_GAME_GUN_SAFETY = 0x0036;
enum HID_USAGE_GENERIC_DEVICE_BATTERY_STRENGTH = 0x0020;
enum HID_USAGE_GENERIC_DEVICE_WIRELESS_CHANNEL = 0x0021;
enum HID_USAGE_GENERIC_DEVICE_WIRELESS_ID = 0x0022;
enum HID_USAGE_GENERIC_DEVICE_DISCOVER_WIRELESS_CONTROL = 0x0023;
enum HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ENTERED = 0x0024;
enum HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ERASED = 0x0025;
enum HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CLEARED = 0x0026;
enum HID_USAGE_KEYBOARD_NOEVENT = 0x0000;
enum HID_USAGE_KEYBOARD_ROLLOVER = 0x0001;
enum HID_USAGE_KEYBOARD_POSTFAIL = 0x0002;
enum HID_USAGE_KEYBOARD_UNDEFINED = 0x0003;
enum HID_USAGE_KEYBOARD_aA = 0x0004;
enum HID_USAGE_KEYBOARD_zZ = 0x001d;
enum HID_USAGE_KEYBOARD_ONE = 0x001e;
enum HID_USAGE_KEYBOARD_ZERO = 0x0027;
enum HID_USAGE_KEYBOARD_LCTRL = 0x00e0;
enum HID_USAGE_KEYBOARD_LSHFT = 0x00e1;
enum HID_USAGE_KEYBOARD_LALT = 0x00e2;
enum HID_USAGE_KEYBOARD_LGUI = 0x00e3;
enum HID_USAGE_KEYBOARD_RCTRL = 0x00e4;
enum HID_USAGE_KEYBOARD_RSHFT = 0x00e5;
enum HID_USAGE_KEYBOARD_RALT = 0x00e6;
enum HID_USAGE_KEYBOARD_RGUI = 0x00e7;
enum HID_USAGE_KEYBOARD_SCROLL_LOCK = 0x0047;
enum HID_USAGE_KEYBOARD_NUM_LOCK = 0x0053;
enum HID_USAGE_KEYBOARD_CAPS_LOCK = 0x0039;
enum HID_USAGE_KEYBOARD_F1 = 0x003a;
enum HID_USAGE_KEYBOARD_F2 = 0x003b;
enum HID_USAGE_KEYBOARD_F3 = 0x003c;
enum HID_USAGE_KEYBOARD_F4 = 0x003d;
enum HID_USAGE_KEYBOARD_F5 = 0x003e;
enum HID_USAGE_KEYBOARD_F6 = 0x003f;
enum HID_USAGE_KEYBOARD_F7 = 0x0040;
enum HID_USAGE_KEYBOARD_F8 = 0x0041;
enum HID_USAGE_KEYBOARD_F9 = 0x0042;
enum HID_USAGE_KEYBOARD_F10 = 0x0043;
enum HID_USAGE_KEYBOARD_F11 = 0x0044;
enum HID_USAGE_KEYBOARD_F12 = 0x0045;
enum HID_USAGE_KEYBOARD_F13 = 0x0068;
enum HID_USAGE_KEYBOARD_F14 = 0x0069;
enum HID_USAGE_KEYBOARD_F15 = 0x006a;
enum HID_USAGE_KEYBOARD_F16 = 0x006b;
enum HID_USAGE_KEYBOARD_F17 = 0x006c;
enum HID_USAGE_KEYBOARD_F18 = 0x006d;
enum HID_USAGE_KEYBOARD_F19 = 0x006e;
enum HID_USAGE_KEYBOARD_F20 = 0x006f;
enum HID_USAGE_KEYBOARD_F21 = 0x0070;
enum HID_USAGE_KEYBOARD_F22 = 0x0071;
enum HID_USAGE_KEYBOARD_F23 = 0x0072;
enum HID_USAGE_KEYBOARD_F24 = 0x0073;
enum HID_USAGE_KEYBOARD_RETURN = 0x0028;
enum HID_USAGE_KEYBOARD_ESCAPE = 0x0029;
enum HID_USAGE_KEYBOARD_DELETE = 0x002a;
enum HID_USAGE_KEYBOARD_PRINT_SCREEN = 0x0046;
enum HID_USAGE_KEYBOARD_DELETE_FORWARD = 0x004c;
enum HID_USAGE_LED_NUM_LOCK = 0x0001;
enum HID_USAGE_LED_CAPS_LOCK = 0x0002;
enum HID_USAGE_LED_SCROLL_LOCK = 0x0003;
enum HID_USAGE_LED_COMPOSE = 0x0004;
enum HID_USAGE_LED_KANA = 0x0005;
enum HID_USAGE_LED_POWER = 0x0006;
enum HID_USAGE_LED_SHIFT = 0x0007;
enum HID_USAGE_LED_DO_NOT_DISTURB = 0x0008;
enum HID_USAGE_LED_MUTE = 0x0009;
enum HID_USAGE_LED_TONE_ENABLE = 0x000a;
enum HID_USAGE_LED_HIGH_CUT_FILTER = 0x000b;
enum HID_USAGE_LED_LOW_CUT_FILTER = 0x000c;
enum HID_USAGE_LED_EQUALIZER_ENABLE = 0x000d;
enum HID_USAGE_LED_SOUND_FIELD_ON = 0x000e;
enum HID_USAGE_LED_SURROUND_FIELD_ON = 0x000f;
enum HID_USAGE_LED_REPEAT = 0x0010;
enum HID_USAGE_LED_STEREO = 0x0011;
enum HID_USAGE_LED_SAMPLING_RATE_DETECT = 0x0012;
enum HID_USAGE_LED_SPINNING = 0x0013;
enum HID_USAGE_LED_CAV = 0x0014;
enum HID_USAGE_LED_CLV = 0x0015;
enum HID_USAGE_LED_RECORDING_FORMAT_DET = 0x0016;
enum HID_USAGE_LED_OFF_HOOK = 0x0017;
enum HID_USAGE_LED_RING = 0x0018;
enum HID_USAGE_LED_MESSAGE_WAITING = 0x0019;
enum HID_USAGE_LED_DATA_MODE = 0x001a;
enum HID_USAGE_LED_BATTERY_OPERATION = 0x001b;
enum HID_USAGE_LED_BATTERY_OK = 0x001c;
enum HID_USAGE_LED_BATTERY_LOW = 0x001d;
enum HID_USAGE_LED_SPEAKER = 0x001e;
enum HID_USAGE_LED_HEAD_SET = 0x001f;
enum HID_USAGE_LED_HOLD = 0x0020;
enum HID_USAGE_LED_MICROPHONE = 0x0021;
enum HID_USAGE_LED_COVERAGE = 0x0022;
enum HID_USAGE_LED_NIGHT_MODE = 0x0023;
enum HID_USAGE_LED_SEND_CALLS = 0x0024;
enum HID_USAGE_LED_CALL_PICKUP = 0x0025;
enum HID_USAGE_LED_CONFERENCE = 0x0026;
enum HID_USAGE_LED_STAND_BY = 0x0027;
enum HID_USAGE_LED_CAMERA_ON = 0x0028;
enum HID_USAGE_LED_CAMERA_OFF = 0x0029;
enum HID_USAGE_LED_ON_LINE = 0x002a;
enum HID_USAGE_LED_OFF_LINE = 0x002b;
enum HID_USAGE_LED_BUSY = 0x002c;
enum HID_USAGE_LED_READY = 0x002d;
enum HID_USAGE_LED_PAPER_OUT = 0x002e;
enum HID_USAGE_LED_PAPER_JAM = 0x002f;
enum HID_USAGE_LED_REMOTE = 0x0030;
enum HID_USAGE_LED_FORWARD = 0x0031;
enum HID_USAGE_LED_REVERSE = 0x0032;
enum HID_USAGE_LED_STOP = 0x0033;
enum HID_USAGE_LED_REWIND = 0x0034;
enum HID_USAGE_LED_FAST_FORWARD = 0x0035;
enum HID_USAGE_LED_PLAY = 0x0036;
enum HID_USAGE_LED_PAUSE = 0x0037;
enum HID_USAGE_LED_RECORD = 0x0038;
enum HID_USAGE_LED_ERROR = 0x0039;
enum HID_USAGE_LED_SELECTED_INDICATOR = 0x003a;
enum HID_USAGE_LED_IN_USE_INDICATOR = 0x003b;
enum HID_USAGE_LED_MULTI_MODE_INDICATOR = 0x003c;
enum HID_USAGE_LED_INDICATOR_ON = 0x003d;
enum HID_USAGE_LED_INDICATOR_FLASH = 0x003e;
enum HID_USAGE_LED_INDICATOR_SLOW_BLINK = 0x003f;
enum HID_USAGE_LED_INDICATOR_FAST_BLINK = 0x0040;
enum HID_USAGE_LED_INDICATOR_OFF = 0x0041;
enum HID_USAGE_LED_FLASH_ON_TIME = 0x0042;
enum HID_USAGE_LED_SLOW_BLINK_ON_TIME = 0x0043;
enum HID_USAGE_LED_SLOW_BLINK_OFF_TIME = 0x0044;
enum HID_USAGE_LED_FAST_BLINK_ON_TIME = 0x0045;
enum HID_USAGE_LED_FAST_BLINK_OFF_TIME = 0x0046;
enum HID_USAGE_LED_INDICATOR_COLOR = 0x0047;
enum HID_USAGE_LED_RED = 0x0048;
enum HID_USAGE_LED_GREEN = 0x0049;
enum HID_USAGE_LED_AMBER = 0x004a;
enum HID_USAGE_LED_GENERIC_INDICATOR = 0x004b;
enum HID_USAGE_LED_SYSTEM_SUSPEND = 0x004c;
enum HID_USAGE_LED_EXTERNAL_POWER = 0x004d;
enum HID_USAGE_TELEPHONY_PHONE = 0x0001;
enum HID_USAGE_TELEPHONY_ANSWERING_MACHINE = 0x0002;
enum HID_USAGE_TELEPHONY_MESSAGE_CONTROLS = 0x0003;
enum HID_USAGE_TELEPHONY_HANDSET = 0x0004;
enum HID_USAGE_TELEPHONY_HEADSET = 0x0005;
enum HID_USAGE_TELEPHONY_KEYPAD = 0x0006;
enum HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON = 0x0007;
enum HID_USAGE_TELEPHONY_REDIAL = 0x0024;
enum HID_USAGE_TELEPHONY_TRANSFER = 0x0025;
enum HID_USAGE_TELEPHONY_DROP = 0x0026;
enum HID_USAGE_TELEPHONY_LINE = 0x002a;
enum HID_USAGE_TELEPHONY_RING_ENABLE = 0x002d;
enum HID_USAGE_TELEPHONY_SEND = 0x0031;
enum HID_USAGE_TELEPHONY_KEYPAD_0 = 0x00b0;
enum HID_USAGE_TELEPHONY_KEYPAD_D = 0x00bf;
enum HID_USAGE_TELEPHONY_HOST_AVAILABLE = 0x00f1;
enum HID_USAGE_CONSUMERCTRL = 0x0001;
enum HID_USAGE_CONSUMER_CHANNEL_INCREMENT = 0x009c;
enum HID_USAGE_CONSUMER_CHANNEL_DECREMENT = 0x009d;
enum HID_USAGE_CONSUMER_PLAY = 0x00b0;
enum HID_USAGE_CONSUMER_PAUSE = 0x00b1;
enum HID_USAGE_CONSUMER_RECORD = 0x00b2;
enum HID_USAGE_CONSUMER_FAST_FORWARD = 0x00b3;
enum HID_USAGE_CONSUMER_REWIND = 0x00b4;
enum HID_USAGE_CONSUMER_SCAN_NEXT_TRACK = 0x00b5;
enum HID_USAGE_CONSUMER_SCAN_PREV_TRACK = 0x00b6;
enum HID_USAGE_CONSUMER_STOP = 0x00b7;
enum HID_USAGE_CONSUMER_PLAY_PAUSE = 0x00cd;
enum HID_USAGE_CONSUMER_GAMEDVR_OPEN_GAMEBAR = 0x00d0;
enum HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_RECORD = 0x00d1;
enum HID_USAGE_CONSUMER_GAMEDVR_RECORD_CLIP = 0x00d2;
enum HID_USAGE_CONSUMER_GAMEDVR_SCREENSHOT = 0x00d3;
enum HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_INDICATOR = 0x00d4;
enum HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_MICROPHONE = 0x00d5;
enum HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_CAMERA = 0x00d6;
enum HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_BROADCAST = 0x00d7;
enum HID_USAGE_CONSUMER_VOLUME = 0x00e0;
enum HID_USAGE_CONSUMER_BALANCE = 0x00e1;
enum HID_USAGE_CONSUMER_MUTE = 0x00e2;
enum HID_USAGE_CONSUMER_BASS = 0x00e3;
enum HID_USAGE_CONSUMER_TREBLE = 0x00e4;
enum HID_USAGE_CONSUMER_BASS_BOOST = 0x00e5;
enum HID_USAGE_CONSUMER_SURROUND_MODE = 0x00e6;
enum HID_USAGE_CONSUMER_LOUDNESS = 0x00e7;
enum HID_USAGE_CONSUMER_MPX = 0x00e8;
enum HID_USAGE_CONSUMER_VOLUME_INCREMENT = 0x00e9;
enum HID_USAGE_CONSUMER_VOLUME_DECREMENT = 0x00ea;
enum HID_USAGE_CONSUMER_BASS_INCREMENT = 0x0152;
enum HID_USAGE_CONSUMER_BASS_DECREMENT = 0x0153;
enum HID_USAGE_CONSUMER_TREBLE_INCREMENT = 0x0154;
enum HID_USAGE_CONSUMER_TREBLE_DECREMENT = 0x0155;
enum HID_USAGE_CONSUMER_AL_CONFIGURATION = 0x0183;
enum HID_USAGE_CONSUMER_AL_EMAIL = 0x018a;
enum HID_USAGE_CONSUMER_AL_CALCULATOR = 0x0192;
enum HID_USAGE_CONSUMER_AL_BROWSER = 0x0194;
enum HID_USAGE_CONSUMER_AL_SEARCH = 0x01c6;
enum HID_USAGE_CONSUMER_AC_SEARCH = 0x0221;
enum HID_USAGE_CONSUMER_AC_GOTO = 0x0222;
enum HID_USAGE_CONSUMER_AC_HOME = 0x0223;
enum HID_USAGE_CONSUMER_AC_BACK = 0x0224;
enum HID_USAGE_CONSUMER_AC_FORWARD = 0x0225;
enum HID_USAGE_CONSUMER_AC_STOP = 0x0226;
enum HID_USAGE_CONSUMER_AC_REFRESH = 0x0227;
enum HID_USAGE_CONSUMER_AC_PREVIOUS = 0x0228;
enum HID_USAGE_CONSUMER_AC_NEXT = 0x0229;
enum HID_USAGE_CONSUMER_AC_BOOKMARKS = 0x022a;
enum HID_USAGE_CONSUMER_AC_PAN = 0x0238;
enum HID_USAGE_CONSUMER_EXTENDED_KEYBOARD_ATTRIBUTES_COLLECTION = 0x02c0;
enum HID_USAGE_CONSUMER_KEYBOARD_FORM_FACTOR = 0x02c1;
enum HID_USAGE_CONSUMER_KEYBOARD_KEY_TYPE = 0x02c2;
enum HID_USAGE_CONSUMER_KEYBOARD_PHYSICAL_LAYOUT = 0x02c3;
enum HID_USAGE_CONSUMER_VENDOR_SPECIFIC_KEYBOARD_PHYSICAL_LAYOUT = 0x02c4;
enum HID_USAGE_CONSUMER_KEYBOARD_IETF_LANGUAGE_TAG_INDEX = 0x02c5;
enum HID_USAGE_CONSUMER_IMPLEMENTED_KEYBOARD_INPUT_ASSIST_CONTROLS = 0x02c6;
enum HID_USAGE_DIGITIZER_DIGITIZER = 0x0001;
enum HID_USAGE_DIGITIZER_PEN = 0x0002;
enum HID_USAGE_DIGITIZER_LIGHT_PEN = 0x0003;
enum HID_USAGE_DIGITIZER_TOUCH_SCREEN = 0x0004;
enum HID_USAGE_DIGITIZER_TOUCH_PAD = 0x0005;
enum HID_USAGE_DIGITIZER_WHITE_BOARD = 0x0006;
enum HID_USAGE_DIGITIZER_COORD_MEASURING = 0x0007;
enum HID_USAGE_DIGITIZER_3D_DIGITIZER = 0x0008;
enum HID_USAGE_DIGITIZER_STEREO_PLOTTER = 0x0009;
enum HID_USAGE_DIGITIZER_ARTICULATED_ARM = 0x000a;
enum HID_USAGE_DIGITIZER_ARMATURE = 0x000b;
enum HID_USAGE_DIGITIZER_MULTI_POINT = 0x000c;
enum HID_USAGE_DIGITIZER_FREE_SPACE_WAND = 0x000d;
enum HID_USAGE_DIGITIZER_HEAT_MAP = 0x000f;
enum HID_USAGE_DIGITIZER_STYLUS = 0x0020;
enum HID_USAGE_DIGITIZER_PUCK = 0x0021;
enum HID_USAGE_DIGITIZER_FINGER = 0x0022;
enum HID_USAGE_DIGITIZER_TABLET_FUNC_KEYS = 0x0039;
enum HID_USAGE_DIGITIZER_PROG_CHANGE_KEYS = 0x003a;
enum HID_USAGE_DIGITIZER_TIP_PRESSURE = 0x0030;
enum HID_USAGE_DIGITIZER_BARREL_PRESSURE = 0x0031;
enum HID_USAGE_DIGITIZER_IN_RANGE = 0x0032;
enum HID_USAGE_DIGITIZER_TOUCH = 0x0033;
enum HID_USAGE_DIGITIZER_UNTOUCH = 0x0034;
enum HID_USAGE_DIGITIZER_TAP = 0x0035;
enum HID_USAGE_DIGITIZER_QUALITY = 0x0036;
enum HID_USAGE_DIGITIZER_DATA_VALID = 0x0037;
enum HID_USAGE_DIGITIZER_TRANSDUCER_INDEX = 0x0038;
enum HID_USAGE_DIGITIZER_BATTERY_STRENGTH = 0x003b;
enum HID_USAGE_DIGITIZER_INVERT = 0x003c;
enum HID_USAGE_DIGITIZER_X_TILT = 0x003d;
enum HID_USAGE_DIGITIZER_Y_TILT = 0x003e;
enum HID_USAGE_DIGITIZER_AZIMUTH = 0x003f;
enum HID_USAGE_DIGITIZER_ALTITUDE = 0x0040;
enum HID_USAGE_DIGITIZER_TWIST = 0x0041;
enum HID_USAGE_DIGITIZER_TIP_SWITCH = 0x0042;
enum HID_USAGE_DIGITIZER_SECONDARY_TIP_SWITCH = 0x0043;
enum HID_USAGE_DIGITIZER_BARREL_SWITCH = 0x0044;
enum HID_USAGE_DIGITIZER_ERASER = 0x0045;
enum HID_USAGE_DIGITIZER_TABLET_PICK = 0x0046;
enum HID_USAGE_DIGITIZER_TRANSDUCER_SERIAL = 0x005b;
enum HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VENDOR_ID = 0x006a;
enum HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VERSION = 0x006b;
enum HID_USAGE_DIGITIZER_HEAT_MAP_FRAME_DATA = 0x006c;
enum HID_USAGE_DIGITIZER_TRANSDUCER_SERIAL_PART2 = 0x006e;
enum HID_USAGE_DIGITIZER_TRANSDUCER_VENDOR = 0x0091;
enum HID_USAGE_DIGITIZER_TRANSDUCER_PRODUCT = 0x0092;
enum HID_USAGE_DIGITIZER_TRANSDUCER_CONNECTED = 0x00a2;
enum HID_USAGE_HAPTICS_SIMPLE_CONTROLLER = 0x0001;
enum HID_USAGE_HAPTICS_WAVEFORM_LIST = 0x0010;
enum HID_USAGE_HAPTICS_DURATION_LIST = 0x0011;
enum HID_USAGE_HAPTICS_AUTO_TRIGGER = 0x0020;
enum HID_USAGE_HAPTICS_MANUAL_TRIGGER = 0x0021;
enum HID_USAGE_HAPTICS_AUTO_ASSOCIATED_CONTROL = 0x0022;
enum HID_USAGE_HAPTICS_INTENSITY = 0x0023;
enum HID_USAGE_HAPTICS_REPEAT_COUNT = 0x0024;
enum HID_USAGE_HAPTICS_RETRIGGER_PERIOD = 0x0025;
enum HID_USAGE_HAPTICS_WAVEFORM_VENDOR_PAGE = 0x0026;
enum HID_USAGE_HAPTICS_WAVEFORM_VENDOR_ID = 0x0027;
enum HID_USAGE_HAPTICS_WAVEFORM_CUTOFF_TIME = 0x0028;
enum HID_USAGE_HAPTICS_WAVEFORM_BEGIN = 0x1000;
enum HID_USAGE_HAPTICS_WAVEFORM_STOP = 0x1001;
enum HID_USAGE_HAPTICS_WAVEFORM_NULL = 0x1002;
enum HID_USAGE_HAPTICS_WAVEFORM_CLICK = 0x1003;
enum HID_USAGE_HAPTICS_WAVEFORM_BUZZ = 0x1004;
enum HID_USAGE_HAPTICS_WAVEFORM_RUMBLE = 0x1005;
enum HID_USAGE_HAPTICS_WAVEFORM_PRESS = 0x1006;
enum HID_USAGE_HAPTICS_WAVEFORM_RELEASE = 0x1007;
enum HID_USAGE_HAPTICS_WAVEFORM_END = 0x1fff;
enum HID_USAGE_HAPTICS_WAVEFORM_VENDOR_BEGIN = 0x2000;
enum HID_USAGE_HAPTICS_WAVEFORM_VENDOR_END = 0x2fff;
enum HID_USAGE_ALPHANUMERIC_ALPHANUMERIC_DISPLAY = 0x0001;
enum HID_USAGE_ALPHANUMERIC_BITMAPPED_DISPLAY = 0x0002;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_ATTRIBUTES_REPORT = 0x0020;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_CONTROL_REPORT = 0x0024;
enum HID_USAGE_ALPHANUMERIC_CHARACTER_REPORT = 0x002b;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_STATUS = 0x002d;
enum HID_USAGE_ALPHANUMERIC_CURSOR_POSITION_REPORT = 0x0032;
enum HID_USAGE_ALPHANUMERIC_FONT_REPORT = 0x003b;
enum HID_USAGE_ALPHANUMERIC_FONT_DATA = 0x003c;
enum HID_USAGE_ALPHANUMERIC_CHARACTER_ATTRIBUTE = 0x0048;
enum HID_USAGE_ALPHANUMERIC_PALETTE_REPORT = 0x0085;
enum HID_USAGE_ALPHANUMERIC_PALETTE_DATA = 0x0088;
enum HID_USAGE_ALPHANUMERIC_BLIT_REPORT = 0x008a;
enum HID_USAGE_ALPHANUMERIC_BLIT_DATA = 0x008f;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON = 0x0090;
enum HID_USAGE_ALPHANUMERIC_ASCII_CHARACTER_SET = 0x0021;
enum HID_USAGE_ALPHANUMERIC_DATA_READ_BACK = 0x0022;
enum HID_USAGE_ALPHANUMERIC_FONT_READ_BACK = 0x0023;
enum HID_USAGE_ALPHANUMERIC_CLEAR_DISPLAY = 0x0025;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_ENABLE = 0x0026;
enum HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_DELAY = 0x0027;
enum HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_ENABLE = 0x0028;
enum HID_USAGE_ALPHANUMERIC_VERTICAL_SCROLL = 0x0029;
enum HID_USAGE_ALPHANUMERIC_HORIZONTAL_SCROLL = 0x002a;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_DATA = 0x002c;
enum HID_USAGE_ALPHANUMERIC_STATUS_NOT_READY = 0x002e;
enum HID_USAGE_ALPHANUMERIC_STATUS_READY = 0x002f;
enum HID_USAGE_ALPHANUMERIC_ERR_NOT_A_LOADABLE_CHARACTER = 0x0030;
enum HID_USAGE_ALPHANUMERIC_ERR_FONT_DATA_CANNOT_BE_READ = 0x0031;
enum HID_USAGE_ALPHANUMERIC_ROW = 0x0033;
enum HID_USAGE_ALPHANUMERIC_COLUMN = 0x0034;
enum HID_USAGE_ALPHANUMERIC_ROWS = 0x0035;
enum HID_USAGE_ALPHANUMERIC_COLUMNS = 0x0036;
enum HID_USAGE_ALPHANUMERIC_CURSOR_PIXEL_POSITIONING = 0x0037;
enum HID_USAGE_ALPHANUMERIC_CURSOR_MODE = 0x0038;
enum HID_USAGE_ALPHANUMERIC_CURSOR_ENABLE = 0x0039;
enum HID_USAGE_ALPHANUMERIC_CURSOR_BLINK = 0x003a;
enum HID_USAGE_ALPHANUMERIC_CHAR_WIDTH = 0x003d;
enum HID_USAGE_ALPHANUMERIC_CHAR_HEIGHT = 0x003e;
enum HID_USAGE_ALPHANUMERIC_CHAR_SPACING_HORIZONTAL = 0x003f;
enum HID_USAGE_ALPHANUMERIC_CHAR_SPACING_VERTICAL = 0x0040;
enum HID_USAGE_ALPHANUMERIC_UNICODE_CHAR_SET = 0x0041;
enum HID_USAGE_ALPHANUMERIC_FONT_7_SEGMENT = 0x0042;
enum HID_USAGE_ALPHANUMERIC_7_SEGMENT_DIRECT_MAP = 0x0043;
enum HID_USAGE_ALPHANUMERIC_FONT_14_SEGMENT = 0x0044;
enum HID_USAGE_ALPHANUMERIC_14_SEGMENT_DIRECT_MAP = 0x0045;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_BRIGHTNESS = 0x0046;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_CONTRAST = 0x0047;
enum HID_USAGE_ALPHANUMERIC_ATTRIBUTE_READBACK = 0x0049;
enum HID_USAGE_ALPHANUMERIC_ATTRIBUTE_DATA = 0x004a;
enum HID_USAGE_ALPHANUMERIC_CHAR_ATTR_ENHANCE = 0x004b;
enum HID_USAGE_ALPHANUMERIC_CHAR_ATTR_UNDERLINE = 0x004c;
enum HID_USAGE_ALPHANUMERIC_CHAR_ATTR_BLINK = 0x004d;
enum HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_X = 0x0080;
enum HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_Y = 0x0081;
enum HID_USAGE_ALPHANUMERIC_BIT_DEPTH_FORMAT = 0x0083;
enum HID_USAGE_ALPHANUMERIC_DISPLAY_ORIENTATION = 0x0084;
enum HID_USAGE_ALPHANUMERIC_PALETTE_DATA_SIZE = 0x0086;
enum HID_USAGE_ALPHANUMERIC_PALETTE_DATA_OFFSET = 0x0087;
enum HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X1 = 0x008b;
enum HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y1 = 0x008c;
enum HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X2 = 0x008d;
enum HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y2 = 0x008e;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_ID = 0x0091;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_SIDE = 0x0092;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET1 = 0x0093;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET2 = 0x0094;
enum HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_REPORT = 0x0095;
enum HID_USAGE_LAMPARRAY = 0x0001;
enum HID_USAGE_LAMPARRAY_ATTRBIUTES_REPORT = 0x0002;
enum HID_USAGE_LAMPARRAY_LAMP_COUNT = 0x0003;
enum HID_USAGE_LAMPARRAY_BOUNDING_BOX_WIDTH_IN_MICROMETERS = 0x0004;
enum HID_USAGE_LAMPARRAY_BOUNDING_BOX_HEIGHT_IN_MICROMETERS = 0x0005;
enum HID_USAGE_LAMPARRAY_BOUNDING_BOX_DEPTH_IN_MICROMETERS = 0x0006;
enum HID_USAGE_LAMPARRAY_KIND = 0x0007;
enum HID_USAGE_LAMPARRAY_MIN_UPDATE_INTERVAL_IN_MICROSECONDS = 0x0008;
enum HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_REQUEST_REPORT = 0x0020;
enum HID_USAGE_LAMPARRAY_LAMP_ID = 0x0021;
enum HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_RESPONSE_REPORT = 0x0022;
enum HID_USAGE_LAMPARRAY_POSITION_X_IN_MICROMETERS = 0x0023;
enum HID_USAGE_LAMPARRAY_POSITION_Y_IN_MICROMETERS = 0x0024;
enum HID_USAGE_LAMPARRAY_POSITION_Z_IN_MICROMETERS = 0x0025;
enum HID_USAGE_LAMPARRAY_LAMP_PURPOSES = 0x0026;
enum HID_USAGE_LAMPARRAY_UPDATE_LATENCY_IN_MICROSECONDS = 0x0027;
enum HID_USAGE_LAMPARRAY_RED_LEVEL_COUNT = 0x0028;
enum HID_USAGE_LAMPARRAY_GREEN_LEVEL_COUNT = 0x0029;
enum HID_USAGE_LAMPARRAY_BLUE_LEVEL_COUNT = 0x002a;
enum HID_USAGE_LAMPARRAY_INTENSITY_LEVEL_COUNT = 0x002b;
enum HID_USAGE_LAMPARRAY_IS_PROGRAMMABLE = 0x002c;
enum HID_USAGE_LAMPARRAY_INPUT_BINDING = 0x002d;
enum HID_USAGE_LAMPARRAY_LAMP_MULTI_UPDATE_REPORT = 0x0050;
enum HID_USAGE_LAMPARRAY_LAMP_RED_UPDATE_CHANNEL = 0x0051;
enum HID_USAGE_LAMPARRAY_LAMP_GREEN_UPDATE_CHANNEL = 0x0052;
enum HID_USAGE_LAMPARRAY_LAMP_BLUE_UPDATE_CHANNEL = 0x0053;
enum HID_USAGE_LAMPARRAY_LAMP_INTENSITY_UPDATE_CHANNEL = 0x0054;
enum HID_USAGE_LAMPARRAY_LAMP_UPDATE_FLAGS = 0x0055;
enum HID_USAGE_LAMPARRAY_LAMP_RANGE_UPDATE_REPORT = 0x0060;
enum HID_USAGE_LAMPARRAY_LAMP_ID_START = 0x0061;
enum HID_USAGE_LAMPARRAY_LAMP_ID_END = 0x0062;
enum HID_USAGE_LAMPARRAY_CONTROL_REPORT = 0x0070;
enum HID_USAGE_LAMPARRAY_AUTONOMOUS_MODE = 0x0071;
enum HID_USAGE_CAMERA_AUTO_FOCUS = 0x0020;
enum HID_USAGE_CAMERA_SHUTTER = 0x0021;
enum HID_USAGE_MS_BTH_HF_DIALNUMBER = 0x0021;
enum HID_USAGE_MS_BTH_HF_DIALMEMORY = 0x0022;
enum DD_KEYBOARD_DEVICE_NAME = "\\Device\\KeyboardClass";
enum DD_KEYBOARD_DEVICE_NAME_U = "\\Device\\KeyboardClass";
enum IOCTL_KEYBOARD_QUERY_ATTRIBUTES = 0x000b0000;
enum IOCTL_KEYBOARD_SET_TYPEMATIC = 0x000b0004;
enum IOCTL_KEYBOARD_SET_INDICATORS = 0x000b0008;
enum IOCTL_KEYBOARD_QUERY_TYPEMATIC = 0x000b0020;
enum IOCTL_KEYBOARD_QUERY_INDICATORS = 0x000b0040;
enum IOCTL_KEYBOARD_QUERY_INDICATOR_TRANSLATION = 0x000b0080;
enum IOCTL_KEYBOARD_INSERT_DATA = 0x000b0100;
enum IOCTL_KEYBOARD_QUERY_EXTENDED_ATTRIBUTES = 0x000b0200;
enum IOCTL_KEYBOARD_QUERY_IME_STATUS = 0x000b1000;
enum IOCTL_KEYBOARD_SET_IME_STATUS = 0x000b1004;
enum GUID_DEVINTERFACE_KEYBOARD = GUID(0x884b96c3, 0x56ef, 0x11d1, [0xbc, 0x8c, 0x0, 0xa0, 0xc9, 0x14, 0x5, 0xdd]);
enum KEYBOARD_OVERRUN_MAKE_CODE = 0x000000ff;
enum KEY_MAKE = 0x00000000;
enum KEY_BREAK = 0x00000001;
enum KEY_E0 = 0x00000002;
enum KEY_E1 = 0x00000004;
enum KEY_TERMSRV_SET_LED = 0x00000008;
enum KEY_TERMSRV_SHADOW = 0x00000010;
enum KEY_TERMSRV_VKPACKET = 0x00000020;
enum KEY_RIM_VKEY = 0x00000040;
enum KEY_FROM_KEYBOARD_OVERRIDER = 0x00000080;
enum KEY_UNICODE_SEQUENCE_ITEM = 0x00000100;
enum KEY_UNICODE_SEQUENCE_END = 0x00000200;
enum KEYBOARD_EXTENDED_ATTRIBUTES_STRUCT_VERSION_1 = 0x00000001;
enum KEYBOARD_LED_INJECTED = 0x00008000;
enum KEYBOARD_SHADOW = 0x00004000;
enum KEYBOARD_KANA_LOCK_ON = 0x00000008;
enum KEYBOARD_CAPS_LOCK_ON = 0x00000004;
enum KEYBOARD_NUM_LOCK_ON = 0x00000002;
enum KEYBOARD_SCROLL_LOCK_ON = 0x00000001;
enum KEYBOARD_ERROR_VALUE_BASE = 0x00002710;
enum DD_MOUSE_DEVICE_NAME = "\\Device\\PointerClass";
enum DD_MOUSE_DEVICE_NAME_U = "\\Device\\PointerClass";
enum IOCTL_MOUSE_QUERY_ATTRIBUTES = 0x000f0000;
enum IOCTL_MOUSE_INSERT_DATA = 0x000f0004;
enum GUID_DEVINTERFACE_MOUSE = GUID(0x378de44c, 0x56ef, 0x11d1, [0xbc, 0x8c, 0x0, 0xa0, 0xc9, 0x14, 0x5, 0xdd]);
enum MOUSE_LEFT_BUTTON_DOWN = 0x00000001;
enum MOUSE_LEFT_BUTTON_UP = 0x00000002;
enum MOUSE_RIGHT_BUTTON_DOWN = 0x00000004;
enum MOUSE_RIGHT_BUTTON_UP = 0x00000008;
enum MOUSE_MIDDLE_BUTTON_DOWN = 0x00000010;
enum MOUSE_MIDDLE_BUTTON_UP = 0x00000020;
enum MOUSE_BUTTON_1_DOWN = 0x00000001;
enum MOUSE_BUTTON_1_UP = 0x00000002;
enum MOUSE_BUTTON_2_DOWN = 0x00000004;
enum MOUSE_BUTTON_2_UP = 0x00000008;
enum MOUSE_BUTTON_3_DOWN = 0x00000010;
enum MOUSE_BUTTON_3_UP = 0x00000020;
enum MOUSE_BUTTON_4_DOWN = 0x00000040;
enum MOUSE_BUTTON_4_UP = 0x00000080;
enum MOUSE_BUTTON_5_DOWN = 0x00000100;
enum MOUSE_BUTTON_5_UP = 0x00000200;
enum MOUSE_WHEEL = 0x00000400;
enum MOUSE_HWHEEL = 0x00000800;
enum MOUSE_MOVE_RELATIVE = 0x00000000;
enum MOUSE_MOVE_ABSOLUTE = 0x00000001;
enum MOUSE_VIRTUAL_DESKTOP = 0x00000002;
enum MOUSE_ATTRIBUTES_CHANGED = 0x00000004;
enum MOUSE_MOVE_NOCOALESCE = 0x00000008;
enum MOUSE_TERMSRV_SRC_SHADOW = 0x00000100;
enum MOUSE_INPORT_HARDWARE = 0x00000001;
enum MOUSE_I8042_HARDWARE = 0x00000002;
enum MOUSE_SERIAL_HARDWARE = 0x00000004;
enum BALLPOINT_I8042_HARDWARE = 0x00000008;
enum BALLPOINT_SERIAL_HARDWARE = 0x00000010;
enum WHEELMOUSE_I8042_HARDWARE = 0x00000020;
enum WHEELMOUSE_SERIAL_HARDWARE = 0x00000040;
enum MOUSE_HID_HARDWARE = 0x00000080;
enum WHEELMOUSE_HID_HARDWARE = 0x00000100;
enum HORIZONTAL_WHEEL_PRESENT = 0x00008000;
enum MOUSE_ERROR_VALUE_BASE = 0x00004e20;
enum DIRECTINPUT_HEADER_VERSION = 0x00000800;
enum CLSID_DirectInput = GUID(0x25e609e0, 0xb259, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum CLSID_DirectInputDevice = GUID(0x25e609e1, 0xb259, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum CLSID_DirectInput8 = GUID(0x25e609e4, 0xb259, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum CLSID_DirectInputDevice8 = GUID(0x25e609e5, 0xb259, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_XAxis = GUID(0xa36d02e0, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_YAxis = GUID(0xa36d02e1, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_ZAxis = GUID(0xa36d02e2, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_RxAxis = GUID(0xa36d02f4, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_RyAxis = GUID(0xa36d02f5, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_RzAxis = GUID(0xa36d02e3, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_Slider = GUID(0xa36d02e4, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_Button = GUID(0xa36d02f0, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_Key = GUID(0x55728220, 0xd33c, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_POV = GUID(0xa36d02f2, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_Unknown = GUID(0xa36d02f3, 0xc9f3, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysMouse = GUID(0x6f1d2b60, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysKeyboard = GUID(0x6f1d2b61, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_Joystick = GUID(0x6f1d2b70, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysMouseEm = GUID(0x6f1d2b80, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysMouseEm2 = GUID(0x6f1d2b81, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysKeyboardEm = GUID(0x6f1d2b82, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_SysKeyboardEm2 = GUID(0x6f1d2b83, 0xd5a0, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
enum GUID_ConstantForce = GUID(0x13541c20, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_RampForce = GUID(0x13541c21, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Square = GUID(0x13541c22, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Sine = GUID(0x13541c23, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Triangle = GUID(0x13541c24, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_SawtoothUp = GUID(0x13541c25, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_SawtoothDown = GUID(0x13541c26, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Spring = GUID(0x13541c27, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Damper = GUID(0x13541c28, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Inertia = GUID(0x13541c29, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_Friction = GUID(0x13541c2a, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum GUID_CustomForce = GUID(0x13541c2b, 0x8e33, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
enum DIEFT_ALL = 0x00000000;
enum DIEFT_CONSTANTFORCE = 0x00000001;
enum DIEFT_RAMPFORCE = 0x00000002;
enum DIEFT_PERIODIC = 0x00000003;
enum DIEFT_CONDITION = 0x00000004;
enum DIEFT_CUSTOMFORCE = 0x00000005;
enum DIEFT_HARDWARE = 0x000000ff;
enum DIEFT_FFATTACK = 0x00000200;
enum DIEFT_FFFADE = 0x00000400;
enum DIEFT_SATURATION = 0x00000800;
enum DIEFT_POSNEGCOEFFICIENTS = 0x00001000;
enum DIEFT_POSNEGSATURATION = 0x00002000;
enum DIEFT_DEADBAND = 0x00004000;
enum DIEFT_STARTDELAY = 0x00008000;
enum DI_DEGREES = 0x00000064;
enum DI_FFNOMINALMAX = 0x00002710;
enum DI_SECONDS = 0x000f4240;
enum DIEFF_OBJECTIDS = 0x00000001;
enum DIEFF_OBJECTOFFSETS = 0x00000002;
enum DIEFF_CARTESIAN = 0x00000010;
enum DIEFF_POLAR = 0x00000020;
enum DIEFF_SPHERICAL = 0x00000040;
enum DIEP_DURATION = 0x00000001;
enum DIEP_SAMPLEPERIOD = 0x00000002;
enum DIEP_GAIN = 0x00000004;
enum DIEP_TRIGGERBUTTON = 0x00000008;
enum DIEP_TRIGGERREPEATINTERVAL = 0x00000010;
enum DIEP_AXES = 0x00000020;
enum DIEP_DIRECTION = 0x00000040;
enum DIEP_ENVELOPE = 0x00000080;
enum DIEP_TYPESPECIFICPARAMS = 0x00000100;
enum DIEP_STARTDELAY = 0x00000200;
enum DIEP_ALLPARAMS_DX5 = 0x000001ff;
enum DIEP_ALLPARAMS = 0x000003ff;
enum DIEP_START = 0x20000000;
enum DIEP_NORESTART = 0x40000000;
enum DIEP_NODOWNLOAD = 0x80000000;
enum DIEB_NOTRIGGER = 0xffffffff;
enum DIES_SOLO = 0x00000001;
enum DIES_NODOWNLOAD = 0x80000000;
enum DIEGES_PLAYING = 0x00000001;
enum DIEGES_EMULATED = 0x00000002;
enum DIDEVTYPE_DEVICE = 0x00000001;
enum DIDEVTYPE_MOUSE = 0x00000002;
enum DIDEVTYPE_KEYBOARD = 0x00000003;
enum DIDEVTYPE_JOYSTICK = 0x00000004;
enum DI8DEVCLASS_ALL = 0x00000000;
enum DI8DEVCLASS_DEVICE = 0x00000001;
enum DI8DEVCLASS_POINTER = 0x00000002;
enum DI8DEVCLASS_KEYBOARD = 0x00000003;
enum DI8DEVCLASS_GAMECTRL = 0x00000004;
enum DI8DEVTYPE_DEVICE = 0x00000011;
enum DI8DEVTYPE_MOUSE = 0x00000012;
enum DI8DEVTYPE_KEYBOARD = 0x00000013;
enum DI8DEVTYPE_JOYSTICK = 0x00000014;
enum DI8DEVTYPE_GAMEPAD = 0x00000015;
enum DI8DEVTYPE_DRIVING = 0x00000016;
enum DI8DEVTYPE_FLIGHT = 0x00000017;
enum DI8DEVTYPE_1STPERSON = 0x00000018;
enum DI8DEVTYPE_DEVICECTRL = 0x00000019;
enum DI8DEVTYPE_SCREENPOINTER = 0x0000001a;
enum DI8DEVTYPE_REMOTE = 0x0000001b;
enum DI8DEVTYPE_SUPPLEMENTAL = 0x0000001c;
enum DIDEVTYPE_HID = 0x00010000;
enum DIDEVTYPEMOUSE_UNKNOWN = 0x00000001;
enum DIDEVTYPEMOUSE_TRADITIONAL = 0x00000002;
enum DIDEVTYPEMOUSE_FINGERSTICK = 0x00000003;
enum DIDEVTYPEMOUSE_TOUCHPAD = 0x00000004;
enum DIDEVTYPEMOUSE_TRACKBALL = 0x00000005;
enum DIDEVTYPEKEYBOARD_UNKNOWN = 0x00000000;
enum DIDEVTYPEKEYBOARD_PCXT = 0x00000001;
enum DIDEVTYPEKEYBOARD_OLIVETTI = 0x00000002;
enum DIDEVTYPEKEYBOARD_PCAT = 0x00000003;
enum DIDEVTYPEKEYBOARD_PCENH = 0x00000004;
enum DIDEVTYPEKEYBOARD_NOKIA1050 = 0x00000005;
enum DIDEVTYPEKEYBOARD_NOKIA9140 = 0x00000006;
enum DIDEVTYPEKEYBOARD_NEC98 = 0x00000007;
enum DIDEVTYPEKEYBOARD_NEC98LAPTOP = 0x00000008;
enum DIDEVTYPEKEYBOARD_NEC98106 = 0x00000009;
enum DIDEVTYPEKEYBOARD_JAPAN106 = 0x0000000a;
enum DIDEVTYPEKEYBOARD_JAPANAX = 0x0000000b;
enum DIDEVTYPEKEYBOARD_J3100 = 0x0000000c;
enum DIDEVTYPEJOYSTICK_UNKNOWN = 0x00000001;
enum DIDEVTYPEJOYSTICK_TRADITIONAL = 0x00000002;
enum DIDEVTYPEJOYSTICK_FLIGHTSTICK = 0x00000003;
enum DIDEVTYPEJOYSTICK_GAMEPAD = 0x00000004;
enum DIDEVTYPEJOYSTICK_RUDDER = 0x00000005;
enum DIDEVTYPEJOYSTICK_WHEEL = 0x00000006;
enum DIDEVTYPEJOYSTICK_HEADTRACKER = 0x00000007;
enum DI8DEVTYPEMOUSE_UNKNOWN = 0x00000001;
enum DI8DEVTYPEMOUSE_TRADITIONAL = 0x00000002;
enum DI8DEVTYPEMOUSE_FINGERSTICK = 0x00000003;
enum DI8DEVTYPEMOUSE_TOUCHPAD = 0x00000004;
enum DI8DEVTYPEMOUSE_TRACKBALL = 0x00000005;
enum DI8DEVTYPEMOUSE_ABSOLUTE = 0x00000006;
enum DI8DEVTYPEKEYBOARD_UNKNOWN = 0x00000000;
enum DI8DEVTYPEKEYBOARD_PCXT = 0x00000001;
enum DI8DEVTYPEKEYBOARD_OLIVETTI = 0x00000002;
enum DI8DEVTYPEKEYBOARD_PCAT = 0x00000003;
enum DI8DEVTYPEKEYBOARD_PCENH = 0x00000004;
enum DI8DEVTYPEKEYBOARD_NOKIA1050 = 0x00000005;
enum DI8DEVTYPEKEYBOARD_NOKIA9140 = 0x00000006;
enum DI8DEVTYPEKEYBOARD_NEC98 = 0x00000007;
enum DI8DEVTYPEKEYBOARD_NEC98LAPTOP = 0x00000008;
enum DI8DEVTYPEKEYBOARD_NEC98106 = 0x00000009;
enum DI8DEVTYPEKEYBOARD_JAPAN106 = 0x0000000a;
enum DI8DEVTYPEKEYBOARD_JAPANAX = 0x0000000b;
enum DI8DEVTYPEKEYBOARD_J3100 = 0x0000000c;
enum DI8DEVTYPE_LIMITEDGAMESUBTYPE = 0x00000001;
enum DI8DEVTYPEJOYSTICK_LIMITED = 0x00000001;
enum DI8DEVTYPEJOYSTICK_STANDARD = 0x00000002;
enum DI8DEVTYPEGAMEPAD_LIMITED = 0x00000001;
enum DI8DEVTYPEGAMEPAD_STANDARD = 0x00000002;
enum DI8DEVTYPEGAMEPAD_TILT = 0x00000003;
enum DI8DEVTYPEDRIVING_LIMITED = 0x00000001;
enum DI8DEVTYPEDRIVING_COMBINEDPEDALS = 0x00000002;
enum DI8DEVTYPEDRIVING_DUALPEDALS = 0x00000003;
enum DI8DEVTYPEDRIVING_THREEPEDALS = 0x00000004;
enum DI8DEVTYPEDRIVING_HANDHELD = 0x00000005;
enum DI8DEVTYPEFLIGHT_LIMITED = 0x00000001;
enum DI8DEVTYPEFLIGHT_STICK = 0x00000002;
enum DI8DEVTYPEFLIGHT_YOKE = 0x00000003;
enum DI8DEVTYPEFLIGHT_RC = 0x00000004;
enum DI8DEVTYPE1STPERSON_LIMITED = 0x00000001;
enum DI8DEVTYPE1STPERSON_UNKNOWN = 0x00000002;
enum DI8DEVTYPE1STPERSON_SIXDOF = 0x00000003;
enum DI8DEVTYPE1STPERSON_SHOOTER = 0x00000004;
enum DI8DEVTYPESCREENPTR_UNKNOWN = 0x00000002;
enum DI8DEVTYPESCREENPTR_LIGHTGUN = 0x00000003;
enum DI8DEVTYPESCREENPTR_LIGHTPEN = 0x00000004;
enum DI8DEVTYPESCREENPTR_TOUCH = 0x00000005;
enum DI8DEVTYPEREMOTE_UNKNOWN = 0x00000002;
enum DI8DEVTYPEDEVICECTRL_UNKNOWN = 0x00000002;
enum DI8DEVTYPEDEVICECTRL_COMMSSELECTION = 0x00000003;
enum DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED = 0x00000004;
enum DI8DEVTYPESUPPLEMENTAL_UNKNOWN = 0x00000002;
enum DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER = 0x00000003;
enum DI8DEVTYPESUPPLEMENTAL_HEADTRACKER = 0x00000004;
enum DI8DEVTYPESUPPLEMENTAL_HANDTRACKER = 0x00000005;
enum DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE = 0x00000006;
enum DI8DEVTYPESUPPLEMENTAL_SHIFTER = 0x00000007;
enum DI8DEVTYPESUPPLEMENTAL_THROTTLE = 0x00000008;
enum DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE = 0x00000009;
enum DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS = 0x0000000a;
enum DI8DEVTYPESUPPLEMENTAL_DUALPEDALS = 0x0000000b;
enum DI8DEVTYPESUPPLEMENTAL_THREEPEDALS = 0x0000000c;
enum DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS = 0x0000000d;
enum DIDC_ATTACHED = 0x00000001;
enum DIDC_POLLEDDEVICE = 0x00000002;
enum DIDC_EMULATED = 0x00000004;
enum DIDC_POLLEDDATAFORMAT = 0x00000008;
enum DIDC_FORCEFEEDBACK = 0x00000100;
enum DIDC_FFATTACK = 0x00000200;
enum DIDC_FFFADE = 0x00000400;
enum DIDC_SATURATION = 0x00000800;
enum DIDC_POSNEGCOEFFICIENTS = 0x00001000;
enum DIDC_POSNEGSATURATION = 0x00002000;
enum DIDC_DEADBAND = 0x00004000;
enum DIDC_STARTDELAY = 0x00008000;
enum DIDC_ALIAS = 0x00010000;
enum DIDC_PHANTOM = 0x00020000;
enum DIDC_HIDDEN = 0x00040000;
enum DIDFT_ALL = 0x00000000;
enum DIDFT_RELAXIS = 0x00000001;
enum DIDFT_ABSAXIS = 0x00000002;
enum DIDFT_AXIS = 0x00000003;
enum DIDFT_PSHBUTTON = 0x00000004;
enum DIDFT_TGLBUTTON = 0x00000008;
enum DIDFT_BUTTON = 0x0000000c;
enum DIDFT_POV = 0x00000010;
enum DIDFT_COLLECTION = 0x00000040;
enum DIDFT_NODATA = 0x00000080;
enum DIDFT_ANYINSTANCE = 0x00ffff00;
enum DIDFT_INSTANCEMASK = 0x00ffff00;
enum DIDFT_FFACTUATOR = 0x01000000;
enum DIDFT_FFEFFECTTRIGGER = 0x02000000;
enum DIDFT_OUTPUT = 0x10000000;
enum DIDFT_VENDORDEFINED = 0x04000000;
enum DIDFT_ALIAS = 0x08000000;
enum DIDFT_NOCOLLECTION = 0x00ffff00;
enum DIDF_ABSAXIS = 0x00000001;
enum DIDF_RELAXIS = 0x00000002;
enum DIA_FORCEFEEDBACK = 0x00000001;
enum DIA_APPMAPPED = 0x00000002;
enum DIA_APPNOMAP = 0x00000004;
enum DIA_NORANGE = 0x00000008;
enum DIA_APPFIXED = 0x00000010;
enum DIAH_UNMAPPED = 0x00000000;
enum DIAH_USERCONFIG = 0x00000001;
enum DIAH_APPREQUESTED = 0x00000002;
enum DIAH_HWAPP = 0x00000004;
enum DIAH_HWDEFAULT = 0x00000008;
enum DIAH_DEFAULT = 0x00000020;
enum DIAH_ERROR = 0x80000000;
enum DIAFTS_NEWDEVICELOW = 0xffffffff;
enum DIAFTS_NEWDEVICEHIGH = 0xffffffff;
enum DIAFTS_UNUSEDDEVICELOW = 0x00000000;
enum DIAFTS_UNUSEDDEVICEHIGH = 0x00000000;
enum DIDBAM_DEFAULT = 0x00000000;
enum DIDBAM_PRESERVE = 0x00000001;
enum DIDBAM_INITIALIZE = 0x00000002;
enum DIDBAM_HWDEFAULTS = 0x00000004;
enum DIDSAM_DEFAULT = 0x00000000;
enum DIDSAM_NOUSER = 0x00000001;
enum DIDSAM_FORCESAVE = 0x00000002;
enum DICD_DEFAULT = 0x00000000;
enum DICD_EDIT = 0x00000001;
enum DIDIFT_CONFIGURATION = 0x00000001;
enum DIDIFT_OVERLAY = 0x00000002;
enum DIDAL_CENTERED = 0x00000000;
enum DIDAL_LEFTALIGNED = 0x00000001;
enum DIDAL_RIGHTALIGNED = 0x00000002;
enum DIDAL_MIDDLE = 0x00000000;
enum DIDAL_TOPALIGNED = 0x00000004;
enum DIDAL_BOTTOMALIGNED = 0x00000008;
enum DIDOI_FFACTUATOR = 0x00000001;
enum DIDOI_FFEFFECTTRIGGER = 0x00000002;
enum DIDOI_POLLED = 0x00008000;
enum DIDOI_ASPECTPOSITION = 0x00000100;
enum DIDOI_ASPECTVELOCITY = 0x00000200;
enum DIDOI_ASPECTACCEL = 0x00000300;
enum DIDOI_ASPECTFORCE = 0x00000400;
enum DIDOI_ASPECTMASK = 0x00000f00;
enum DIDOI_GUIDISUSAGE = 0x00010000;
enum DIPH_DEVICE = 0x00000000;
enum DIPH_BYOFFSET = 0x00000001;
enum DIPH_BYID = 0x00000002;
enum DIPH_BYUSAGE = 0x00000003;
enum MAXCPOINTSNUM = 0x00000008;
enum DIPROP_BUFFERSIZE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1]);
enum DIPROP_AXISMODE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2]);
enum DIPROPAXISMODE_ABS = 0x00000000;
enum DIPROPAXISMODE_REL = 0x00000001;
enum DIPROP_GRANULARITY = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3]);
enum DIPROP_RANGE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4]);
enum DIPROP_DEADZONE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5]);
enum DIPROP_SATURATION = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6]);
enum DIPROP_FFGAIN = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7]);
enum DIPROP_FFLOAD = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8]);
enum DIPROP_AUTOCENTER = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9]);
enum DIPROPAUTOCENTER_OFF = 0x00000000;
enum DIPROPAUTOCENTER_ON = 0x00000001;
enum DIPROP_CALIBRATIONMODE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa]);
enum DIPROPCALIBRATIONMODE_COOKED = 0x00000000;
enum DIPROPCALIBRATIONMODE_RAW = 0x00000001;
enum DIPROP_CALIBRATION = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb]);
enum DIPROP_GUIDANDPATH = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc]);
enum DIPROP_INSTANCENAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd]);
enum DIPROP_PRODUCTNAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe]);
enum DIPROP_JOYSTICKID = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf]);
enum DIPROP_GETPORTDISPLAYNAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10]);
enum DIPROP_PHYSICALRANGE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12]);
enum DIPROP_LOGICALRANGE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x13]);
enum DIPROP_KEYNAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14]);
enum DIPROP_CPOINTS = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x15]);
enum DIPROP_APPDATA = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16]);
enum DIPROP_SCANCODE = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x17]);
enum DIPROP_VIDPID = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18]);
enum DIPROP_USERNAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19]);
enum DIPROP_TYPENAME = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1a]);
enum DIGDD_PEEK = 0x00000001;
enum DISCL_EXCLUSIVE = 0x00000001;
enum DISCL_NONEXCLUSIVE = 0x00000002;
enum DISCL_FOREGROUND = 0x00000004;
enum DISCL_BACKGROUND = 0x00000008;
enum DISCL_NOWINKEY = 0x00000010;
enum DISFFC_RESET = 0x00000001;
enum DISFFC_STOPALL = 0x00000002;
enum DISFFC_PAUSE = 0x00000004;
enum DISFFC_CONTINUE = 0x00000008;
enum DISFFC_SETACTUATORSON = 0x00000010;
enum DISFFC_SETACTUATORSOFF = 0x00000020;
enum DIGFFS_EMPTY = 0x00000001;
enum DIGFFS_STOPPED = 0x00000002;
enum DIGFFS_PAUSED = 0x00000004;
enum DIGFFS_ACTUATORSON = 0x00000010;
enum DIGFFS_ACTUATORSOFF = 0x00000020;
enum DIGFFS_POWERON = 0x00000040;
enum DIGFFS_POWEROFF = 0x00000080;
enum DIGFFS_SAFETYSWITCHON = 0x00000100;
enum DIGFFS_SAFETYSWITCHOFF = 0x00000200;
enum DIGFFS_USERFFSWITCHON = 0x00000400;
enum DIGFFS_USERFFSWITCHOFF = 0x00000800;
enum DIGFFS_DEVICELOST = 0x80000000;
enum DISDD_CONTINUE = 0x00000001;
enum DIFEF_DEFAULT = 0x00000000;
enum DIFEF_INCLUDENONSTANDARD = 0x00000001;
enum DIFEF_MODIFYIFNEEDED = 0x00000010;
enum DIK_ESCAPE = 0x00000001;
enum DIK_1 = 0x00000002;
enum DIK_2 = 0x00000003;
enum DIK_3 = 0x00000004;
enum DIK_4 = 0x00000005;
enum DIK_5 = 0x00000006;
enum DIK_6 = 0x00000007;
enum DIK_7 = 0x00000008;
enum DIK_8 = 0x00000009;
enum DIK_9 = 0x0000000a;
enum DIK_0 = 0x0000000b;
enum DIK_MINUS = 0x0000000c;
enum DIK_EQUALS = 0x0000000d;
enum DIK_BACK = 0x0000000e;
enum DIK_TAB = 0x0000000f;
enum DIK_Q = 0x00000010;
enum DIK_W = 0x00000011;
enum DIK_E = 0x00000012;
enum DIK_R = 0x00000013;
enum DIK_T = 0x00000014;
enum DIK_Y = 0x00000015;
enum DIK_U = 0x00000016;
enum DIK_I = 0x00000017;
enum DIK_O = 0x00000018;
enum DIK_P = 0x00000019;
enum DIK_LBRACKET = 0x0000001a;
enum DIK_RBRACKET = 0x0000001b;
enum DIK_RETURN = 0x0000001c;
enum DIK_LCONTROL = 0x0000001d;
enum DIK_A = 0x0000001e;
enum DIK_S = 0x0000001f;
enum DIK_D = 0x00000020;
enum DIK_F = 0x00000021;
enum DIK_G = 0x00000022;
enum DIK_H = 0x00000023;
enum DIK_J = 0x00000024;
enum DIK_K = 0x00000025;
enum DIK_L = 0x00000026;
enum DIK_SEMICOLON = 0x00000027;
enum DIK_APOSTROPHE = 0x00000028;
enum DIK_GRAVE = 0x00000029;
enum DIK_LSHIFT = 0x0000002a;
enum DIK_BACKSLASH = 0x0000002b;
enum DIK_Z = 0x0000002c;
enum DIK_X = 0x0000002d;
enum DIK_C = 0x0000002e;
enum DIK_V = 0x0000002f;
enum DIK_B = 0x00000030;
enum DIK_N = 0x00000031;
enum DIK_M = 0x00000032;
enum DIK_COMMA = 0x00000033;
enum DIK_PERIOD = 0x00000034;
enum DIK_SLASH = 0x00000035;
enum DIK_RSHIFT = 0x00000036;
enum DIK_MULTIPLY = 0x00000037;
enum DIK_LMENU = 0x00000038;
enum DIK_SPACE = 0x00000039;
enum DIK_CAPITAL = 0x0000003a;
enum DIK_F1 = 0x0000003b;
enum DIK_F2 = 0x0000003c;
enum DIK_F3 = 0x0000003d;
enum DIK_F4 = 0x0000003e;
enum DIK_F5 = 0x0000003f;
enum DIK_F6 = 0x00000040;
enum DIK_F7 = 0x00000041;
enum DIK_F8 = 0x00000042;
enum DIK_F9 = 0x00000043;
enum DIK_F10 = 0x00000044;
enum DIK_NUMLOCK = 0x00000045;
enum DIK_SCROLL = 0x00000046;
enum DIK_NUMPAD7 = 0x00000047;
enum DIK_NUMPAD8 = 0x00000048;
enum DIK_NUMPAD9 = 0x00000049;
enum DIK_SUBTRACT = 0x0000004a;
enum DIK_NUMPAD4 = 0x0000004b;
enum DIK_NUMPAD5 = 0x0000004c;
enum DIK_NUMPAD6 = 0x0000004d;
enum DIK_ADD = 0x0000004e;
enum DIK_NUMPAD1 = 0x0000004f;
enum DIK_NUMPAD2 = 0x00000050;
enum DIK_NUMPAD3 = 0x00000051;
enum DIK_NUMPAD0 = 0x00000052;
enum DIK_DECIMAL = 0x00000053;
enum DIK_OEM_102 = 0x00000056;
enum DIK_F11 = 0x00000057;
enum DIK_F12 = 0x00000058;
enum DIK_F13 = 0x00000064;
enum DIK_F14 = 0x00000065;
enum DIK_F15 = 0x00000066;
enum DIK_KANA = 0x00000070;
enum DIK_ABNT_C1 = 0x00000073;
enum DIK_CONVERT = 0x00000079;
enum DIK_NOCONVERT = 0x0000007b;
enum DIK_YEN = 0x0000007d;
enum DIK_ABNT_C2 = 0x0000007e;
enum DIK_NUMPADEQUALS = 0x0000008d;
enum DIK_PREVTRACK = 0x00000090;
enum DIK_AT = 0x00000091;
enum DIK_COLON = 0x00000092;
enum DIK_UNDERLINE = 0x00000093;
enum DIK_KANJI = 0x00000094;
enum DIK_STOP = 0x00000095;
enum DIK_AX = 0x00000096;
enum DIK_UNLABELED = 0x00000097;
enum DIK_NEXTTRACK = 0x00000099;
enum DIK_NUMPADENTER = 0x0000009c;
enum DIK_RCONTROL = 0x0000009d;
enum DIK_MUTE = 0x000000a0;
enum DIK_CALCULATOR = 0x000000a1;
enum DIK_PLAYPAUSE = 0x000000a2;
enum DIK_MEDIASTOP = 0x000000a4;
enum DIK_VOLUMEDOWN = 0x000000ae;
enum DIK_VOLUMEUP = 0x000000b0;
enum DIK_WEBHOME = 0x000000b2;
enum DIK_NUMPADCOMMA = 0x000000b3;
enum DIK_DIVIDE = 0x000000b5;
enum DIK_SYSRQ = 0x000000b7;
enum DIK_RMENU = 0x000000b8;
enum DIK_PAUSE = 0x000000c5;
enum DIK_HOME = 0x000000c7;
enum DIK_UP = 0x000000c8;
enum DIK_PRIOR = 0x000000c9;
enum DIK_LEFT = 0x000000cb;
enum DIK_RIGHT = 0x000000cd;
enum DIK_END = 0x000000cf;
enum DIK_DOWN = 0x000000d0;
enum DIK_NEXT = 0x000000d1;
enum DIK_INSERT = 0x000000d2;
enum DIK_DELETE = 0x000000d3;
enum DIK_LWIN = 0x000000db;
enum DIK_RWIN = 0x000000dc;
enum DIK_APPS = 0x000000dd;
enum DIK_POWER = 0x000000de;
enum DIK_SLEEP = 0x000000df;
enum DIK_WAKE = 0x000000e3;
enum DIK_WEBSEARCH = 0x000000e5;
enum DIK_WEBFAVORITES = 0x000000e6;
enum DIK_WEBREFRESH = 0x000000e7;
enum DIK_WEBSTOP = 0x000000e8;
enum DIK_WEBFORWARD = 0x000000e9;
enum DIK_WEBBACK = 0x000000ea;
enum DIK_MYCOMPUTER = 0x000000eb;
enum DIK_MAIL = 0x000000ec;
enum DIK_MEDIASELECT = 0x000000ed;
enum DIK_BACKSPACE = 0x0000000e;
enum DIK_NUMPADSTAR = 0x00000037;
enum DIK_LALT = 0x00000038;
enum DIK_CAPSLOCK = 0x0000003a;
enum DIK_NUMPADMINUS = 0x0000004a;
enum DIK_NUMPADPLUS = 0x0000004e;
enum DIK_NUMPADPERIOD = 0x00000053;
enum DIK_NUMPADSLASH = 0x000000b5;
enum DIK_RALT = 0x000000b8;
enum DIK_UPARROW = 0x000000c8;
enum DIK_PGUP = 0x000000c9;
enum DIK_LEFTARROW = 0x000000cb;
enum DIK_RIGHTARROW = 0x000000cd;
enum DIK_DOWNARROW = 0x000000d0;
enum DIK_PGDN = 0x000000d1;
enum DIK_CIRCUMFLEX = 0x00000090;
enum DIENUM_STOP = 0x00000000;
enum DIENUM_CONTINUE = 0x00000001;
enum DIEDFL_ALLDEVICES = 0x00000000;
enum DIEDFL_ATTACHEDONLY = 0x00000001;
enum DIEDFL_FORCEFEEDBACK = 0x00000100;
enum DIEDFL_INCLUDEALIASES = 0x00010000;
enum DIEDFL_INCLUDEPHANTOMS = 0x00020000;
enum DIEDFL_INCLUDEHIDDEN = 0x00040000;
enum DIEDBS_MAPPEDPRI1 = 0x00000001;
enum DIEDBS_MAPPEDPRI2 = 0x00000002;
enum DIEDBS_RECENTDEVICE = 0x00000010;
enum DIEDBS_NEWDEVICE = 0x00000020;
enum DIEDBSFL_ATTACHEDONLY = 0x00000000;
enum DIEDBSFL_THISUSER = 0x00000010;
enum DIEDBSFL_FORCEFEEDBACK = 0x00000100;
enum DIEDBSFL_AVAILABLEDEVICES = 0x00001000;
enum DIEDBSFL_MULTIMICEKEYBOARDS = 0x00002000;
enum DIEDBSFL_NONGAMINGDEVICES = 0x00004000;
enum DIEDBSFL_VALID = 0x00007110;
enum DI_OK = 0x00000000;
enum DI_NOTATTACHED = 0x00000001;
enum DI_BUFFEROVERFLOW = 0x00000001;
enum DI_PROPNOEFFECT = 0x00000001;
enum DI_NOEFFECT = 0x00000001;
enum DI_POLLEDDEVICE = 0x00000002;
enum DI_DOWNLOADSKIPPED = 0x00000003;
enum DI_EFFECTRESTARTED = 0x00000004;
enum DI_TRUNCATED = 0x00000008;
enum DI_SETTINGSNOTSAVED = 0x0000000b;
enum DI_TRUNCATEDANDRESTARTED = 0x0000000c;
enum DI_WRITEPROTECT = 0x00000013;
enum DIERR_OLDDIRECTINPUTVERSION = 0xffffffff8007047e;
enum DIERR_BETADIRECTINPUTVERSION = 0xffffffff80070481;
enum DIERR_BADDRIVERVER = 0xffffffff80070077;
enum DIERR_DEVICENOTREG = 0xffffffff80040154;
enum DIERR_NOTFOUND = 0xffffffff80070002;
enum DIERR_OBJECTNOTFOUND = 0xffffffff80070002;
enum DIERR_INVALIDPARAM = 0xffffffff80070057;
enum DIERR_NOINTERFACE = 0xffffffff80004002;
enum DIERR_GENERIC = 0xffffffff80004005;
enum DIERR_OUTOFMEMORY = 0xffffffff8007000e;
enum DIERR_UNSUPPORTED = 0xffffffff80004001;
enum DIERR_NOTINITIALIZED = 0xffffffff80070015;
enum DIERR_ALREADYINITIALIZED = 0xffffffff800704df;
enum DIERR_NOAGGREGATION = 0xffffffff80040110;
enum DIERR_OTHERAPPHASPRIO = 0xffffffff80070005;
enum DIERR_INPUTLOST = 0xffffffff8007001e;
enum DIERR_ACQUIRED = 0xffffffff800700aa;
enum DIERR_NOTACQUIRED = 0xffffffff8007000c;
enum DIERR_READONLY = 0xffffffff80070005;
enum DIERR_HANDLEEXISTS = 0xffffffff80070005;
enum DIERR_INSUFFICIENTPRIVS = 0xffffffff80040200;
enum DIERR_DEVICEFULL = 0xffffffff80040201;
enum DIERR_MOREDATA = 0xffffffff80040202;
enum DIERR_NOTDOWNLOADED = 0xffffffff80040203;
enum DIERR_HASEFFECTS = 0xffffffff80040204;
enum DIERR_NOTEXCLUSIVEACQUIRED = 0xffffffff80040205;
enum DIERR_INCOMPLETEEFFECT = 0xffffffff80040206;
enum DIERR_NOTBUFFERED = 0xffffffff80040207;
enum DIERR_EFFECTPLAYING = 0xffffffff80040208;
enum DIERR_UNPLUGGED = 0xffffffff80040209;
enum DIERR_REPORTFULL = 0xffffffff8004020a;
enum DIERR_MAPFILEFAIL = 0xffffffff8004020b;
enum DIKEYBOARD_ESCAPE = 0x81000401;
enum DIKEYBOARD_1 = 0x81000402;
enum DIKEYBOARD_2 = 0x81000403;
enum DIKEYBOARD_3 = 0x81000404;
enum DIKEYBOARD_4 = 0x81000405;
enum DIKEYBOARD_5 = 0x81000406;
enum DIKEYBOARD_6 = 0x81000407;
enum DIKEYBOARD_7 = 0x81000408;
enum DIKEYBOARD_8 = 0x81000409;
enum DIKEYBOARD_9 = 0x8100040a;
enum DIKEYBOARD_0 = 0x8100040b;
enum DIKEYBOARD_MINUS = 0x8100040c;
enum DIKEYBOARD_EQUALS = 0x8100040d;
enum DIKEYBOARD_BACK = 0x8100040e;
enum DIKEYBOARD_TAB = 0x8100040f;
enum DIKEYBOARD_Q = 0x81000410;
enum DIKEYBOARD_W = 0x81000411;
enum DIKEYBOARD_E = 0x81000412;
enum DIKEYBOARD_R = 0x81000413;
enum DIKEYBOARD_T = 0x81000414;
enum DIKEYBOARD_Y = 0x81000415;
enum DIKEYBOARD_U = 0x81000416;
enum DIKEYBOARD_I = 0x81000417;
enum DIKEYBOARD_O = 0x81000418;
enum DIKEYBOARD_P = 0x81000419;
enum DIKEYBOARD_LBRACKET = 0x8100041a;
enum DIKEYBOARD_RBRACKET = 0x8100041b;
enum DIKEYBOARD_RETURN = 0x8100041c;
enum DIKEYBOARD_LCONTROL = 0x8100041d;
enum DIKEYBOARD_A = 0x8100041e;
enum DIKEYBOARD_S = 0x8100041f;
enum DIKEYBOARD_D = 0x81000420;
enum DIKEYBOARD_F = 0x81000421;
enum DIKEYBOARD_G = 0x81000422;
enum DIKEYBOARD_H = 0x81000423;
enum DIKEYBOARD_J = 0x81000424;
enum DIKEYBOARD_K = 0x81000425;
enum DIKEYBOARD_L = 0x81000426;
enum DIKEYBOARD_SEMICOLON = 0x81000427;
enum DIKEYBOARD_APOSTROPHE = 0x81000428;
enum DIKEYBOARD_GRAVE = 0x81000429;
enum DIKEYBOARD_LSHIFT = 0x8100042a;
enum DIKEYBOARD_BACKSLASH = 0x8100042b;
enum DIKEYBOARD_Z = 0x8100042c;
enum DIKEYBOARD_X = 0x8100042d;
enum DIKEYBOARD_C = 0x8100042e;
enum DIKEYBOARD_V = 0x8100042f;
enum DIKEYBOARD_B = 0x81000430;
enum DIKEYBOARD_N = 0x81000431;
enum DIKEYBOARD_M = 0x81000432;
enum DIKEYBOARD_COMMA = 0x81000433;
enum DIKEYBOARD_PERIOD = 0x81000434;
enum DIKEYBOARD_SLASH = 0x81000435;
enum DIKEYBOARD_RSHIFT = 0x81000436;
enum DIKEYBOARD_MULTIPLY = 0x81000437;
enum DIKEYBOARD_LMENU = 0x81000438;
enum DIKEYBOARD_SPACE = 0x81000439;
enum DIKEYBOARD_CAPITAL = 0x8100043a;
enum DIKEYBOARD_F1 = 0x8100043b;
enum DIKEYBOARD_F2 = 0x8100043c;
enum DIKEYBOARD_F3 = 0x8100043d;
enum DIKEYBOARD_F4 = 0x8100043e;
enum DIKEYBOARD_F5 = 0x8100043f;
enum DIKEYBOARD_F6 = 0x81000440;
enum DIKEYBOARD_F7 = 0x81000441;
enum DIKEYBOARD_F8 = 0x81000442;
enum DIKEYBOARD_F9 = 0x81000443;
enum DIKEYBOARD_F10 = 0x81000444;
enum DIKEYBOARD_NUMLOCK = 0x81000445;
enum DIKEYBOARD_SCROLL = 0x81000446;
enum DIKEYBOARD_NUMPAD7 = 0x81000447;
enum DIKEYBOARD_NUMPAD8 = 0x81000448;
enum DIKEYBOARD_NUMPAD9 = 0x81000449;
enum DIKEYBOARD_SUBTRACT = 0x8100044a;
enum DIKEYBOARD_NUMPAD4 = 0x8100044b;
enum DIKEYBOARD_NUMPAD5 = 0x8100044c;
enum DIKEYBOARD_NUMPAD6 = 0x8100044d;
enum DIKEYBOARD_ADD = 0x8100044e;
enum DIKEYBOARD_NUMPAD1 = 0x8100044f;
enum DIKEYBOARD_NUMPAD2 = 0x81000450;
enum DIKEYBOARD_NUMPAD3 = 0x81000451;
enum DIKEYBOARD_NUMPAD0 = 0x81000452;
enum DIKEYBOARD_DECIMAL = 0x81000453;
enum DIKEYBOARD_OEM_102 = 0x81000456;
enum DIKEYBOARD_F11 = 0x81000457;
enum DIKEYBOARD_F12 = 0x81000458;
enum DIKEYBOARD_F13 = 0x81000464;
enum DIKEYBOARD_F14 = 0x81000465;
enum DIKEYBOARD_F15 = 0x81000466;
enum DIKEYBOARD_KANA = 0x81000470;
enum DIKEYBOARD_ABNT_C1 = 0x81000473;
enum DIKEYBOARD_CONVERT = 0x81000479;
enum DIKEYBOARD_NOCONVERT = 0x8100047b;
enum DIKEYBOARD_YEN = 0x8100047d;
enum DIKEYBOARD_ABNT_C2 = 0x8100047e;
enum DIKEYBOARD_NUMPADEQUALS = 0x8100048d;
enum DIKEYBOARD_PREVTRACK = 0x81000490;
enum DIKEYBOARD_AT = 0x81000491;
enum DIKEYBOARD_COLON = 0x81000492;
enum DIKEYBOARD_UNDERLINE = 0x81000493;
enum DIKEYBOARD_KANJI = 0x81000494;
enum DIKEYBOARD_STOP = 0x81000495;
enum DIKEYBOARD_AX = 0x81000496;
enum DIKEYBOARD_UNLABELED = 0x81000497;
enum DIKEYBOARD_NEXTTRACK = 0x81000499;
enum DIKEYBOARD_NUMPADENTER = 0x8100049c;
enum DIKEYBOARD_RCONTROL = 0x8100049d;
enum DIKEYBOARD_MUTE = 0x810004a0;
enum DIKEYBOARD_CALCULATOR = 0x810004a1;
enum DIKEYBOARD_PLAYPAUSE = 0x810004a2;
enum DIKEYBOARD_MEDIASTOP = 0x810004a4;
enum DIKEYBOARD_VOLUMEDOWN = 0x810004ae;
enum DIKEYBOARD_VOLUMEUP = 0x810004b0;
enum DIKEYBOARD_WEBHOME = 0x810004b2;
enum DIKEYBOARD_NUMPADCOMMA = 0x810004b3;
enum DIKEYBOARD_DIVIDE = 0x810004b5;
enum DIKEYBOARD_SYSRQ = 0x810004b7;
enum DIKEYBOARD_RMENU = 0x810004b8;
enum DIKEYBOARD_PAUSE = 0x810004c5;
enum DIKEYBOARD_HOME = 0x810004c7;
enum DIKEYBOARD_UP = 0x810004c8;
enum DIKEYBOARD_PRIOR = 0x810004c9;
enum DIKEYBOARD_LEFT = 0x810004cb;
enum DIKEYBOARD_RIGHT = 0x810004cd;
enum DIKEYBOARD_END = 0x810004cf;
enum DIKEYBOARD_DOWN = 0x810004d0;
enum DIKEYBOARD_NEXT = 0x810004d1;
enum DIKEYBOARD_INSERT = 0x810004d2;
enum DIKEYBOARD_DELETE = 0x810004d3;
enum DIKEYBOARD_LWIN = 0x810004db;
enum DIKEYBOARD_RWIN = 0x810004dc;
enum DIKEYBOARD_APPS = 0x810004dd;
enum DIKEYBOARD_POWER = 0x810004de;
enum DIKEYBOARD_SLEEP = 0x810004df;
enum DIKEYBOARD_WAKE = 0x810004e3;
enum DIKEYBOARD_WEBSEARCH = 0x810004e5;
enum DIKEYBOARD_WEBFAVORITES = 0x810004e6;
enum DIKEYBOARD_WEBREFRESH = 0x810004e7;
enum DIKEYBOARD_WEBSTOP = 0x810004e8;
enum DIKEYBOARD_WEBFORWARD = 0x810004e9;
enum DIKEYBOARD_WEBBACK = 0x810004ea;
enum DIKEYBOARD_MYCOMPUTER = 0x810004eb;
enum DIKEYBOARD_MAIL = 0x810004ec;
enum DIKEYBOARD_MEDIASELECT = 0x810004ed;
enum DIVOICE_CHANNEL1 = 0x83000401;
enum DIVOICE_CHANNEL2 = 0x83000402;
enum DIVOICE_CHANNEL3 = 0x83000403;
enum DIVOICE_CHANNEL4 = 0x83000404;
enum DIVOICE_CHANNEL5 = 0x83000405;
enum DIVOICE_CHANNEL6 = 0x83000406;
enum DIVOICE_CHANNEL7 = 0x83000407;
enum DIVOICE_CHANNEL8 = 0x83000408;
enum DIVOICE_TEAM = 0x83000409;
enum DIVOICE_ALL = 0x8300040a;
enum DIVOICE_RECORDMUTE = 0x8300040b;
enum DIVOICE_PLAYBACKMUTE = 0x8300040c;
enum DIVOICE_TRANSMIT = 0x8300040d;
enum DIVOICE_VOICECOMMAND = 0x83000410;
enum DIVIRTUAL_DRIVING_RACE = 0x01000000;
enum DIAXIS_DRIVINGR_STEER = 0x01008a01;
enum DIAXIS_DRIVINGR_ACCELERATE = 0x01039202;
enum DIAXIS_DRIVINGR_BRAKE = 0x01041203;
enum DIBUTTON_DRIVINGR_SHIFTUP = 0x01000c01;
enum DIBUTTON_DRIVINGR_SHIFTDOWN = 0x01000c02;
enum DIBUTTON_DRIVINGR_VIEW = 0x01001c03;
enum DIBUTTON_DRIVINGR_MENU = 0x010004fd;
enum DIAXIS_DRIVINGR_ACCEL_AND_BRAKE = 0x01014a04;
enum DIHATSWITCH_DRIVINGR_GLANCE = 0x01004601;
enum DIBUTTON_DRIVINGR_BRAKE = 0x01004c04;
enum DIBUTTON_DRIVINGR_DASHBOARD = 0x01004405;
enum DIBUTTON_DRIVINGR_AIDS = 0x01004406;
enum DIBUTTON_DRIVINGR_MAP = 0x01004407;
enum DIBUTTON_DRIVINGR_BOOST = 0x01004408;
enum DIBUTTON_DRIVINGR_PIT = 0x01004409;
enum DIBUTTON_DRIVINGR_ACCELERATE_LINK = 0x0103d4e0;
enum DIBUTTON_DRIVINGR_STEER_LEFT_LINK = 0x0100cce4;
enum DIBUTTON_DRIVINGR_STEER_RIGHT_LINK = 0x0100ccec;
enum DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK = 0x0107c4e4;
enum DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK = 0x0107c4ec;
enum DIBUTTON_DRIVINGR_DEVICE = 0x010044fe;
enum DIBUTTON_DRIVINGR_PAUSE = 0x010044fc;
enum DIVIRTUAL_DRIVING_COMBAT = 0x02000000;
enum DIAXIS_DRIVINGC_STEER = 0x02008a01;
enum DIAXIS_DRIVINGC_ACCELERATE = 0x02039202;
enum DIAXIS_DRIVINGC_BRAKE = 0x02041203;
enum DIBUTTON_DRIVINGC_FIRE = 0x02000c01;
enum DIBUTTON_DRIVINGC_WEAPONS = 0x02000c02;
enum DIBUTTON_DRIVINGC_TARGET = 0x02000c03;
enum DIBUTTON_DRIVINGC_MENU = 0x020004fd;
enum DIAXIS_DRIVINGC_ACCEL_AND_BRAKE = 0x02014a04;
enum DIHATSWITCH_DRIVINGC_GLANCE = 0x02004601;
enum DIBUTTON_DRIVINGC_SHIFTUP = 0x02004c04;
enum DIBUTTON_DRIVINGC_SHIFTDOWN = 0x02004c05;
enum DIBUTTON_DRIVINGC_DASHBOARD = 0x02004406;
enum DIBUTTON_DRIVINGC_AIDS = 0x02004407;
enum DIBUTTON_DRIVINGC_BRAKE = 0x02004c08;
enum DIBUTTON_DRIVINGC_FIRESECONDARY = 0x02004c09;
enum DIBUTTON_DRIVINGC_ACCELERATE_LINK = 0x0203d4e0;
enum DIBUTTON_DRIVINGC_STEER_LEFT_LINK = 0x0200cce4;
enum DIBUTTON_DRIVINGC_STEER_RIGHT_LINK = 0x0200ccec;
enum DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK = 0x0207c4e4;
enum DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK = 0x0207c4ec;
enum DIBUTTON_DRIVINGC_DEVICE = 0x020044fe;
enum DIBUTTON_DRIVINGC_PAUSE = 0x020044fc;
enum DIVIRTUAL_DRIVING_TANK = 0x03000000;
enum DIAXIS_DRIVINGT_STEER = 0x03008a01;
enum DIAXIS_DRIVINGT_BARREL = 0x03010202;
enum DIAXIS_DRIVINGT_ACCELERATE = 0x03039203;
enum DIAXIS_DRIVINGT_ROTATE = 0x03020204;
enum DIBUTTON_DRIVINGT_FIRE = 0x03000c01;
enum DIBUTTON_DRIVINGT_WEAPONS = 0x03000c02;
enum DIBUTTON_DRIVINGT_TARGET = 0x03000c03;
enum DIBUTTON_DRIVINGT_MENU = 0x030004fd;
enum DIHATSWITCH_DRIVINGT_GLANCE = 0x03004601;
enum DIAXIS_DRIVINGT_BRAKE = 0x03045205;
enum DIAXIS_DRIVINGT_ACCEL_AND_BRAKE = 0x03014a06;
enum DIBUTTON_DRIVINGT_VIEW = 0x03005c04;
enum DIBUTTON_DRIVINGT_DASHBOARD = 0x03005c05;
enum DIBUTTON_DRIVINGT_BRAKE = 0x03004c06;
enum DIBUTTON_DRIVINGT_FIRESECONDARY = 0x03004c07;
enum DIBUTTON_DRIVINGT_ACCELERATE_LINK = 0x0303d4e0;
enum DIBUTTON_DRIVINGT_STEER_LEFT_LINK = 0x0300cce4;
enum DIBUTTON_DRIVINGT_STEER_RIGHT_LINK = 0x0300ccec;
enum DIBUTTON_DRIVINGT_BARREL_UP_LINK = 0x030144e0;
enum DIBUTTON_DRIVINGT_BARREL_DOWN_LINK = 0x030144e8;
enum DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK = 0x030244e4;
enum DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK = 0x030244ec;
enum DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK = 0x0307c4e4;
enum DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK = 0x0307c4ec;
enum DIBUTTON_DRIVINGT_DEVICE = 0x030044fe;
enum DIBUTTON_DRIVINGT_PAUSE = 0x030044fc;
enum DIVIRTUAL_FLYING_CIVILIAN = 0x04000000;
enum DIAXIS_FLYINGC_BANK = 0x04008a01;
enum DIAXIS_FLYINGC_PITCH = 0x04010a02;
enum DIAXIS_FLYINGC_THROTTLE = 0x04039203;
enum DIBUTTON_FLYINGC_VIEW = 0x04002401;
enum DIBUTTON_FLYINGC_DISPLAY = 0x04002402;
enum DIBUTTON_FLYINGC_GEAR = 0x04002c03;
enum DIBUTTON_FLYINGC_MENU = 0x040004fd;
enum DIHATSWITCH_FLYINGC_GLANCE = 0x04004601;
enum DIAXIS_FLYINGC_BRAKE = 0x04046a04;
enum DIAXIS_FLYINGC_RUDDER = 0x04025205;
enum DIAXIS_FLYINGC_FLAPS = 0x04055a06;
enum DIBUTTON_FLYINGC_FLAPSUP = 0x04006404;
enum DIBUTTON_FLYINGC_FLAPSDOWN = 0x04006405;
enum DIBUTTON_FLYINGC_BRAKE_LINK = 0x04046ce0;
enum DIBUTTON_FLYINGC_FASTER_LINK = 0x0403d4e0;
enum DIBUTTON_FLYINGC_SLOWER_LINK = 0x0403d4e8;
enum DIBUTTON_FLYINGC_GLANCE_LEFT_LINK = 0x0407c4e4;
enum DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK = 0x0407c4ec;
enum DIBUTTON_FLYINGC_GLANCE_UP_LINK = 0x0407c4e0;
enum DIBUTTON_FLYINGC_GLANCE_DOWN_LINK = 0x0407c4e8;
enum DIBUTTON_FLYINGC_DEVICE = 0x040044fe;
enum DIBUTTON_FLYINGC_PAUSE = 0x040044fc;
enum DIVIRTUAL_FLYING_MILITARY = 0x05000000;
enum DIAXIS_FLYINGM_BANK = 0x05008a01;
enum DIAXIS_FLYINGM_PITCH = 0x05010a02;
enum DIAXIS_FLYINGM_THROTTLE = 0x05039203;
enum DIBUTTON_FLYINGM_FIRE = 0x05000c01;
enum DIBUTTON_FLYINGM_WEAPONS = 0x05000c02;
enum DIBUTTON_FLYINGM_TARGET = 0x05000c03;
enum DIBUTTON_FLYINGM_MENU = 0x050004fd;
enum DIHATSWITCH_FLYINGM_GLANCE = 0x05004601;
enum DIBUTTON_FLYINGM_COUNTER = 0x05005c04;
enum DIAXIS_FLYINGM_RUDDER = 0x05024a04;
enum DIAXIS_FLYINGM_BRAKE = 0x05046205;
enum DIBUTTON_FLYINGM_VIEW = 0x05006405;
enum DIBUTTON_FLYINGM_DISPLAY = 0x05006406;
enum DIAXIS_FLYINGM_FLAPS = 0x05055206;
enum DIBUTTON_FLYINGM_FLAPSUP = 0x05005407;
enum DIBUTTON_FLYINGM_FLAPSDOWN = 0x05005408;
enum DIBUTTON_FLYINGM_FIRESECONDARY = 0x05004c09;
enum DIBUTTON_FLYINGM_GEAR = 0x0500640a;
enum DIBUTTON_FLYINGM_BRAKE_LINK = 0x050464e0;
enum DIBUTTON_FLYINGM_FASTER_LINK = 0x0503d4e0;
enum DIBUTTON_FLYINGM_SLOWER_LINK = 0x0503d4e8;
enum DIBUTTON_FLYINGM_GLANCE_LEFT_LINK = 0x0507c4e4;
enum DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK = 0x0507c4ec;
enum DIBUTTON_FLYINGM_GLANCE_UP_LINK = 0x0507c4e0;
enum DIBUTTON_FLYINGM_GLANCE_DOWN_LINK = 0x0507c4e8;
enum DIBUTTON_FLYINGM_DEVICE = 0x050044fe;
enum DIBUTTON_FLYINGM_PAUSE = 0x050044fc;
enum DIVIRTUAL_FLYING_HELICOPTER = 0x06000000;
enum DIAXIS_FLYINGH_BANK = 0x06008a01;
enum DIAXIS_FLYINGH_PITCH = 0x06010a02;
enum DIAXIS_FLYINGH_COLLECTIVE = 0x06018a03;
enum DIBUTTON_FLYINGH_FIRE = 0x06001401;
enum DIBUTTON_FLYINGH_WEAPONS = 0x06001402;
enum DIBUTTON_FLYINGH_TARGET = 0x06001403;
enum DIBUTTON_FLYINGH_MENU = 0x060004fd;
enum DIHATSWITCH_FLYINGH_GLANCE = 0x06004601;
enum DIAXIS_FLYINGH_TORQUE = 0x06025a04;
enum DIAXIS_FLYINGH_THROTTLE = 0x0603da05;
enum DIBUTTON_FLYINGH_COUNTER = 0x06005404;
enum DIBUTTON_FLYINGH_VIEW = 0x06006405;
enum DIBUTTON_FLYINGH_GEAR = 0x06006406;
enum DIBUTTON_FLYINGH_FIRESECONDARY = 0x06004c07;
enum DIBUTTON_FLYINGH_FASTER_LINK = 0x0603dce0;
enum DIBUTTON_FLYINGH_SLOWER_LINK = 0x0603dce8;
enum DIBUTTON_FLYINGH_GLANCE_LEFT_LINK = 0x0607c4e4;
enum DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK = 0x0607c4ec;
enum DIBUTTON_FLYINGH_GLANCE_UP_LINK = 0x0607c4e0;
enum DIBUTTON_FLYINGH_GLANCE_DOWN_LINK = 0x0607c4e8;
enum DIBUTTON_FLYINGH_DEVICE = 0x060044fe;
enum DIBUTTON_FLYINGH_PAUSE = 0x060044fc;
enum DIVIRTUAL_SPACESIM = 0x07000000;
enum DIAXIS_SPACESIM_LATERAL = 0x07008201;
enum DIAXIS_SPACESIM_MOVE = 0x07010202;
enum DIAXIS_SPACESIM_THROTTLE = 0x07038203;
enum DIBUTTON_SPACESIM_FIRE = 0x07000401;
enum DIBUTTON_SPACESIM_WEAPONS = 0x07000402;
enum DIBUTTON_SPACESIM_TARGET = 0x07000403;
enum DIBUTTON_SPACESIM_MENU = 0x070004fd;
enum DIHATSWITCH_SPACESIM_GLANCE = 0x07004601;
enum DIAXIS_SPACESIM_CLIMB = 0x0701c204;
enum DIAXIS_SPACESIM_ROTATE = 0x07024205;
enum DIBUTTON_SPACESIM_VIEW = 0x07004404;
enum DIBUTTON_SPACESIM_DISPLAY = 0x07004405;
enum DIBUTTON_SPACESIM_RAISE = 0x07004406;
enum DIBUTTON_SPACESIM_LOWER = 0x07004407;
enum DIBUTTON_SPACESIM_GEAR = 0x07004408;
enum DIBUTTON_SPACESIM_FIRESECONDARY = 0x07004409;
enum DIBUTTON_SPACESIM_LEFT_LINK = 0x0700c4e4;
enum DIBUTTON_SPACESIM_RIGHT_LINK = 0x0700c4ec;
enum DIBUTTON_SPACESIM_FORWARD_LINK = 0x070144e0;
enum DIBUTTON_SPACESIM_BACKWARD_LINK = 0x070144e8;
enum DIBUTTON_SPACESIM_FASTER_LINK = 0x0703c4e0;
enum DIBUTTON_SPACESIM_SLOWER_LINK = 0x0703c4e8;
enum DIBUTTON_SPACESIM_TURN_LEFT_LINK = 0x070244e4;
enum DIBUTTON_SPACESIM_TURN_RIGHT_LINK = 0x070244ec;
enum DIBUTTON_SPACESIM_GLANCE_LEFT_LINK = 0x0707c4e4;
enum DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK = 0x0707c4ec;
enum DIBUTTON_SPACESIM_GLANCE_UP_LINK = 0x0707c4e0;
enum DIBUTTON_SPACESIM_GLANCE_DOWN_LINK = 0x0707c4e8;
enum DIBUTTON_SPACESIM_DEVICE = 0x070044fe;
enum DIBUTTON_SPACESIM_PAUSE = 0x070044fc;
enum DIVIRTUAL_FIGHTING_HAND2HAND = 0x08000000;
enum DIAXIS_FIGHTINGH_LATERAL = 0x08008201;
enum DIAXIS_FIGHTINGH_MOVE = 0x08010202;
enum DIBUTTON_FIGHTINGH_PUNCH = 0x08000401;
enum DIBUTTON_FIGHTINGH_KICK = 0x08000402;
enum DIBUTTON_FIGHTINGH_BLOCK = 0x08000403;
enum DIBUTTON_FIGHTINGH_CROUCH = 0x08000404;
enum DIBUTTON_FIGHTINGH_JUMP = 0x08000405;
enum DIBUTTON_FIGHTINGH_SPECIAL1 = 0x08000406;
enum DIBUTTON_FIGHTINGH_SPECIAL2 = 0x08000407;
enum DIBUTTON_FIGHTINGH_MENU = 0x080004fd;
enum DIBUTTON_FIGHTINGH_SELECT = 0x08004408;
enum DIHATSWITCH_FIGHTINGH_SLIDE = 0x08004601;
enum DIBUTTON_FIGHTINGH_DISPLAY = 0x08004409;
enum DIAXIS_FIGHTINGH_ROTATE = 0x08024203;
enum DIBUTTON_FIGHTINGH_DODGE = 0x0800440a;
enum DIBUTTON_FIGHTINGH_LEFT_LINK = 0x0800c4e4;
enum DIBUTTON_FIGHTINGH_RIGHT_LINK = 0x0800c4ec;
enum DIBUTTON_FIGHTINGH_FORWARD_LINK = 0x080144e0;
enum DIBUTTON_FIGHTINGH_BACKWARD_LINK = 0x080144e8;
enum DIBUTTON_FIGHTINGH_DEVICE = 0x080044fe;
enum DIBUTTON_FIGHTINGH_PAUSE = 0x080044fc;
enum DIVIRTUAL_FIGHTING_FPS = 0x09000000;
enum DIAXIS_FPS_ROTATE = 0x09008201;
enum DIAXIS_FPS_MOVE = 0x09010202;
enum DIBUTTON_FPS_FIRE = 0x09000401;
enum DIBUTTON_FPS_WEAPONS = 0x09000402;
enum DIBUTTON_FPS_APPLY = 0x09000403;
enum DIBUTTON_FPS_SELECT = 0x09000404;
enum DIBUTTON_FPS_CROUCH = 0x09000405;
enum DIBUTTON_FPS_JUMP = 0x09000406;
enum DIAXIS_FPS_LOOKUPDOWN = 0x09018203;
enum DIBUTTON_FPS_STRAFE = 0x09000407;
enum DIBUTTON_FPS_MENU = 0x090004fd;
enum DIHATSWITCH_FPS_GLANCE = 0x09004601;
enum DIBUTTON_FPS_DISPLAY = 0x09004408;
enum DIAXIS_FPS_SIDESTEP = 0x09024204;
enum DIBUTTON_FPS_DODGE = 0x09004409;
enum DIBUTTON_FPS_GLANCEL = 0x0900440a;
enum DIBUTTON_FPS_GLANCER = 0x0900440b;
enum DIBUTTON_FPS_FIRESECONDARY = 0x0900440c;
enum DIBUTTON_FPS_ROTATE_LEFT_LINK = 0x0900c4e4;
enum DIBUTTON_FPS_ROTATE_RIGHT_LINK = 0x0900c4ec;
enum DIBUTTON_FPS_FORWARD_LINK = 0x090144e0;
enum DIBUTTON_FPS_BACKWARD_LINK = 0x090144e8;
enum DIBUTTON_FPS_GLANCE_UP_LINK = 0x0901c4e0;
enum DIBUTTON_FPS_GLANCE_DOWN_LINK = 0x0901c4e8;
enum DIBUTTON_FPS_STEP_LEFT_LINK = 0x090244e4;
enum DIBUTTON_FPS_STEP_RIGHT_LINK = 0x090244ec;
enum DIBUTTON_FPS_DEVICE = 0x090044fe;
enum DIBUTTON_FPS_PAUSE = 0x090044fc;
enum DIVIRTUAL_FIGHTING_THIRDPERSON = 0x0a000000;
enum DIAXIS_TPS_TURN = 0x0a020201;
enum DIAXIS_TPS_MOVE = 0x0a010202;
enum DIBUTTON_TPS_RUN = 0x0a000401;
enum DIBUTTON_TPS_ACTION = 0x0a000402;
enum DIBUTTON_TPS_SELECT = 0x0a000403;
enum DIBUTTON_TPS_USE = 0x0a000404;
enum DIBUTTON_TPS_JUMP = 0x0a000405;
enum DIBUTTON_TPS_MENU = 0x0a0004fd;
enum DIHATSWITCH_TPS_GLANCE = 0x0a004601;
enum DIBUTTON_TPS_VIEW = 0x0a004406;
enum DIBUTTON_TPS_STEPLEFT = 0x0a004407;
enum DIBUTTON_TPS_STEPRIGHT = 0x0a004408;
enum DIAXIS_TPS_STEP = 0x0a00c203;
enum DIBUTTON_TPS_DODGE = 0x0a004409;
enum DIBUTTON_TPS_INVENTORY = 0x0a00440a;
enum DIBUTTON_TPS_TURN_LEFT_LINK = 0x0a0244e4;
enum DIBUTTON_TPS_TURN_RIGHT_LINK = 0x0a0244ec;
enum DIBUTTON_TPS_FORWARD_LINK = 0x0a0144e0;
enum DIBUTTON_TPS_BACKWARD_LINK = 0x0a0144e8;
enum DIBUTTON_TPS_GLANCE_UP_LINK = 0x0a07c4e0;
enum DIBUTTON_TPS_GLANCE_DOWN_LINK = 0x0a07c4e8;
enum DIBUTTON_TPS_GLANCE_LEFT_LINK = 0x0a07c4e4;
enum DIBUTTON_TPS_GLANCE_RIGHT_LINK = 0x0a07c4ec;
enum DIBUTTON_TPS_DEVICE = 0x0a0044fe;
enum DIBUTTON_TPS_PAUSE = 0x0a0044fc;
enum DIVIRTUAL_STRATEGY_ROLEPLAYING = 0x0b000000;
enum DIAXIS_STRATEGYR_LATERAL = 0x0b008201;
enum DIAXIS_STRATEGYR_MOVE = 0x0b010202;
enum DIBUTTON_STRATEGYR_GET = 0x0b000401;
enum DIBUTTON_STRATEGYR_APPLY = 0x0b000402;
enum DIBUTTON_STRATEGYR_SELECT = 0x0b000403;
enum DIBUTTON_STRATEGYR_ATTACK = 0x0b000404;
enum DIBUTTON_STRATEGYR_CAST = 0x0b000405;
enum DIBUTTON_STRATEGYR_CROUCH = 0x0b000406;
enum DIBUTTON_STRATEGYR_JUMP = 0x0b000407;
enum DIBUTTON_STRATEGYR_MENU = 0x0b0004fd;
enum DIHATSWITCH_STRATEGYR_GLANCE = 0x0b004601;
enum DIBUTTON_STRATEGYR_MAP = 0x0b004408;
enum DIBUTTON_STRATEGYR_DISPLAY = 0x0b004409;
enum DIAXIS_STRATEGYR_ROTATE = 0x0b024203;
enum DIBUTTON_STRATEGYR_LEFT_LINK = 0x0b00c4e4;
enum DIBUTTON_STRATEGYR_RIGHT_LINK = 0x0b00c4ec;
enum DIBUTTON_STRATEGYR_FORWARD_LINK = 0x0b0144e0;
enum DIBUTTON_STRATEGYR_BACK_LINK = 0x0b0144e8;
enum DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK = 0x0b0244e4;
enum DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK = 0x0b0244ec;
enum DIBUTTON_STRATEGYR_DEVICE = 0x0b0044fe;
enum DIBUTTON_STRATEGYR_PAUSE = 0x0b0044fc;
enum DIVIRTUAL_STRATEGY_TURN = 0x0c000000;
enum DIAXIS_STRATEGYT_LATERAL = 0x0c008201;
enum DIAXIS_STRATEGYT_MOVE = 0x0c010202;
enum DIBUTTON_STRATEGYT_SELECT = 0x0c000401;
enum DIBUTTON_STRATEGYT_INSTRUCT = 0x0c000402;
enum DIBUTTON_STRATEGYT_APPLY = 0x0c000403;
enum DIBUTTON_STRATEGYT_TEAM = 0x0c000404;
enum DIBUTTON_STRATEGYT_TURN = 0x0c000405;
enum DIBUTTON_STRATEGYT_MENU = 0x0c0004fd;
enum DIBUTTON_STRATEGYT_ZOOM = 0x0c004406;
enum DIBUTTON_STRATEGYT_MAP = 0x0c004407;
enum DIBUTTON_STRATEGYT_DISPLAY = 0x0c004408;
enum DIBUTTON_STRATEGYT_LEFT_LINK = 0x0c00c4e4;
enum DIBUTTON_STRATEGYT_RIGHT_LINK = 0x0c00c4ec;
enum DIBUTTON_STRATEGYT_FORWARD_LINK = 0x0c0144e0;
enum DIBUTTON_STRATEGYT_BACK_LINK = 0x0c0144e8;
enum DIBUTTON_STRATEGYT_DEVICE = 0x0c0044fe;
enum DIBUTTON_STRATEGYT_PAUSE = 0x0c0044fc;
enum DIVIRTUAL_SPORTS_HUNTING = 0x0d000000;
enum DIAXIS_HUNTING_LATERAL = 0x0d008201;
enum DIAXIS_HUNTING_MOVE = 0x0d010202;
enum DIBUTTON_HUNTING_FIRE = 0x0d000401;
enum DIBUTTON_HUNTING_AIM = 0x0d000402;
enum DIBUTTON_HUNTING_WEAPON = 0x0d000403;
enum DIBUTTON_HUNTING_BINOCULAR = 0x0d000404;
enum DIBUTTON_HUNTING_CALL = 0x0d000405;
enum DIBUTTON_HUNTING_MAP = 0x0d000406;
enum DIBUTTON_HUNTING_SPECIAL = 0x0d000407;
enum DIBUTTON_HUNTING_MENU = 0x0d0004fd;
enum DIHATSWITCH_HUNTING_GLANCE = 0x0d004601;
enum DIBUTTON_HUNTING_DISPLAY = 0x0d004408;
enum DIAXIS_HUNTING_ROTATE = 0x0d024203;
enum DIBUTTON_HUNTING_CROUCH = 0x0d004409;
enum DIBUTTON_HUNTING_JUMP = 0x0d00440a;
enum DIBUTTON_HUNTING_FIRESECONDARY = 0x0d00440b;
enum DIBUTTON_HUNTING_LEFT_LINK = 0x0d00c4e4;
enum DIBUTTON_HUNTING_RIGHT_LINK = 0x0d00c4ec;
enum DIBUTTON_HUNTING_FORWARD_LINK = 0x0d0144e0;
enum DIBUTTON_HUNTING_BACK_LINK = 0x0d0144e8;
enum DIBUTTON_HUNTING_ROTATE_LEFT_LINK = 0x0d0244e4;
enum DIBUTTON_HUNTING_ROTATE_RIGHT_LINK = 0x0d0244ec;
enum DIBUTTON_HUNTING_DEVICE = 0x0d0044fe;
enum DIBUTTON_HUNTING_PAUSE = 0x0d0044fc;
enum DIVIRTUAL_SPORTS_FISHING = 0x0e000000;
enum DIAXIS_FISHING_LATERAL = 0x0e008201;
enum DIAXIS_FISHING_MOVE = 0x0e010202;
enum DIBUTTON_FISHING_CAST = 0x0e000401;
enum DIBUTTON_FISHING_TYPE = 0x0e000402;
enum DIBUTTON_FISHING_BINOCULAR = 0x0e000403;
enum DIBUTTON_FISHING_BAIT = 0x0e000404;
enum DIBUTTON_FISHING_MAP = 0x0e000405;
enum DIBUTTON_FISHING_MENU = 0x0e0004fd;
enum DIHATSWITCH_FISHING_GLANCE = 0x0e004601;
enum DIBUTTON_FISHING_DISPLAY = 0x0e004406;
enum DIAXIS_FISHING_ROTATE = 0x0e024203;
enum DIBUTTON_FISHING_CROUCH = 0x0e004407;
enum DIBUTTON_FISHING_JUMP = 0x0e004408;
enum DIBUTTON_FISHING_LEFT_LINK = 0x0e00c4e4;
enum DIBUTTON_FISHING_RIGHT_LINK = 0x0e00c4ec;
enum DIBUTTON_FISHING_FORWARD_LINK = 0x0e0144e0;
enum DIBUTTON_FISHING_BACK_LINK = 0x0e0144e8;
enum DIBUTTON_FISHING_ROTATE_LEFT_LINK = 0x0e0244e4;
enum DIBUTTON_FISHING_ROTATE_RIGHT_LINK = 0x0e0244ec;
enum DIBUTTON_FISHING_DEVICE = 0x0e0044fe;
enum DIBUTTON_FISHING_PAUSE = 0x0e0044fc;
enum DIVIRTUAL_SPORTS_BASEBALL_BAT = 0x0f000000;
enum DIAXIS_BASEBALLB_LATERAL = 0x0f008201;
enum DIAXIS_BASEBALLB_MOVE = 0x0f010202;
enum DIBUTTON_BASEBALLB_SELECT = 0x0f000401;
enum DIBUTTON_BASEBALLB_NORMAL = 0x0f000402;
enum DIBUTTON_BASEBALLB_POWER = 0x0f000403;
enum DIBUTTON_BASEBALLB_BUNT = 0x0f000404;
enum DIBUTTON_BASEBALLB_STEAL = 0x0f000405;
enum DIBUTTON_BASEBALLB_BURST = 0x0f000406;
enum DIBUTTON_BASEBALLB_SLIDE = 0x0f000407;
enum DIBUTTON_BASEBALLB_CONTACT = 0x0f000408;
enum DIBUTTON_BASEBALLB_MENU = 0x0f0004fd;
enum DIBUTTON_BASEBALLB_NOSTEAL = 0x0f004409;
enum DIBUTTON_BASEBALLB_BOX = 0x0f00440a;
enum DIBUTTON_BASEBALLB_LEFT_LINK = 0x0f00c4e4;
enum DIBUTTON_BASEBALLB_RIGHT_LINK = 0x0f00c4ec;
enum DIBUTTON_BASEBALLB_FORWARD_LINK = 0x0f0144e0;
enum DIBUTTON_BASEBALLB_BACK_LINK = 0x0f0144e8;
enum DIBUTTON_BASEBALLB_DEVICE = 0x0f0044fe;
enum DIBUTTON_BASEBALLB_PAUSE = 0x0f0044fc;
enum DIVIRTUAL_SPORTS_BASEBALL_PITCH = 0x10000000;
enum DIAXIS_BASEBALLP_LATERAL = 0x10008201;
enum DIAXIS_BASEBALLP_MOVE = 0x10010202;
enum DIBUTTON_BASEBALLP_SELECT = 0x10000401;
enum DIBUTTON_BASEBALLP_PITCH = 0x10000402;
enum DIBUTTON_BASEBALLP_BASE = 0x10000403;
enum DIBUTTON_BASEBALLP_THROW = 0x10000404;
enum DIBUTTON_BASEBALLP_FAKE = 0x10000405;
enum DIBUTTON_BASEBALLP_MENU = 0x100004fd;
enum DIBUTTON_BASEBALLP_WALK = 0x10004406;
enum DIBUTTON_BASEBALLP_LOOK = 0x10004407;
enum DIBUTTON_BASEBALLP_LEFT_LINK = 0x1000c4e4;
enum DIBUTTON_BASEBALLP_RIGHT_LINK = 0x1000c4ec;
enum DIBUTTON_BASEBALLP_FORWARD_LINK = 0x100144e0;
enum DIBUTTON_BASEBALLP_BACK_LINK = 0x100144e8;
enum DIBUTTON_BASEBALLP_DEVICE = 0x100044fe;
enum DIBUTTON_BASEBALLP_PAUSE = 0x100044fc;
enum DIVIRTUAL_SPORTS_BASEBALL_FIELD = 0x11000000;
enum DIAXIS_BASEBALLF_LATERAL = 0x11008201;
enum DIAXIS_BASEBALLF_MOVE = 0x11010202;
enum DIBUTTON_BASEBALLF_NEAREST = 0x11000401;
enum DIBUTTON_BASEBALLF_THROW1 = 0x11000402;
enum DIBUTTON_BASEBALLF_THROW2 = 0x11000403;
enum DIBUTTON_BASEBALLF_BURST = 0x11000404;
enum DIBUTTON_BASEBALLF_JUMP = 0x11000405;
enum DIBUTTON_BASEBALLF_DIVE = 0x11000406;
enum DIBUTTON_BASEBALLF_MENU = 0x110004fd;
enum DIBUTTON_BASEBALLF_SHIFTIN = 0x11004407;
enum DIBUTTON_BASEBALLF_SHIFTOUT = 0x11004408;
enum DIBUTTON_BASEBALLF_AIM_LEFT_LINK = 0x1100c4e4;
enum DIBUTTON_BASEBALLF_AIM_RIGHT_LINK = 0x1100c4ec;
enum DIBUTTON_BASEBALLF_FORWARD_LINK = 0x110144e0;
enum DIBUTTON_BASEBALLF_BACK_LINK = 0x110144e8;
enum DIBUTTON_BASEBALLF_DEVICE = 0x110044fe;
enum DIBUTTON_BASEBALLF_PAUSE = 0x110044fc;
enum DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE = 0x12000000;
enum DIAXIS_BBALLO_LATERAL = 0x12008201;
enum DIAXIS_BBALLO_MOVE = 0x12010202;
enum DIBUTTON_BBALLO_SHOOT = 0x12000401;
enum DIBUTTON_BBALLO_DUNK = 0x12000402;
enum DIBUTTON_BBALLO_PASS = 0x12000403;
enum DIBUTTON_BBALLO_FAKE = 0x12000404;
enum DIBUTTON_BBALLO_SPECIAL = 0x12000405;
enum DIBUTTON_BBALLO_PLAYER = 0x12000406;
enum DIBUTTON_BBALLO_BURST = 0x12000407;
enum DIBUTTON_BBALLO_CALL = 0x12000408;
enum DIBUTTON_BBALLO_MENU = 0x120004fd;
enum DIHATSWITCH_BBALLO_GLANCE = 0x12004601;
enum DIBUTTON_BBALLO_SCREEN = 0x12004409;
enum DIBUTTON_BBALLO_PLAY = 0x1200440a;
enum DIBUTTON_BBALLO_JAB = 0x1200440b;
enum DIBUTTON_BBALLO_POST = 0x1200440c;
enum DIBUTTON_BBALLO_TIMEOUT = 0x1200440d;
enum DIBUTTON_BBALLO_SUBSTITUTE = 0x1200440e;
enum DIBUTTON_BBALLO_LEFT_LINK = 0x1200c4e4;
enum DIBUTTON_BBALLO_RIGHT_LINK = 0x1200c4ec;
enum DIBUTTON_BBALLO_FORWARD_LINK = 0x120144e0;
enum DIBUTTON_BBALLO_BACK_LINK = 0x120144e8;
enum DIBUTTON_BBALLO_DEVICE = 0x120044fe;
enum DIBUTTON_BBALLO_PAUSE = 0x120044fc;
enum DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE = 0x13000000;
enum DIAXIS_BBALLD_LATERAL = 0x13008201;
enum DIAXIS_BBALLD_MOVE = 0x13010202;
enum DIBUTTON_BBALLD_JUMP = 0x13000401;
enum DIBUTTON_BBALLD_STEAL = 0x13000402;
enum DIBUTTON_BBALLD_FAKE = 0x13000403;
enum DIBUTTON_BBALLD_SPECIAL = 0x13000404;
enum DIBUTTON_BBALLD_PLAYER = 0x13000405;
enum DIBUTTON_BBALLD_BURST = 0x13000406;
enum DIBUTTON_BBALLD_PLAY = 0x13000407;
enum DIBUTTON_BBALLD_MENU = 0x130004fd;
enum DIHATSWITCH_BBALLD_GLANCE = 0x13004601;
enum DIBUTTON_BBALLD_TIMEOUT = 0x13004408;
enum DIBUTTON_BBALLD_SUBSTITUTE = 0x13004409;
enum DIBUTTON_BBALLD_LEFT_LINK = 0x1300c4e4;
enum DIBUTTON_BBALLD_RIGHT_LINK = 0x1300c4ec;
enum DIBUTTON_BBALLD_FORWARD_LINK = 0x130144e0;
enum DIBUTTON_BBALLD_BACK_LINK = 0x130144e8;
enum DIBUTTON_BBALLD_DEVICE = 0x130044fe;
enum DIBUTTON_BBALLD_PAUSE = 0x130044fc;
enum DIVIRTUAL_SPORTS_FOOTBALL_FIELD = 0x14000000;
enum DIBUTTON_FOOTBALLP_PLAY = 0x14000401;
enum DIBUTTON_FOOTBALLP_SELECT = 0x14000402;
enum DIBUTTON_FOOTBALLP_HELP = 0x14000403;
enum DIBUTTON_FOOTBALLP_MENU = 0x140004fd;
enum DIBUTTON_FOOTBALLP_DEVICE = 0x140044fe;
enum DIBUTTON_FOOTBALLP_PAUSE = 0x140044fc;
enum DIVIRTUAL_SPORTS_FOOTBALL_QBCK = 0x15000000;
enum DIAXIS_FOOTBALLQ_LATERAL = 0x15008201;
enum DIAXIS_FOOTBALLQ_MOVE = 0x15010202;
enum DIBUTTON_FOOTBALLQ_SELECT = 0x15000401;
enum DIBUTTON_FOOTBALLQ_SNAP = 0x15000402;
enum DIBUTTON_FOOTBALLQ_JUMP = 0x15000403;
enum DIBUTTON_FOOTBALLQ_SLIDE = 0x15000404;
enum DIBUTTON_FOOTBALLQ_PASS = 0x15000405;
enum DIBUTTON_FOOTBALLQ_FAKE = 0x15000406;
enum DIBUTTON_FOOTBALLQ_MENU = 0x150004fd;
enum DIBUTTON_FOOTBALLQ_FAKESNAP = 0x15004407;
enum DIBUTTON_FOOTBALLQ_MOTION = 0x15004408;
enum DIBUTTON_FOOTBALLQ_AUDIBLE = 0x15004409;
enum DIBUTTON_FOOTBALLQ_LEFT_LINK = 0x1500c4e4;
enum DIBUTTON_FOOTBALLQ_RIGHT_LINK = 0x1500c4ec;
enum DIBUTTON_FOOTBALLQ_FORWARD_LINK = 0x150144e0;
enum DIBUTTON_FOOTBALLQ_BACK_LINK = 0x150144e8;
enum DIBUTTON_FOOTBALLQ_DEVICE = 0x150044fe;
enum DIBUTTON_FOOTBALLQ_PAUSE = 0x150044fc;
enum DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE = 0x16000000;
enum DIAXIS_FOOTBALLO_LATERAL = 0x16008201;
enum DIAXIS_FOOTBALLO_MOVE = 0x16010202;
enum DIBUTTON_FOOTBALLO_JUMP = 0x16000401;
enum DIBUTTON_FOOTBALLO_LEFTARM = 0x16000402;
enum DIBUTTON_FOOTBALLO_RIGHTARM = 0x16000403;
enum DIBUTTON_FOOTBALLO_THROW = 0x16000404;
enum DIBUTTON_FOOTBALLO_SPIN = 0x16000405;
enum DIBUTTON_FOOTBALLO_MENU = 0x160004fd;
enum DIBUTTON_FOOTBALLO_JUKE = 0x16004406;
enum DIBUTTON_FOOTBALLO_SHOULDER = 0x16004407;
enum DIBUTTON_FOOTBALLO_TURBO = 0x16004408;
enum DIBUTTON_FOOTBALLO_DIVE = 0x16004409;
enum DIBUTTON_FOOTBALLO_ZOOM = 0x1600440a;
enum DIBUTTON_FOOTBALLO_SUBSTITUTE = 0x1600440b;
enum DIBUTTON_FOOTBALLO_LEFT_LINK = 0x1600c4e4;
enum DIBUTTON_FOOTBALLO_RIGHT_LINK = 0x1600c4ec;
enum DIBUTTON_FOOTBALLO_FORWARD_LINK = 0x160144e0;
enum DIBUTTON_FOOTBALLO_BACK_LINK = 0x160144e8;
enum DIBUTTON_FOOTBALLO_DEVICE = 0x160044fe;
enum DIBUTTON_FOOTBALLO_PAUSE = 0x160044fc;
enum DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE = 0x17000000;
enum DIAXIS_FOOTBALLD_LATERAL = 0x17008201;
enum DIAXIS_FOOTBALLD_MOVE = 0x17010202;
enum DIBUTTON_FOOTBALLD_PLAY = 0x17000401;
enum DIBUTTON_FOOTBALLD_SELECT = 0x17000402;
enum DIBUTTON_FOOTBALLD_JUMP = 0x17000403;
enum DIBUTTON_FOOTBALLD_TACKLE = 0x17000404;
enum DIBUTTON_FOOTBALLD_FAKE = 0x17000405;
enum DIBUTTON_FOOTBALLD_SUPERTACKLE = 0x17000406;
enum DIBUTTON_FOOTBALLD_MENU = 0x170004fd;
enum DIBUTTON_FOOTBALLD_SPIN = 0x17004407;
enum DIBUTTON_FOOTBALLD_SWIM = 0x17004408;
enum DIBUTTON_FOOTBALLD_BULLRUSH = 0x17004409;
enum DIBUTTON_FOOTBALLD_RIP = 0x1700440a;
enum DIBUTTON_FOOTBALLD_AUDIBLE = 0x1700440b;
enum DIBUTTON_FOOTBALLD_ZOOM = 0x1700440c;
enum DIBUTTON_FOOTBALLD_SUBSTITUTE = 0x1700440d;
enum DIBUTTON_FOOTBALLD_LEFT_LINK = 0x1700c4e4;
enum DIBUTTON_FOOTBALLD_RIGHT_LINK = 0x1700c4ec;
enum DIBUTTON_FOOTBALLD_FORWARD_LINK = 0x170144e0;
enum DIBUTTON_FOOTBALLD_BACK_LINK = 0x170144e8;
enum DIBUTTON_FOOTBALLD_DEVICE = 0x170044fe;
enum DIBUTTON_FOOTBALLD_PAUSE = 0x170044fc;
enum DIVIRTUAL_SPORTS_GOLF = 0x18000000;
enum DIAXIS_GOLF_LATERAL = 0x18008201;
enum DIAXIS_GOLF_MOVE = 0x18010202;
enum DIBUTTON_GOLF_SWING = 0x18000401;
enum DIBUTTON_GOLF_SELECT = 0x18000402;
enum DIBUTTON_GOLF_UP = 0x18000403;
enum DIBUTTON_GOLF_DOWN = 0x18000404;
enum DIBUTTON_GOLF_TERRAIN = 0x18000405;
enum DIBUTTON_GOLF_FLYBY = 0x18000406;
enum DIBUTTON_GOLF_MENU = 0x180004fd;
enum DIHATSWITCH_GOLF_SCROLL = 0x18004601;
enum DIBUTTON_GOLF_ZOOM = 0x18004407;
enum DIBUTTON_GOLF_TIMEOUT = 0x18004408;
enum DIBUTTON_GOLF_SUBSTITUTE = 0x18004409;
enum DIBUTTON_GOLF_LEFT_LINK = 0x1800c4e4;
enum DIBUTTON_GOLF_RIGHT_LINK = 0x1800c4ec;
enum DIBUTTON_GOLF_FORWARD_LINK = 0x180144e0;
enum DIBUTTON_GOLF_BACK_LINK = 0x180144e8;
enum DIBUTTON_GOLF_DEVICE = 0x180044fe;
enum DIBUTTON_GOLF_PAUSE = 0x180044fc;
enum DIVIRTUAL_SPORTS_HOCKEY_OFFENSE = 0x19000000;
enum DIAXIS_HOCKEYO_LATERAL = 0x19008201;
enum DIAXIS_HOCKEYO_MOVE = 0x19010202;
enum DIBUTTON_HOCKEYO_SHOOT = 0x19000401;
enum DIBUTTON_HOCKEYO_PASS = 0x19000402;
enum DIBUTTON_HOCKEYO_BURST = 0x19000403;
enum DIBUTTON_HOCKEYO_SPECIAL = 0x19000404;
enum DIBUTTON_HOCKEYO_FAKE = 0x19000405;
enum DIBUTTON_HOCKEYO_MENU = 0x190004fd;
enum DIHATSWITCH_HOCKEYO_SCROLL = 0x19004601;
enum DIBUTTON_HOCKEYO_ZOOM = 0x19004406;
enum DIBUTTON_HOCKEYO_STRATEGY = 0x19004407;
enum DIBUTTON_HOCKEYO_TIMEOUT = 0x19004408;
enum DIBUTTON_HOCKEYO_SUBSTITUTE = 0x19004409;
enum DIBUTTON_HOCKEYO_LEFT_LINK = 0x1900c4e4;
enum DIBUTTON_HOCKEYO_RIGHT_LINK = 0x1900c4ec;
enum DIBUTTON_HOCKEYO_FORWARD_LINK = 0x190144e0;
enum DIBUTTON_HOCKEYO_BACK_LINK = 0x190144e8;
enum DIBUTTON_HOCKEYO_DEVICE = 0x190044fe;
enum DIBUTTON_HOCKEYO_PAUSE = 0x190044fc;
enum DIVIRTUAL_SPORTS_HOCKEY_DEFENSE = 0x1a000000;
enum DIAXIS_HOCKEYD_LATERAL = 0x1a008201;
enum DIAXIS_HOCKEYD_MOVE = 0x1a010202;
enum DIBUTTON_HOCKEYD_PLAYER = 0x1a000401;
enum DIBUTTON_HOCKEYD_STEAL = 0x1a000402;
enum DIBUTTON_HOCKEYD_BURST = 0x1a000403;
enum DIBUTTON_HOCKEYD_BLOCK = 0x1a000404;
enum DIBUTTON_HOCKEYD_FAKE = 0x1a000405;
enum DIBUTTON_HOCKEYD_MENU = 0x1a0004fd;
enum DIHATSWITCH_HOCKEYD_SCROLL = 0x1a004601;
enum DIBUTTON_HOCKEYD_ZOOM = 0x1a004406;
enum DIBUTTON_HOCKEYD_STRATEGY = 0x1a004407;
enum DIBUTTON_HOCKEYD_TIMEOUT = 0x1a004408;
enum DIBUTTON_HOCKEYD_SUBSTITUTE = 0x1a004409;
enum DIBUTTON_HOCKEYD_LEFT_LINK = 0x1a00c4e4;
enum DIBUTTON_HOCKEYD_RIGHT_LINK = 0x1a00c4ec;
enum DIBUTTON_HOCKEYD_FORWARD_LINK = 0x1a0144e0;
enum DIBUTTON_HOCKEYD_BACK_LINK = 0x1a0144e8;
enum DIBUTTON_HOCKEYD_DEVICE = 0x1a0044fe;
enum DIBUTTON_HOCKEYD_PAUSE = 0x1a0044fc;
enum DIVIRTUAL_SPORTS_HOCKEY_GOALIE = 0x1b000000;
enum DIAXIS_HOCKEYG_LATERAL = 0x1b008201;
enum DIAXIS_HOCKEYG_MOVE = 0x1b010202;
enum DIBUTTON_HOCKEYG_PASS = 0x1b000401;
enum DIBUTTON_HOCKEYG_POKE = 0x1b000402;
enum DIBUTTON_HOCKEYG_STEAL = 0x1b000403;
enum DIBUTTON_HOCKEYG_BLOCK = 0x1b000404;
enum DIBUTTON_HOCKEYG_MENU = 0x1b0004fd;
enum DIHATSWITCH_HOCKEYG_SCROLL = 0x1b004601;
enum DIBUTTON_HOCKEYG_ZOOM = 0x1b004405;
enum DIBUTTON_HOCKEYG_STRATEGY = 0x1b004406;
enum DIBUTTON_HOCKEYG_TIMEOUT = 0x1b004407;
enum DIBUTTON_HOCKEYG_SUBSTITUTE = 0x1b004408;
enum DIBUTTON_HOCKEYG_LEFT_LINK = 0x1b00c4e4;
enum DIBUTTON_HOCKEYG_RIGHT_LINK = 0x1b00c4ec;
enum DIBUTTON_HOCKEYG_FORWARD_LINK = 0x1b0144e0;
enum DIBUTTON_HOCKEYG_BACK_LINK = 0x1b0144e8;
enum DIBUTTON_HOCKEYG_DEVICE = 0x1b0044fe;
enum DIBUTTON_HOCKEYG_PAUSE = 0x1b0044fc;
enum DIVIRTUAL_SPORTS_BIKING_MOUNTAIN = 0x1c000000;
enum DIAXIS_BIKINGM_TURN = 0x1c008201;
enum DIAXIS_BIKINGM_PEDAL = 0x1c010202;
enum DIBUTTON_BIKINGM_JUMP = 0x1c000401;
enum DIBUTTON_BIKINGM_CAMERA = 0x1c000402;
enum DIBUTTON_BIKINGM_SPECIAL1 = 0x1c000403;
enum DIBUTTON_BIKINGM_SELECT = 0x1c000404;
enum DIBUTTON_BIKINGM_SPECIAL2 = 0x1c000405;
enum DIBUTTON_BIKINGM_MENU = 0x1c0004fd;
enum DIHATSWITCH_BIKINGM_SCROLL = 0x1c004601;
enum DIBUTTON_BIKINGM_ZOOM = 0x1c004406;
enum DIAXIS_BIKINGM_BRAKE = 0x1c044203;
enum DIBUTTON_BIKINGM_LEFT_LINK = 0x1c00c4e4;
enum DIBUTTON_BIKINGM_RIGHT_LINK = 0x1c00c4ec;
enum DIBUTTON_BIKINGM_FASTER_LINK = 0x1c0144e0;
enum DIBUTTON_BIKINGM_SLOWER_LINK = 0x1c0144e8;
enum DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK = 0x1c0444e8;
enum DIBUTTON_BIKINGM_DEVICE = 0x1c0044fe;
enum DIBUTTON_BIKINGM_PAUSE = 0x1c0044fc;
enum DIVIRTUAL_SPORTS_SKIING = 0x1d000000;
enum DIAXIS_SKIING_TURN = 0x1d008201;
enum DIAXIS_SKIING_SPEED = 0x1d010202;
enum DIBUTTON_SKIING_JUMP = 0x1d000401;
enum DIBUTTON_SKIING_CROUCH = 0x1d000402;
enum DIBUTTON_SKIING_CAMERA = 0x1d000403;
enum DIBUTTON_SKIING_SPECIAL1 = 0x1d000404;
enum DIBUTTON_SKIING_SELECT = 0x1d000405;
enum DIBUTTON_SKIING_SPECIAL2 = 0x1d000406;
enum DIBUTTON_SKIING_MENU = 0x1d0004fd;
enum DIHATSWITCH_SKIING_GLANCE = 0x1d004601;
enum DIBUTTON_SKIING_ZOOM = 0x1d004407;
enum DIBUTTON_SKIING_LEFT_LINK = 0x1d00c4e4;
enum DIBUTTON_SKIING_RIGHT_LINK = 0x1d00c4ec;
enum DIBUTTON_SKIING_FASTER_LINK = 0x1d0144e0;
enum DIBUTTON_SKIING_SLOWER_LINK = 0x1d0144e8;
enum DIBUTTON_SKIING_DEVICE = 0x1d0044fe;
enum DIBUTTON_SKIING_PAUSE = 0x1d0044fc;
enum DIVIRTUAL_SPORTS_SOCCER_OFFENSE = 0x1e000000;
enum DIAXIS_SOCCERO_LATERAL = 0x1e008201;
enum DIAXIS_SOCCERO_MOVE = 0x1e010202;
enum DIAXIS_SOCCERO_BEND = 0x1e018203;
enum DIBUTTON_SOCCERO_SHOOT = 0x1e000401;
enum DIBUTTON_SOCCERO_PASS = 0x1e000402;
enum DIBUTTON_SOCCERO_FAKE = 0x1e000403;
enum DIBUTTON_SOCCERO_PLAYER = 0x1e000404;
enum DIBUTTON_SOCCERO_SPECIAL1 = 0x1e000405;
enum DIBUTTON_SOCCERO_SELECT = 0x1e000406;
enum DIBUTTON_SOCCERO_MENU = 0x1e0004fd;
enum DIHATSWITCH_SOCCERO_GLANCE = 0x1e004601;
enum DIBUTTON_SOCCERO_SUBSTITUTE = 0x1e004407;
enum DIBUTTON_SOCCERO_SHOOTLOW = 0x1e004408;
enum DIBUTTON_SOCCERO_SHOOTHIGH = 0x1e004409;
enum DIBUTTON_SOCCERO_PASSTHRU = 0x1e00440a;
enum DIBUTTON_SOCCERO_SPRINT = 0x1e00440b;
enum DIBUTTON_SOCCERO_CONTROL = 0x1e00440c;
enum DIBUTTON_SOCCERO_HEAD = 0x1e00440d;
enum DIBUTTON_SOCCERO_LEFT_LINK = 0x1e00c4e4;
enum DIBUTTON_SOCCERO_RIGHT_LINK = 0x1e00c4ec;
enum DIBUTTON_SOCCERO_FORWARD_LINK = 0x1e0144e0;
enum DIBUTTON_SOCCERO_BACK_LINK = 0x1e0144e8;
enum DIBUTTON_SOCCERO_DEVICE = 0x1e0044fe;
enum DIBUTTON_SOCCERO_PAUSE = 0x1e0044fc;
enum DIVIRTUAL_SPORTS_SOCCER_DEFENSE = 0x1f000000;
enum DIAXIS_SOCCERD_LATERAL = 0x1f008201;
enum DIAXIS_SOCCERD_MOVE = 0x1f010202;
enum DIBUTTON_SOCCERD_BLOCK = 0x1f000401;
enum DIBUTTON_SOCCERD_STEAL = 0x1f000402;
enum DIBUTTON_SOCCERD_FAKE = 0x1f000403;
enum DIBUTTON_SOCCERD_PLAYER = 0x1f000404;
enum DIBUTTON_SOCCERD_SPECIAL = 0x1f000405;
enum DIBUTTON_SOCCERD_SELECT = 0x1f000406;
enum DIBUTTON_SOCCERD_SLIDE = 0x1f000407;
enum DIBUTTON_SOCCERD_MENU = 0x1f0004fd;
enum DIHATSWITCH_SOCCERD_GLANCE = 0x1f004601;
enum DIBUTTON_SOCCERD_FOUL = 0x1f004408;
enum DIBUTTON_SOCCERD_HEAD = 0x1f004409;
enum DIBUTTON_SOCCERD_CLEAR = 0x1f00440a;
enum DIBUTTON_SOCCERD_GOALIECHARGE = 0x1f00440b;
enum DIBUTTON_SOCCERD_SUBSTITUTE = 0x1f00440c;
enum DIBUTTON_SOCCERD_LEFT_LINK = 0x1f00c4e4;
enum DIBUTTON_SOCCERD_RIGHT_LINK = 0x1f00c4ec;
enum DIBUTTON_SOCCERD_FORWARD_LINK = 0x1f0144e0;
enum DIBUTTON_SOCCERD_BACK_LINK = 0x1f0144e8;
enum DIBUTTON_SOCCERD_DEVICE = 0x1f0044fe;
enum DIBUTTON_SOCCERD_PAUSE = 0x1f0044fc;
enum DIVIRTUAL_SPORTS_RACQUET = 0x20000000;
enum DIAXIS_RACQUET_LATERAL = 0x20008201;
enum DIAXIS_RACQUET_MOVE = 0x20010202;
enum DIBUTTON_RACQUET_SWING = 0x20000401;
enum DIBUTTON_RACQUET_BACKSWING = 0x20000402;
enum DIBUTTON_RACQUET_SMASH = 0x20000403;
enum DIBUTTON_RACQUET_SPECIAL = 0x20000404;
enum DIBUTTON_RACQUET_SELECT = 0x20000405;
enum DIBUTTON_RACQUET_MENU = 0x200004fd;
enum DIHATSWITCH_RACQUET_GLANCE = 0x20004601;
enum DIBUTTON_RACQUET_TIMEOUT = 0x20004406;
enum DIBUTTON_RACQUET_SUBSTITUTE = 0x20004407;
enum DIBUTTON_RACQUET_LEFT_LINK = 0x2000c4e4;
enum DIBUTTON_RACQUET_RIGHT_LINK = 0x2000c4ec;
enum DIBUTTON_RACQUET_FORWARD_LINK = 0x200144e0;
enum DIBUTTON_RACQUET_BACK_LINK = 0x200144e8;
enum DIBUTTON_RACQUET_DEVICE = 0x200044fe;
enum DIBUTTON_RACQUET_PAUSE = 0x200044fc;
enum DIVIRTUAL_ARCADE_SIDE2SIDE = 0x21000000;
enum DIAXIS_ARCADES_LATERAL = 0x21008201;
enum DIAXIS_ARCADES_MOVE = 0x21010202;
enum DIBUTTON_ARCADES_THROW = 0x21000401;
enum DIBUTTON_ARCADES_CARRY = 0x21000402;
enum DIBUTTON_ARCADES_ATTACK = 0x21000403;
enum DIBUTTON_ARCADES_SPECIAL = 0x21000404;
enum DIBUTTON_ARCADES_SELECT = 0x21000405;
enum DIBUTTON_ARCADES_MENU = 0x210004fd;
enum DIHATSWITCH_ARCADES_VIEW = 0x21004601;
enum DIBUTTON_ARCADES_LEFT_LINK = 0x2100c4e4;
enum DIBUTTON_ARCADES_RIGHT_LINK = 0x2100c4ec;
enum DIBUTTON_ARCADES_FORWARD_LINK = 0x210144e0;
enum DIBUTTON_ARCADES_BACK_LINK = 0x210144e8;
enum DIBUTTON_ARCADES_VIEW_UP_LINK = 0x2107c4e0;
enum DIBUTTON_ARCADES_VIEW_DOWN_LINK = 0x2107c4e8;
enum DIBUTTON_ARCADES_VIEW_LEFT_LINK = 0x2107c4e4;
enum DIBUTTON_ARCADES_VIEW_RIGHT_LINK = 0x2107c4ec;
enum DIBUTTON_ARCADES_DEVICE = 0x210044fe;
enum DIBUTTON_ARCADES_PAUSE = 0x210044fc;
enum DIVIRTUAL_ARCADE_PLATFORM = 0x22000000;
enum DIAXIS_ARCADEP_LATERAL = 0x22008201;
enum DIAXIS_ARCADEP_MOVE = 0x22010202;
enum DIBUTTON_ARCADEP_JUMP = 0x22000401;
enum DIBUTTON_ARCADEP_FIRE = 0x22000402;
enum DIBUTTON_ARCADEP_CROUCH = 0x22000403;
enum DIBUTTON_ARCADEP_SPECIAL = 0x22000404;
enum DIBUTTON_ARCADEP_SELECT = 0x22000405;
enum DIBUTTON_ARCADEP_MENU = 0x220004fd;
enum DIHATSWITCH_ARCADEP_VIEW = 0x22004601;
enum DIBUTTON_ARCADEP_FIRESECONDARY = 0x22004406;
enum DIBUTTON_ARCADEP_LEFT_LINK = 0x2200c4e4;
enum DIBUTTON_ARCADEP_RIGHT_LINK = 0x2200c4ec;
enum DIBUTTON_ARCADEP_FORWARD_LINK = 0x220144e0;
enum DIBUTTON_ARCADEP_BACK_LINK = 0x220144e8;
enum DIBUTTON_ARCADEP_VIEW_UP_LINK = 0x2207c4e0;
enum DIBUTTON_ARCADEP_VIEW_DOWN_LINK = 0x2207c4e8;
enum DIBUTTON_ARCADEP_VIEW_LEFT_LINK = 0x2207c4e4;
enum DIBUTTON_ARCADEP_VIEW_RIGHT_LINK = 0x2207c4ec;
enum DIBUTTON_ARCADEP_DEVICE = 0x220044fe;
enum DIBUTTON_ARCADEP_PAUSE = 0x220044fc;
enum DIVIRTUAL_CAD_2DCONTROL = 0x23000000;
enum DIAXIS_2DCONTROL_LATERAL = 0x23008201;
enum DIAXIS_2DCONTROL_MOVE = 0x23010202;
enum DIAXIS_2DCONTROL_INOUT = 0x23018203;
enum DIBUTTON_2DCONTROL_SELECT = 0x23000401;
enum DIBUTTON_2DCONTROL_SPECIAL1 = 0x23000402;
enum DIBUTTON_2DCONTROL_SPECIAL = 0x23000403;
enum DIBUTTON_2DCONTROL_SPECIAL2 = 0x23000404;
enum DIBUTTON_2DCONTROL_MENU = 0x230004fd;
enum DIHATSWITCH_2DCONTROL_HATSWITCH = 0x23004601;
enum DIAXIS_2DCONTROL_ROTATEZ = 0x23024204;
enum DIBUTTON_2DCONTROL_DISPLAY = 0x23004405;
enum DIBUTTON_2DCONTROL_DEVICE = 0x230044fe;
enum DIBUTTON_2DCONTROL_PAUSE = 0x230044fc;
enum DIVIRTUAL_CAD_3DCONTROL = 0x24000000;
enum DIAXIS_3DCONTROL_LATERAL = 0x24008201;
enum DIAXIS_3DCONTROL_MOVE = 0x24010202;
enum DIAXIS_3DCONTROL_INOUT = 0x24018203;
enum DIBUTTON_3DCONTROL_SELECT = 0x24000401;
enum DIBUTTON_3DCONTROL_SPECIAL1 = 0x24000402;
enum DIBUTTON_3DCONTROL_SPECIAL = 0x24000403;
enum DIBUTTON_3DCONTROL_SPECIAL2 = 0x24000404;
enum DIBUTTON_3DCONTROL_MENU = 0x240004fd;
enum DIHATSWITCH_3DCONTROL_HATSWITCH = 0x24004601;
enum DIAXIS_3DCONTROL_ROTATEX = 0x24034204;
enum DIAXIS_3DCONTROL_ROTATEY = 0x2402c205;
enum DIAXIS_3DCONTROL_ROTATEZ = 0x24024206;
enum DIBUTTON_3DCONTROL_DISPLAY = 0x24004405;
enum DIBUTTON_3DCONTROL_DEVICE = 0x240044fe;
enum DIBUTTON_3DCONTROL_PAUSE = 0x240044fc;
enum DIVIRTUAL_CAD_FLYBY = 0x25000000;
enum DIAXIS_CADF_LATERAL = 0x25008201;
enum DIAXIS_CADF_MOVE = 0x25010202;
enum DIAXIS_CADF_INOUT = 0x25018203;
enum DIBUTTON_CADF_SELECT = 0x25000401;
enum DIBUTTON_CADF_SPECIAL1 = 0x25000402;
enum DIBUTTON_CADF_SPECIAL = 0x25000403;
enum DIBUTTON_CADF_SPECIAL2 = 0x25000404;
enum DIBUTTON_CADF_MENU = 0x250004fd;
enum DIHATSWITCH_CADF_HATSWITCH = 0x25004601;
enum DIAXIS_CADF_ROTATEX = 0x25034204;
enum DIAXIS_CADF_ROTATEY = 0x2502c205;
enum DIAXIS_CADF_ROTATEZ = 0x25024206;
enum DIBUTTON_CADF_DISPLAY = 0x25004405;
enum DIBUTTON_CADF_DEVICE = 0x250044fe;
enum DIBUTTON_CADF_PAUSE = 0x250044fc;
enum DIVIRTUAL_CAD_MODEL = 0x26000000;
enum DIAXIS_CADM_LATERAL = 0x26008201;
enum DIAXIS_CADM_MOVE = 0x26010202;
enum DIAXIS_CADM_INOUT = 0x26018203;
enum DIBUTTON_CADM_SELECT = 0x26000401;
enum DIBUTTON_CADM_SPECIAL1 = 0x26000402;
enum DIBUTTON_CADM_SPECIAL = 0x26000403;
enum DIBUTTON_CADM_SPECIAL2 = 0x26000404;
enum DIBUTTON_CADM_MENU = 0x260004fd;
enum DIHATSWITCH_CADM_HATSWITCH = 0x26004601;
enum DIAXIS_CADM_ROTATEX = 0x26034204;
enum DIAXIS_CADM_ROTATEY = 0x2602c205;
enum DIAXIS_CADM_ROTATEZ = 0x26024206;
enum DIBUTTON_CADM_DISPLAY = 0x26004405;
enum DIBUTTON_CADM_DEVICE = 0x260044fe;
enum DIBUTTON_CADM_PAUSE = 0x260044fc;
enum DIVIRTUAL_REMOTE_CONTROL = 0x27000000;
enum DIAXIS_REMOTE_SLIDER = 0x27050201;
enum DIBUTTON_REMOTE_MUTE = 0x27000401;
enum DIBUTTON_REMOTE_SELECT = 0x27000402;
enum DIBUTTON_REMOTE_PLAY = 0x27002403;
enum DIBUTTON_REMOTE_CUE = 0x27002404;
enum DIBUTTON_REMOTE_REVIEW = 0x27002405;
enum DIBUTTON_REMOTE_CHANGE = 0x27002406;
enum DIBUTTON_REMOTE_RECORD = 0x27002407;
enum DIBUTTON_REMOTE_MENU = 0x270004fd;
enum DIAXIS_REMOTE_SLIDER2 = 0x27054202;
enum DIBUTTON_REMOTE_TV = 0x27005c08;
enum DIBUTTON_REMOTE_CABLE = 0x27005c09;
enum DIBUTTON_REMOTE_CD = 0x27005c0a;
enum DIBUTTON_REMOTE_VCR = 0x27005c0b;
enum DIBUTTON_REMOTE_TUNER = 0x27005c0c;
enum DIBUTTON_REMOTE_DVD = 0x27005c0d;
enum DIBUTTON_REMOTE_ADJUST = 0x27005c0e;
enum DIBUTTON_REMOTE_DIGIT0 = 0x2700540f;
enum DIBUTTON_REMOTE_DIGIT1 = 0x27005410;
enum DIBUTTON_REMOTE_DIGIT2 = 0x27005411;
enum DIBUTTON_REMOTE_DIGIT3 = 0x27005412;
enum DIBUTTON_REMOTE_DIGIT4 = 0x27005413;
enum DIBUTTON_REMOTE_DIGIT5 = 0x27005414;
enum DIBUTTON_REMOTE_DIGIT6 = 0x27005415;
enum DIBUTTON_REMOTE_DIGIT7 = 0x27005416;
enum DIBUTTON_REMOTE_DIGIT8 = 0x27005417;
enum DIBUTTON_REMOTE_DIGIT9 = 0x27005418;
enum DIBUTTON_REMOTE_DEVICE = 0x270044fe;
enum DIBUTTON_REMOTE_PAUSE = 0x270044fc;
enum DIVIRTUAL_BROWSER_CONTROL = 0x28000000;
enum DIAXIS_BROWSER_LATERAL = 0x28008201;
enum DIAXIS_BROWSER_MOVE = 0x28010202;
enum DIBUTTON_BROWSER_SELECT = 0x28000401;
enum DIAXIS_BROWSER_VIEW = 0x28018203;
enum DIBUTTON_BROWSER_REFRESH = 0x28000402;
enum DIBUTTON_BROWSER_MENU = 0x280004fd;
enum DIBUTTON_BROWSER_SEARCH = 0x28004403;
enum DIBUTTON_BROWSER_STOP = 0x28004404;
enum DIBUTTON_BROWSER_HOME = 0x28004405;
enum DIBUTTON_BROWSER_FAVORITES = 0x28004406;
enum DIBUTTON_BROWSER_NEXT = 0x28004407;
enum DIBUTTON_BROWSER_PREVIOUS = 0x28004408;
enum DIBUTTON_BROWSER_HISTORY = 0x28004409;
enum DIBUTTON_BROWSER_PRINT = 0x2800440a;
enum DIBUTTON_BROWSER_DEVICE = 0x280044fe;
enum DIBUTTON_BROWSER_PAUSE = 0x280044fc;
enum DIVIRTUAL_DRIVING_MECHA = 0x29000000;
enum DIAXIS_MECHA_STEER = 0x29008201;
enum DIAXIS_MECHA_TORSO = 0x29010202;
enum DIAXIS_MECHA_ROTATE = 0x29020203;
enum DIAXIS_MECHA_THROTTLE = 0x29038204;
enum DIBUTTON_MECHA_FIRE = 0x29000401;
enum DIBUTTON_MECHA_WEAPONS = 0x29000402;
enum DIBUTTON_MECHA_TARGET = 0x29000403;
enum DIBUTTON_MECHA_REVERSE = 0x29000404;
enum DIBUTTON_MECHA_ZOOM = 0x29000405;
enum DIBUTTON_MECHA_JUMP = 0x29000406;
enum DIBUTTON_MECHA_MENU = 0x290004fd;
enum DIBUTTON_MECHA_CENTER = 0x29004407;
enum DIHATSWITCH_MECHA_GLANCE = 0x29004601;
enum DIBUTTON_MECHA_VIEW = 0x29004408;
enum DIBUTTON_MECHA_FIRESECONDARY = 0x29004409;
enum DIBUTTON_MECHA_LEFT_LINK = 0x2900c4e4;
enum DIBUTTON_MECHA_RIGHT_LINK = 0x2900c4ec;
enum DIBUTTON_MECHA_FORWARD_LINK = 0x290144e0;
enum DIBUTTON_MECHA_BACK_LINK = 0x290144e8;
enum DIBUTTON_MECHA_ROTATE_LEFT_LINK = 0x290244e4;
enum DIBUTTON_MECHA_ROTATE_RIGHT_LINK = 0x290244ec;
enum DIBUTTON_MECHA_FASTER_LINK = 0x2903c4e0;
enum DIBUTTON_MECHA_SLOWER_LINK = 0x2903c4e8;
enum DIBUTTON_MECHA_DEVICE = 0x290044fe;
enum DIBUTTON_MECHA_PAUSE = 0x290044fc;
enum DIAXIS_ANY_X_1 = 0xff00c201;
enum DIAXIS_ANY_X_2 = 0xff00c202;
enum DIAXIS_ANY_Y_1 = 0xff014201;
enum DIAXIS_ANY_Y_2 = 0xff014202;
enum DIAXIS_ANY_Z_1 = 0xff01c201;
enum DIAXIS_ANY_Z_2 = 0xff01c202;
enum DIAXIS_ANY_R_1 = 0xff024201;
enum DIAXIS_ANY_R_2 = 0xff024202;
enum DIAXIS_ANY_U_1 = 0xff02c201;
enum DIAXIS_ANY_U_2 = 0xff02c202;
enum DIAXIS_ANY_V_1 = 0xff034201;
enum DIAXIS_ANY_V_2 = 0xff034202;
enum DIAXIS_ANY_A_1 = 0xff03c201;
enum DIAXIS_ANY_A_2 = 0xff03c202;
enum DIAXIS_ANY_B_1 = 0xff044201;
enum DIAXIS_ANY_B_2 = 0xff044202;
enum DIAXIS_ANY_C_1 = 0xff04c201;
enum DIAXIS_ANY_C_2 = 0xff04c202;
enum DIAXIS_ANY_S_1 = 0xff054201;
enum DIAXIS_ANY_S_2 = 0xff054202;
enum DIAXIS_ANY_1 = 0xff004201;
enum DIAXIS_ANY_2 = 0xff004202;
enum DIAXIS_ANY_3 = 0xff004203;
enum DIAXIS_ANY_4 = 0xff004204;
enum DIPOV_ANY_1 = 0xff004601;
enum DIPOV_ANY_2 = 0xff004602;
enum DIPOV_ANY_3 = 0xff004603;
enum DIPOV_ANY_4 = 0xff004604;
enum JOY_PASSDRIVERDATA = 0x10000000;
enum JOY_HWS_ISHEADTRACKER = 0x02000000;
enum JOY_HWS_ISGAMEPORTDRIVER = 0x04000000;
enum JOY_HWS_ISANALOGPORTDRIVER = 0x08000000;
enum JOY_HWS_AUTOLOAD = 0x10000000;
enum JOY_HWS_NODEVNODE = 0x20000000;
enum JOY_HWS_ISGAMEPORTBUS = 0xffffffff80000000;
enum JOY_HWS_GAMEPORTBUSBUSY = 0x00000001;
enum JOY_US_VOLATILE = 0x00000008;
enum JOY_OEMPOLL_PASSDRIVERDATA = 0x00000007;
enum BUTTON_BIT_POWER = 0x00000001;
enum BUTTON_BIT_WINDOWS = 0x00000002;
enum BUTTON_BIT_VOLUMEUP = 0x00000004;
enum BUTTON_BIT_VOLUMEDOWN = 0x00000008;
enum BUTTON_BIT_ROTATION_LOCK = 0x00000010;
enum BUTTON_BIT_BACK = 0x00000020;
enum BUTTON_BIT_SEARCH = 0x00000040;
enum BUTTON_BIT_CAMERAFOCUS = 0x00000080;
enum BUTTON_BIT_CAMERASHUTTER = 0x00000100;
enum BUTTON_BIT_RINGERTOGGLE = 0x00000200;
enum BUTTON_BIT_HEADSET = 0x00000400;
enum BUTTON_BIT_HWKBDEPLOY = 0x00000800;
enum BUTTON_BIT_CAMERALENS = 0x00001000;
enum BUTTON_BIT_OEMCUSTOM = 0x00002000;
enum BUTTON_BIT_OEMCUSTOM2 = 0x00004000;
enum BUTTON_BIT_OEMCUSTOM3 = 0x00008000;
enum BUTTON_BIT_ALLBUTTONSMASK = 0x00003fff;
enum IOCTL_BUTTON_SET_ENABLED_ON_IDLE = 0x000b02a8;
enum IOCTL_BUTTON_GET_ENABLED_ON_IDLE = 0x000b02ac;
alias PHIDP_PREPARSED_DATA = long;
struct DICONSTANTFORCE
{
    int lMagnitude;
}
struct DIRAMPFORCE
{
    int lStart;
    int lEnd;
}
struct DIPERIODIC
{
    uint dwMagnitude;
    int lOffset;
    uint dwPhase;
    uint dwPeriod;
}
struct DICONDITION
{
    int lOffset;
    int lPositiveCoefficient;
    int lNegativeCoefficient;
    uint dwPositiveSaturation;
    uint dwNegativeSaturation;
    int lDeadBand;
}
struct DICUSTOMFORCE
{
    uint cChannels;
    uint dwSamplePeriod;
    uint cSamples;
    int* rglForceData;
}
struct DIENVELOPE
{
    uint dwSize;
    uint dwAttackLevel;
    uint dwAttackTime;
    uint dwFadeLevel;
    uint dwFadeTime;
}
struct DIEFFECT_DX5
{
    uint dwSize;
    uint dwFlags;
    uint dwDuration;
    uint dwSamplePeriod;
    uint dwGain;
    uint dwTriggerButton;
    uint dwTriggerRepeatInterval;
    uint cAxes;
    uint* rgdwAxes;
    int* rglDirection;
    DIENVELOPE* lpEnvelope;
    uint cbTypeSpecificParams;
    void* lpvTypeSpecificParams;
}
struct DIEFFECT
{
    uint dwSize;
    uint dwFlags;
    uint dwDuration;
    uint dwSamplePeriod;
    uint dwGain;
    uint dwTriggerButton;
    uint dwTriggerRepeatInterval;
    uint cAxes;
    uint* rgdwAxes;
    int* rglDirection;
    DIENVELOPE* lpEnvelope;
    uint cbTypeSpecificParams;
    void* lpvTypeSpecificParams;
    uint dwStartDelay;
}
struct DIFILEEFFECT
{
    uint dwSize;
    GUID GuidEffect;
    DIEFFECT* lpDiEffect;
    CHAR[260] szFriendlyName;
}
alias LPDIENUMEFFECTSINFILECALLBACK = BOOL function(DIFILEEFFECT*, void*);
struct DIEFFESCAPE
{
    uint dwSize;
    uint dwCommand;
    void* lpvInBuffer;
    uint cbInBuffer;
    void* lpvOutBuffer;
    uint cbOutBuffer;
}
enum IID_IDirectInputEffect = GUID(0xe7e1f7c0, 0x88d2, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
interface IDirectInputEffect : IUnknown
{
    HRESULT Initialize(HINSTANCE, uint, const(GUID)*);
    HRESULT GetEffectGuid(GUID*);
    HRESULT GetParameters(DIEFFECT*, uint);
    HRESULT SetParameters(DIEFFECT*, uint);
    HRESULT Start(uint, uint);
    HRESULT Stop();
    HRESULT GetEffectStatus(uint*);
    HRESULT Download();
    HRESULT Unload();
    HRESULT Escape(DIEFFESCAPE*);
}
struct DIDEVCAPS_DX3
{
    uint dwSize;
    uint dwFlags;
    uint dwDevType;
    uint dwAxes;
    uint dwButtons;
    uint dwPOVs;
}
struct DIDEVCAPS
{
    uint dwSize;
    uint dwFlags;
    uint dwDevType;
    uint dwAxes;
    uint dwButtons;
    uint dwPOVs;
    uint dwFFSamplePeriod;
    uint dwFFMinTimeResolution;
    uint dwFirmwareRevision;
    uint dwHardwareRevision;
    uint dwFFDriverVersion;
}
struct DIOBJECTDATAFORMAT
{
    const(GUID)* pguid;
    uint dwOfs;
    uint dwType;
    uint dwFlags;
}
struct DIDATAFORMAT
{
    uint dwSize;
    uint dwObjSize;
    uint dwFlags;
    uint dwDataSize;
    uint dwNumObjs;
    DIOBJECTDATAFORMAT* rgodf;
}
struct DIACTIONA
{
    ulong uAppData;
    uint dwSemantic;
    uint dwFlags;
    union
    {
        const(char)* lptszActionName;
        uint uResIdString;
    }
    GUID guidInstance;
    uint dwObjID;
    uint dwHow;
}
struct DIACTIONW
{
    ulong uAppData;
    uint dwSemantic;
    uint dwFlags;
    union
    {
        const(wchar)* lptszActionName;
        uint uResIdString;
    }
    GUID guidInstance;
    uint dwObjID;
    uint dwHow;
}
struct DIACTIONFORMATA
{
    uint dwSize;
    uint dwActionSize;
    uint dwDataSize;
    uint dwNumActions;
    DIACTIONA* rgoAction;
    GUID guidActionMap;
    uint dwGenre;
    uint dwBufferSize;
    int lAxisMin;
    int lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    uint dwCRC;
    CHAR[260] tszActionMap;
}
struct DIACTIONFORMATW
{
    uint dwSize;
    uint dwActionSize;
    uint dwDataSize;
    uint dwNumActions;
    DIACTIONW* rgoAction;
    GUID guidActionMap;
    uint dwGenre;
    uint dwBufferSize;
    int lAxisMin;
    int lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    uint dwCRC;
    wchar[260] tszActionMap;
}
struct DICOLORSET
{
    uint dwSize;
    uint cTextFore;
    uint cTextHighlight;
    uint cCalloutLine;
    uint cCalloutHighlight;
    uint cBorder;
    uint cControlFill;
    uint cHighlightFill;
    uint cAreaFill;
}
struct DICONFIGUREDEVICESPARAMSA
{
    uint dwSize;
    uint dwcUsers;
    PSTR lptszUserNames;
    uint dwcFormats;
    DIACTIONFORMATA* lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    IUnknown lpUnkDDSTarget;
}
struct DICONFIGUREDEVICESPARAMSW
{
    uint dwSize;
    uint dwcUsers;
    PWSTR lptszUserNames;
    uint dwcFormats;
    DIACTIONFORMATW* lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    IUnknown lpUnkDDSTarget;
}
struct DIDEVICEIMAGEINFOA
{
    CHAR[260] tszImagePath;
    uint dwFlags;
    uint dwViewID;
    RECT rcOverlay;
    uint dwObjID;
    uint dwcValidPts;
    POINT[5] rgptCalloutLine;
    RECT rcCalloutRect;
    uint dwTextAlign;
}
struct DIDEVICEIMAGEINFOW
{
    wchar[260] tszImagePath;
    uint dwFlags;
    uint dwViewID;
    RECT rcOverlay;
    uint dwObjID;
    uint dwcValidPts;
    POINT[5] rgptCalloutLine;
    RECT rcCalloutRect;
    uint dwTextAlign;
}
struct DIDEVICEIMAGEINFOHEADERA
{
    uint dwSize;
    uint dwSizeImageInfo;
    uint dwcViews;
    uint dwcButtons;
    uint dwcAxes;
    uint dwcPOVs;
    uint dwBufferSize;
    uint dwBufferUsed;
    DIDEVICEIMAGEINFOA* lprgImageInfoArray;
}
struct DIDEVICEIMAGEINFOHEADERW
{
    uint dwSize;
    uint dwSizeImageInfo;
    uint dwcViews;
    uint dwcButtons;
    uint dwcAxes;
    uint dwcPOVs;
    uint dwBufferSize;
    uint dwBufferUsed;
    DIDEVICEIMAGEINFOW* lprgImageInfoArray;
}
struct DIDEVICEOBJECTINSTANCE_DX3A
{
    uint dwSize;
    GUID guidType;
    uint dwOfs;
    uint dwType;
    uint dwFlags;
    CHAR[260] tszName;
}
struct DIDEVICEOBJECTINSTANCE_DX3W
{
    uint dwSize;
    GUID guidType;
    uint dwOfs;
    uint dwType;
    uint dwFlags;
    wchar[260] tszName;
}
struct DIDEVICEOBJECTINSTANCEA
{
    uint dwSize;
    GUID guidType;
    uint dwOfs;
    uint dwType;
    uint dwFlags;
    CHAR[260] tszName;
    uint dwFFMaxForce;
    uint dwFFForceResolution;
    ushort wCollectionNumber;
    ushort wDesignatorIndex;
    ushort wUsagePage;
    ushort wUsage;
    uint dwDimension;
    ushort wExponent;
    ushort wReportId;
}
struct DIDEVICEOBJECTINSTANCEW
{
    uint dwSize;
    GUID guidType;
    uint dwOfs;
    uint dwType;
    uint dwFlags;
    wchar[260] tszName;
    uint dwFFMaxForce;
    uint dwFFForceResolution;
    ushort wCollectionNumber;
    ushort wDesignatorIndex;
    ushort wUsagePage;
    ushort wUsage;
    uint dwDimension;
    ushort wExponent;
    ushort wReportId;
}
alias LPDIENUMDEVICEOBJECTSCALLBACKA = BOOL function(DIDEVICEOBJECTINSTANCEA*, void*);
alias LPDIENUMDEVICEOBJECTSCALLBACKW = BOOL function(DIDEVICEOBJECTINSTANCEW*, void*);
struct DIPROPHEADER
{
    uint dwSize;
    uint dwHeaderSize;
    uint dwObj;
    uint dwHow;
}
struct DIPROPDWORD
{
    DIPROPHEADER diph;
    uint dwData;
}
struct DIPROPPOINTER
{
    DIPROPHEADER diph;
    ulong uData;
}
struct DIPROPRANGE
{
    DIPROPHEADER diph;
    int lMin;
    int lMax;
}
struct DIPROPCAL
{
    DIPROPHEADER diph;
    int lMin;
    int lCenter;
    int lMax;
}
struct DIPROPCALPOV
{
    DIPROPHEADER diph;
    int[5] lMin;
    int[5] lMax;
}
struct DIPROPGUIDANDPATH
{
    DIPROPHEADER diph;
    GUID guidClass;
    wchar[260] wszPath;
}
struct DIPROPSTRING
{
    DIPROPHEADER diph;
    wchar[260] wsz;
}
struct CPOINT
{
    int lP;
    uint dwLog;
}
struct DIPROPCPOINTS
{
    DIPROPHEADER diph;
    uint dwCPointsNum;
    CPOINT[8] cp;
}
struct DIDEVICEOBJECTDATA_DX3
{
    uint dwOfs;
    uint dwData;
    uint dwTimeStamp;
    uint dwSequence;
}
struct DIDEVICEOBJECTDATA
{
    uint dwOfs;
    uint dwData;
    uint dwTimeStamp;
    uint dwSequence;
    ulong uAppData;
}
struct DIDEVICEINSTANCE_DX3A
{
    uint dwSize;
    GUID guidInstance;
    GUID guidProduct;
    uint dwDevType;
    CHAR[260] tszInstanceName;
    CHAR[260] tszProductName;
}
struct DIDEVICEINSTANCE_DX3W
{
    uint dwSize;
    GUID guidInstance;
    GUID guidProduct;
    uint dwDevType;
    wchar[260] tszInstanceName;
    wchar[260] tszProductName;
}
struct DIDEVICEINSTANCEA
{
    uint dwSize;
    GUID guidInstance;
    GUID guidProduct;
    uint dwDevType;
    CHAR[260] tszInstanceName;
    CHAR[260] tszProductName;
    GUID guidFFDriver;
    ushort wUsagePage;
    ushort wUsage;
}
struct DIDEVICEINSTANCEW
{
    uint dwSize;
    GUID guidInstance;
    GUID guidProduct;
    uint dwDevType;
    wchar[260] tszInstanceName;
    wchar[260] tszProductName;
    GUID guidFFDriver;
    ushort wUsagePage;
    ushort wUsage;
}
enum IID_IDirectInputDeviceW = GUID(0x5944e681, 0xc92e, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputDeviceW : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS*);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKW, void*, uint);
    HRESULT GetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT SetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(uint, void*);
    HRESULT GetDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT SetDataFormat(DIDATAFORMAT*);
    HRESULT SetEventNotification(HANDLE);
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEW*, uint, uint);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEW*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint, const(GUID)*);
}
enum IID_IDirectInputDeviceA = GUID(0x5944e680, 0xc92e, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputDeviceA : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS*);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKA, void*, uint);
    HRESULT GetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT SetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(uint, void*);
    HRESULT GetDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT SetDataFormat(DIDATAFORMAT*);
    HRESULT SetEventNotification(HANDLE);
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEA*, uint, uint);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEA*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint, const(GUID)*);
}
struct DIEFFECTINFOA
{
    uint dwSize;
    GUID guid;
    uint dwEffType;
    uint dwStaticParams;
    uint dwDynamicParams;
    CHAR[260] tszName;
}
struct DIEFFECTINFOW
{
    uint dwSize;
    GUID guid;
    uint dwEffType;
    uint dwStaticParams;
    uint dwDynamicParams;
    wchar[260] tszName;
}
alias LPDIENUMEFFECTSCALLBACKA = BOOL function(DIEFFECTINFOA*, void*);
alias LPDIENUMEFFECTSCALLBACKW = BOOL function(DIEFFECTINFOW*, void*);
alias LPDIENUMCREATEDEFFECTOBJECTSCALLBACK = BOOL function(IDirectInputEffect, void*);
enum IID_IDirectInputDevice2W = GUID(0x5944e683, 0xc92e, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputDevice2W : IDirectInputDeviceW
{
    HRESULT CreateEffect(const(GUID)*, DIEFFECT*, IDirectInputEffect*, IUnknown);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKW, void*, uint);
    HRESULT GetEffectInfo(DIEFFECTINFOW*, const(GUID)*);
    HRESULT GetForceFeedbackState(uint*);
    HRESULT SendForceFeedbackCommand(uint);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, void*, uint);
    HRESULT Escape(DIEFFESCAPE*);
    HRESULT Poll();
    HRESULT SendDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
}
enum IID_IDirectInputDevice2A = GUID(0x5944e682, 0xc92e, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputDevice2A : IDirectInputDeviceA
{
    HRESULT CreateEffect(const(GUID)*, DIEFFECT*, IDirectInputEffect*, IUnknown);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKA, void*, uint);
    HRESULT GetEffectInfo(DIEFFECTINFOA*, const(GUID)*);
    HRESULT GetForceFeedbackState(uint*);
    HRESULT SendForceFeedbackCommand(uint);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, void*, uint);
    HRESULT Escape(DIEFFESCAPE*);
    HRESULT Poll();
    HRESULT SendDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
}
enum IID_IDirectInputDevice7W = GUID(0x57d7c6bd, 0x2356, 0x11d3, [0x8e, 0x9d, 0x0, 0xc0, 0x4f, 0x68, 0x44, 0xae]);
interface IDirectInputDevice7W : IDirectInputDevice2W
{
    HRESULT EnumEffectsInFile(const(wchar)*, LPDIENUMEFFECTSINFILECALLBACK, void*, uint);
    HRESULT WriteEffectToFile(const(wchar)*, uint, DIFILEEFFECT*, uint);
}
enum IID_IDirectInputDevice7A = GUID(0x57d7c6bc, 0x2356, 0x11d3, [0x8e, 0x9d, 0x0, 0xc0, 0x4f, 0x68, 0x44, 0xae]);
interface IDirectInputDevice7A : IDirectInputDevice2A
{
    HRESULT EnumEffectsInFile(const(char)*, LPDIENUMEFFECTSINFILECALLBACK, void*, uint);
    HRESULT WriteEffectToFile(const(char)*, uint, DIFILEEFFECT*, uint);
}
enum IID_IDirectInputDevice8W = GUID(0x54d41081, 0xdc15, 0x4833, [0xa4, 0x1b, 0x74, 0x8f, 0x73, 0xa3, 0x81, 0x79]);
interface IDirectInputDevice8W : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS*);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKW, void*, uint);
    HRESULT GetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT SetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(uint, void*);
    HRESULT GetDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT SetDataFormat(DIDATAFORMAT*);
    HRESULT SetEventNotification(HANDLE);
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEW*, uint, uint);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEW*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint, const(GUID)*);
    HRESULT CreateEffect(const(GUID)*, DIEFFECT*, IDirectInputEffect*, IUnknown);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKW, void*, uint);
    HRESULT GetEffectInfo(DIEFFECTINFOW*, const(GUID)*);
    HRESULT GetForceFeedbackState(uint*);
    HRESULT SendForceFeedbackCommand(uint);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, void*, uint);
    HRESULT Escape(DIEFFESCAPE*);
    HRESULT Poll();
    HRESULT SendDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT EnumEffectsInFile(const(wchar)*, LPDIENUMEFFECTSINFILECALLBACK, void*, uint);
    HRESULT WriteEffectToFile(const(wchar)*, uint, DIFILEEFFECT*, uint);
    HRESULT BuildActionMap(DIACTIONFORMATW*, const(wchar)*, uint);
    HRESULT SetActionMap(DIACTIONFORMATW*, const(wchar)*, uint);
    HRESULT GetImageInfo(DIDEVICEIMAGEINFOHEADERW*);
}
enum IID_IDirectInputDevice8A = GUID(0x54d41080, 0xdc15, 0x4833, [0xa4, 0x1b, 0x74, 0x8f, 0x73, 0xa3, 0x81, 0x79]);
interface IDirectInputDevice8A : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS*);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKA, void*, uint);
    HRESULT GetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT SetProperty(const(GUID)*, DIPROPHEADER*);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(uint, void*);
    HRESULT GetDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT SetDataFormat(DIDATAFORMAT*);
    HRESULT SetEventNotification(HANDLE);
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEA*, uint, uint);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEA*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint, const(GUID)*);
    HRESULT CreateEffect(const(GUID)*, DIEFFECT*, IDirectInputEffect*, IUnknown);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKA, void*, uint);
    HRESULT GetEffectInfo(DIEFFECTINFOA*, const(GUID)*);
    HRESULT GetForceFeedbackState(uint*);
    HRESULT SendForceFeedbackCommand(uint);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, void*, uint);
    HRESULT Escape(DIEFFESCAPE*);
    HRESULT Poll();
    HRESULT SendDeviceData(uint, DIDEVICEOBJECTDATA*, uint*, uint);
    HRESULT EnumEffectsInFile(const(char)*, LPDIENUMEFFECTSINFILECALLBACK, void*, uint);
    HRESULT WriteEffectToFile(const(char)*, uint, DIFILEEFFECT*, uint);
    HRESULT BuildActionMap(DIACTIONFORMATA*, const(char)*, uint);
    HRESULT SetActionMap(DIACTIONFORMATA*, const(char)*, uint);
    HRESULT GetImageInfo(DIDEVICEIMAGEINFOHEADERA*);
}
struct DIMOUSESTATE
{
    int lX;
    int lY;
    int lZ;
    ubyte[4] rgbButtons;
}
struct DIMOUSESTATE2
{
    int lX;
    int lY;
    int lZ;
    ubyte[8] rgbButtons;
}
struct DIJOYSTATE
{
    int lX;
    int lY;
    int lZ;
    int lRx;
    int lRy;
    int lRz;
    int[2] rglSlider;
    uint[4] rgdwPOV;
    ubyte[32] rgbButtons;
}
struct DIJOYSTATE2
{
    int lX;
    int lY;
    int lZ;
    int lRx;
    int lRy;
    int lRz;
    int[2] rglSlider;
    uint[4] rgdwPOV;
    ubyte[128] rgbButtons;
    int lVX;
    int lVY;
    int lVZ;
    int lVRx;
    int lVRy;
    int lVRz;
    int[2] rglVSlider;
    int lAX;
    int lAY;
    int lAZ;
    int lARx;
    int lARy;
    int lARz;
    int[2] rglASlider;
    int lFX;
    int lFY;
    int lFZ;
    int lFRx;
    int lFRy;
    int lFRz;
    int[2] rglFSlider;
}
alias LPDIENUMDEVICESCALLBACKA = BOOL function(DIDEVICEINSTANCEA*, void*);
alias LPDIENUMDEVICESCALLBACKW = BOOL function(DIDEVICEINSTANCEW*, void*);
alias LPDICONFIGUREDEVICESCALLBACK = BOOL function(IUnknown, void*);
alias LPDIENUMDEVICESBYSEMANTICSCBA = BOOL function(DIDEVICEINSTANCEA*, IDirectInputDevice8A, uint, uint, void*);
alias LPDIENUMDEVICESBYSEMANTICSCBW = BOOL function(DIDEVICEINSTANCEW*, IDirectInputDevice8W, uint, uint, void*);
enum IID_IDirectInputW = GUID(0x89521361, 0xaa8a, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputW : IUnknown
{
    HRESULT CreateDevice(const(GUID)*, IDirectInputDeviceW*, IUnknown);
    HRESULT EnumDevices(uint, LPDIENUMDEVICESCALLBACKW, void*, uint);
    HRESULT GetDeviceStatus(const(GUID)*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint);
}
enum IID_IDirectInputA = GUID(0x89521360, 0xaa8a, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputA : IUnknown
{
    HRESULT CreateDevice(const(GUID)*, IDirectInputDeviceA*, IUnknown);
    HRESULT EnumDevices(uint, LPDIENUMDEVICESCALLBACKA, void*, uint);
    HRESULT GetDeviceStatus(const(GUID)*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint);
}
enum IID_IDirectInput2W = GUID(0x5944e663, 0xaa8a, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInput2W : IDirectInputW
{
    HRESULT FindDevice(const(GUID)*, const(wchar)*, GUID*);
}
enum IID_IDirectInput2A = GUID(0x5944e662, 0xaa8a, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInput2A : IDirectInputA
{
    HRESULT FindDevice(const(GUID)*, const(char)*, GUID*);
}
enum IID_IDirectInput7W = GUID(0x9a4cb685, 0x236d, 0x11d3, [0x8e, 0x9d, 0x0, 0xc0, 0x4f, 0x68, 0x44, 0xae]);
interface IDirectInput7W : IDirectInput2W
{
    HRESULT CreateDeviceEx(const(GUID)*, const(GUID)*, void**, IUnknown);
}
enum IID_IDirectInput7A = GUID(0x9a4cb684, 0x236d, 0x11d3, [0x8e, 0x9d, 0x0, 0xc0, 0x4f, 0x68, 0x44, 0xae]);
interface IDirectInput7A : IDirectInput2A
{
    HRESULT CreateDeviceEx(const(GUID)*, const(GUID)*, void**, IUnknown);
}
enum IID_IDirectInput8W = GUID(0xbf798031, 0x483a, 0x4da2, [0xaa, 0x99, 0x5d, 0x64, 0xed, 0x36, 0x97, 0x0]);
interface IDirectInput8W : IUnknown
{
    HRESULT CreateDevice(const(GUID)*, IDirectInputDevice8W*, IUnknown);
    HRESULT EnumDevices(uint, LPDIENUMDEVICESCALLBACKW, void*, uint);
    HRESULT GetDeviceStatus(const(GUID)*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint);
    HRESULT FindDevice(const(GUID)*, const(wchar)*, GUID*);
    HRESULT EnumDevicesBySemantics(const(wchar)*, DIACTIONFORMATW*, LPDIENUMDEVICESBYSEMANTICSCBW, void*, uint);
    HRESULT ConfigureDevices(LPDICONFIGUREDEVICESCALLBACK, DICONFIGUREDEVICESPARAMSW*, uint, void*);
}
enum IID_IDirectInput8A = GUID(0xbf798030, 0x483a, 0x4da2, [0xaa, 0x99, 0x5d, 0x64, 0xed, 0x36, 0x97, 0x0]);
interface IDirectInput8A : IUnknown
{
    HRESULT CreateDevice(const(GUID)*, IDirectInputDevice8A*, IUnknown);
    HRESULT EnumDevices(uint, LPDIENUMDEVICESCALLBACKA, void*, uint);
    HRESULT GetDeviceStatus(const(GUID)*);
    HRESULT RunControlPanel(HWND, uint);
    HRESULT Initialize(HINSTANCE, uint);
    HRESULT FindDevice(const(GUID)*, const(char)*, GUID*);
    HRESULT EnumDevicesBySemantics(const(char)*, DIACTIONFORMATA*, LPDIENUMDEVICESBYSEMANTICSCBA, void*, uint);
    HRESULT ConfigureDevices(LPDICONFIGUREDEVICESCALLBACK, DICONFIGUREDEVICESPARAMSA*, uint, void*);
}
alias LPFNSHOWJOYCPL = void function(HWND);
struct DIOBJECTATTRIBUTES
{
    uint dwFlags;
    ushort wUsagePage;
    ushort wUsage;
}
struct DIFFOBJECTATTRIBUTES
{
    uint dwFFMaxForce;
    uint dwFFForceResolution;
}
struct DIOBJECTCALIBRATION
{
    int lMin;
    int lCenter;
    int lMax;
}
struct DIPOVCALIBRATION
{
    int[5] lMin;
    int[5] lMax;
}
struct DIEFFECTATTRIBUTES
{
    uint dwEffectId;
    uint dwEffType;
    uint dwStaticParams;
    uint dwDynamicParams;
    uint dwCoords;
}
struct DIFFDEVICEATTRIBUTES
{
    uint dwFlags;
    uint dwFFSamplePeriod;
    uint dwFFMinTimeResolution;
}
struct DIDRIVERVERSIONS
{
    uint dwSize;
    uint dwFirmwareRevision;
    uint dwHardwareRevision;
    uint dwFFDriverVersion;
}
struct DIDEVICESTATE
{
    uint dwSize;
    uint dwState;
    uint dwLoad;
}
struct DIHIDFFINITINFO
{
    uint dwSize;
    PWSTR pwszDeviceInterface;
    GUID GuidInstance;
}
enum IID_IDirectInputEffectDriver = GUID(0x2538130, 0x898f, 0x11d0, [0x9a, 0xd0, 0x0, 0xa0, 0xc9, 0xa0, 0x6e, 0x35]);
interface IDirectInputEffectDriver : IUnknown
{
    HRESULT DeviceID(uint, uint, uint, uint, void*);
    HRESULT GetVersions(DIDRIVERVERSIONS*);
    HRESULT Escape(uint, uint, DIEFFESCAPE*);
    HRESULT SetGain(uint, uint);
    HRESULT SendForceFeedbackCommand(uint, uint);
    HRESULT GetForceFeedbackState(uint, DIDEVICESTATE*);
    HRESULT DownloadEffect(uint, uint, uint*, DIEFFECT*, uint);
    HRESULT DestroyEffect(uint, uint);
    HRESULT StartEffect(uint, uint, uint, uint);
    HRESULT StopEffect(uint, uint);
    HRESULT GetEffectStatus(uint, uint, uint*);
}
struct JOYPOS
{
    uint dwX;
    uint dwY;
    uint dwZ;
    uint dwR;
    uint dwU;
    uint dwV;
}
struct JOYRANGE
{
    JOYPOS jpMin;
    JOYPOS jpMax;
    JOYPOS jpCenter;
}
struct JOYREGUSERVALUES
{
    uint dwTimeOut;
    JOYRANGE jrvRanges;
    JOYPOS jpDeadZone;
}
struct JOYREGHWSETTINGS
{
    uint dwFlags;
    uint dwNumButtons;
}
struct JOYREGHWVALUES
{
    JOYRANGE jrvHardware;
    uint[4] dwPOVValues;
    uint dwCalFlags;
}
struct JOYREGHWCONFIG
{
    JOYREGHWSETTINGS hws;
    uint dwUsageSettings;
    JOYREGHWVALUES hwv;
    uint dwType;
    uint dwReserved;
}
struct JOYCALIBRATE
{
    uint wXbase;
    uint wXdelta;
    uint wYbase;
    uint wYdelta;
    uint wZbase;
    uint wZdelta;
}
alias LPDIJOYTYPECALLBACK = BOOL function(const(wchar)*, void*);
struct DIJOYTYPEINFO_DX5
{
    uint dwSize;
    JOYREGHWSETTINGS hws;
    GUID clsidConfig;
    wchar[256] wszDisplayName;
    wchar[260] wszCallout;
}
struct DIJOYTYPEINFO_DX6
{
    uint dwSize;
    JOYREGHWSETTINGS hws;
    GUID clsidConfig;
    wchar[256] wszDisplayName;
    wchar[260] wszCallout;
    wchar[256] wszHardwareId;
    uint dwFlags1;
}
struct DIJOYTYPEINFO
{
    uint dwSize;
    JOYREGHWSETTINGS hws;
    GUID clsidConfig;
    wchar[256] wszDisplayName;
    wchar[260] wszCallout;
    wchar[256] wszHardwareId;
    uint dwFlags1;
    uint dwFlags2;
    wchar[256] wszMapFile;
}
struct DIJOYCONFIG_DX5
{
    uint dwSize;
    GUID guidInstance;
    JOYREGHWCONFIG hwc;
    uint dwGain;
    wchar[256] wszType;
    wchar[256] wszCallout;
}
struct DIJOYCONFIG
{
    uint dwSize;
    GUID guidInstance;
    JOYREGHWCONFIG hwc;
    uint dwGain;
    wchar[256] wszType;
    wchar[256] wszCallout;
    GUID guidGameport;
}
struct DIJOYUSERVALUES
{
    uint dwSize;
    JOYREGUSERVALUES ruv;
    wchar[256] wszGlobalDriver;
    wchar[256] wszGameportEmulator;
}
enum IID_IDirectInputJoyConfig = GUID(0x1de12ab1, 0xc9f5, 0x11cf, [0xbf, 0xc7, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0]);
interface IDirectInputJoyConfig : IUnknown
{
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT SendNotify();
    HRESULT EnumTypes(LPDIJOYTYPECALLBACK, void*);
    HRESULT GetTypeInfo(const(wchar)*, DIJOYTYPEINFO*, uint);
    HRESULT SetTypeInfo(const(wchar)*, DIJOYTYPEINFO*, uint);
    HRESULT DeleteType(const(wchar)*);
    HRESULT GetConfig(uint, DIJOYCONFIG*, uint);
    HRESULT SetConfig(uint, DIJOYCONFIG*, uint);
    HRESULT DeleteConfig(uint);
    HRESULT GetUserValues(DIJOYUSERVALUES*, uint);
    HRESULT SetUserValues(DIJOYUSERVALUES*, uint);
    HRESULT AddNewHardware(HWND, const(GUID)*);
    HRESULT OpenTypeKey(const(wchar)*, uint, HKEY*);
    HRESULT OpenConfigKey(uint, uint, HKEY*);
}
enum IID_IDirectInputJoyConfig8 = GUID(0xeb0d7dfa, 0x1990, 0x4f27, [0xb4, 0xd6, 0xed, 0xf2, 0xee, 0xc4, 0xa4, 0x4c]);
interface IDirectInputJoyConfig8 : IUnknown
{
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT SetCooperativeLevel(HWND, uint);
    HRESULT SendNotify();
    HRESULT EnumTypes(LPDIJOYTYPECALLBACK, void*);
    HRESULT GetTypeInfo(const(wchar)*, DIJOYTYPEINFO*, uint);
    HRESULT SetTypeInfo(const(wchar)*, DIJOYTYPEINFO*, uint, PWSTR);
    HRESULT DeleteType(const(wchar)*);
    HRESULT GetConfig(uint, DIJOYCONFIG*, uint);
    HRESULT SetConfig(uint, DIJOYCONFIG*, uint);
    HRESULT DeleteConfig(uint);
    HRESULT GetUserValues(DIJOYUSERVALUES*, uint);
    HRESULT SetUserValues(DIJOYUSERVALUES*, uint);
    HRESULT AddNewHardware(HWND, const(GUID)*);
    HRESULT OpenTypeKey(const(wchar)*, uint, HKEY*);
    HRESULT OpenAppStatusKey(HKEY*);
}
struct KEYBOARD_INPUT_DATA
{
    ushort UnitId;
    ushort MakeCode;
    ushort Flags;
    ushort Reserved;
    uint ExtraInformation;
}
struct KEYBOARD_TYPEMATIC_PARAMETERS
{
    ushort UnitId;
    ushort Rate;
    ushort Delay;
}
struct KEYBOARD_ID
{
    ubyte Type;
    ubyte Subtype;
}
struct KEYBOARD_ATTRIBUTES
{
    KEYBOARD_ID KeyboardIdentifier;
    ushort KeyboardMode;
    ushort NumberOfFunctionKeys;
    ushort NumberOfIndicators;
    ushort NumberOfKeysTotal;
    uint InputDataQueueLength;
    KEYBOARD_TYPEMATIC_PARAMETERS KeyRepeatMinimum;
    KEYBOARD_TYPEMATIC_PARAMETERS KeyRepeatMaximum;
}
struct KEYBOARD_EXTENDED_ATTRIBUTES
{
    ubyte Version;
    ubyte FormFactor;
    ubyte KeyType;
    ubyte PhysicalLayout;
    ubyte VendorSpecificPhysicalLayout;
    ubyte IETFLanguageTagIndex;
    ubyte ImplementedInputAssistControls;
}
struct KEYBOARD_INDICATOR_PARAMETERS
{
    ushort UnitId;
    ushort LedFlags;
}
struct INDICATOR_LIST
{
    ushort MakeCode;
    ushort IndicatorFlags;
}
struct KEYBOARD_INDICATOR_TRANSLATION
{
    ushort NumberOfIndicatorKeys;
    INDICATOR_LIST[1] IndicatorList;
}
struct KEYBOARD_UNIT_ID_PARAMETER
{
    ushort UnitId;
}
struct KEYBOARD_IME_STATUS
{
    ushort UnitId;
    uint ImeOpen;
    uint ImeConvMode;
}
struct MOUSE_INPUT_DATA
{
    ushort UnitId;
    ushort Flags;
    union
    {
        uint Buttons;
        struct
        {
            ushort ButtonFlags;
            ushort ButtonData;
        }
    }
    uint RawButtons;
    int LastX;
    int LastY;
    uint ExtraInformation;
}
struct MOUSE_ATTRIBUTES
{
    ushort MouseIdentifier;
    ushort NumberOfButtons;
    ushort SampleRate;
    uint InputDataQueueLength;
}
struct MOUSE_UNIT_ID_PARAMETER
{
    ushort UnitId;
}
alias HIDP_REPORT_TYPE = int;
enum : int
{
    HidP_Input   = 0x00000000,
    HidP_Output  = 0x00000001,
    HidP_Feature = 0x00000002,
}

struct USAGE_AND_PAGE
{
    ushort Usage;
    ushort UsagePage;
}
struct HIDP_BUTTON_CAPS
{
    ushort UsagePage;
    ubyte ReportID;
    BOOLEAN IsAlias;
    ushort BitField;
    ushort LinkCollection;
    ushort LinkUsage;
    ushort LinkUsagePage;
    BOOLEAN IsRange;
    BOOLEAN IsStringRange;
    BOOLEAN IsDesignatorRange;
    BOOLEAN IsAbsolute;
    ushort ReportCount;
    ushort Reserved2;
    uint[9] Reserved;
    union
    {
        struct Range
        {
            ushort UsageMin;
            ushort UsageMax;
            ushort StringMin;
            ushort StringMax;
            ushort DesignatorMin;
            ushort DesignatorMax;
            ushort DataIndexMin;
            ushort DataIndexMax;
        }
        struct NotRange
        {
            ushort Usage;
            ushort Reserved1;
            ushort StringIndex;
            ushort Reserved2;
            ushort DesignatorIndex;
            ushort Reserved3;
            ushort DataIndex;
            ushort Reserved4;
        }
    }
}
struct HIDP_VALUE_CAPS
{
    ushort UsagePage;
    ubyte ReportID;
    BOOLEAN IsAlias;
    ushort BitField;
    ushort LinkCollection;
    ushort LinkUsage;
    ushort LinkUsagePage;
    BOOLEAN IsRange;
    BOOLEAN IsStringRange;
    BOOLEAN IsDesignatorRange;
    BOOLEAN IsAbsolute;
    BOOLEAN HasNull;
    ubyte Reserved;
    ushort BitSize;
    ushort ReportCount;
    ushort[5] Reserved2;
    uint UnitsExp;
    uint Units;
    int LogicalMin;
    int LogicalMax;
    int PhysicalMin;
    int PhysicalMax;
    union
    {
        struct Range
        {
            ushort UsageMin;
            ushort UsageMax;
            ushort StringMin;
            ushort StringMax;
            ushort DesignatorMin;
            ushort DesignatorMax;
            ushort DataIndexMin;
            ushort DataIndexMax;
        }
        struct NotRange
        {
            ushort Usage;
            ushort Reserved1;
            ushort StringIndex;
            ushort Reserved2;
            ushort DesignatorIndex;
            ushort Reserved3;
            ushort DataIndex;
            ushort Reserved4;
        }
    }
}
struct HIDP_LINK_COLLECTION_NODE
{
    align (4):
    ushort LinkUsage;
    ushort LinkUsagePage;
    ushort Parent;
    ushort NumberOfChildren;
    ushort NextSibling;
    ushort FirstChild;
    uint _bitfield0;
    void* UserContext;
}
struct HIDP_CAPS
{
    ushort Usage;
    ushort UsagePage;
    ushort InputReportByteLength;
    ushort OutputReportByteLength;
    ushort FeatureReportByteLength;
    ushort[17] Reserved;
    ushort NumberLinkCollectionNodes;
    ushort NumberInputButtonCaps;
    ushort NumberInputValueCaps;
    ushort NumberInputDataIndices;
    ushort NumberOutputButtonCaps;
    ushort NumberOutputValueCaps;
    ushort NumberOutputDataIndices;
    ushort NumberFeatureButtonCaps;
    ushort NumberFeatureValueCaps;
    ushort NumberFeatureDataIndices;
}
struct HIDP_DATA
{
    ushort DataIndex;
    ushort Reserved;
    union
    {
        uint RawValue;
        BOOLEAN On;
    }
}
struct HIDP_UNKNOWN_TOKEN
{
    ubyte Token;
    ubyte[3] Reserved;
    uint BitField;
}
struct HIDP_EXTENDED_ATTRIBUTES
{
    align (4):
    ubyte NumGlobalUnknowns;
    ubyte[3] Reserved;
    HIDP_UNKNOWN_TOKEN* GlobalUnknowns;
    uint[1] Data;
}
struct HIDP_BUTTON_ARRAY_DATA
{
    ushort ArrayIndex;
    BOOLEAN On;
}
alias HIDP_KEYBOARD_DIRECTION = int;
enum : int
{
    HidP_Keyboard_Break = 0x00000000,
    HidP_Keyboard_Make  = 0x00000001,
}

struct HIDP_KEYBOARD_MODIFIER_STATE
{
    union
    {
        struct
        {
            uint _bitfield0;
        }
        uint ul;
    }
}
alias PHIDP_INSERT_SCANCODES = BOOLEAN function(void*, PSTR, uint);
alias PFN_HidP_GetVersionInternal = NTSTATUS function(uint*);
struct HIDD_CONFIGURATION
{
    align (4):
    void* cookie;
    uint size;
    uint RingBufferSize;
}
struct HIDD_ATTRIBUTES
{
    uint Size;
    ushort VendorID;
    ushort ProductID;
    ushort VersionNumber;
}
struct HID_XFER_PACKET
{
    ubyte* reportBuffer;
    uint reportBufferLen;
    ubyte reportId;
}
struct HID_COLLECTION_INFORMATION
{
    uint DescriptorSize;
    BOOLEAN Polled;
    ubyte[1] Reserved1;
    ushort VendorID;
    ushort ProductID;
    ushort VersionNumber;
}
struct HID_DRIVER_CONFIG
{
    uint Size;
    uint RingBufferSize;
}
alias GPIOBUTTONS_BUTTON_TYPE = int;
enum : int
{
    GPIO_BUTTON_POWER          = 0x00000000,
    GPIO_BUTTON_WINDOWS        = 0x00000001,
    GPIO_BUTTON_VOLUME_UP      = 0x00000002,
    GPIO_BUTTON_VOLUME_DOWN    = 0x00000003,
    GPIO_BUTTON_ROTATION_LOCK  = 0x00000004,
    GPIO_BUTTON_BACK           = 0x00000005,
    GPIO_BUTTON_SEARCH         = 0x00000006,
    GPIO_BUTTON_CAMERA_FOCUS   = 0x00000007,
    GPIO_BUTTON_CAMERA_SHUTTER = 0x00000008,
    GPIO_BUTTON_RINGER_TOGGLE  = 0x00000009,
    GPIO_BUTTON_HEADSET        = 0x0000000a,
    GPIO_BUTTON_HWKB_DEPLOY    = 0x0000000b,
    GPIO_BUTTON_CAMERA_LENS    = 0x0000000c,
    GPIO_BUTTON_OEM_CUSTOM     = 0x0000000d,
    GPIO_BUTTON_OEM_CUSTOM2    = 0x0000000e,
    GPIO_BUTTON_OEM_CUSTOM3    = 0x0000000f,
    GPIO_BUTTON_COUNT_MIN      = 0x00000005,
    GPIO_BUTTON_COUNT          = 0x00000010,
}

struct INPUT_BUTTON_ENABLE_INFO
{
    GPIOBUTTONS_BUTTON_TYPE ButtonType;
    BOOLEAN Enabled;
}
