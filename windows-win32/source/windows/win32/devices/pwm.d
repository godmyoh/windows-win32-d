module windows.win32.devices.pwm;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOLEAN;

version (Windows):
extern (Windows):

enum GUID_DEVINTERFACE_PWM_CONTROLLER = GUID(0x60824b4c, 0xeed1, 0x4c9c, [0xb4, 0x9c, 0x1b, 0x96, 0x14, 0x61, 0xa8, 0x19]);
enum GUID_DEVINTERFACE_PWM_CONTROLLER_WSZ = "{60824B4C-EED1-4C9C-B49C-1B961461A819}";
enum IOCTL_PWM_CONTROLLER_GET_INFO = 0x00040000;
enum IOCTL_PWM_CONTROLLER_GET_ACTUAL_PERIOD = 0x00040004;
enum IOCTL_PWM_CONTROLLER_SET_DESIRED_PERIOD = 0x00048008;
enum IOCTL_PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 0x00040190;
enum IOCTL_PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 0x00048194;
enum IOCTL_PWM_PIN_GET_POLARITY = 0x00040198;
enum IOCTL_PWM_PIN_SET_POLARITY = 0x0004819c;
enum IOCTL_PWM_PIN_START = 0x000481a3;
enum IOCTL_PWM_PIN_STOP = 0x000481a7;
enum IOCTL_PWM_PIN_IS_STARTED = 0x000401a8;
enum PWM_IOCTL_ID_CONTROLLER_GET_INFO = 0x00000000;
enum PWM_IOCTL_ID_CONTROLLER_GET_ACTUAL_PERIOD = 0x00000001;
enum PWM_IOCTL_ID_CONTROLLER_SET_DESIRED_PERIOD = 0x00000002;
enum PWM_IOCTL_ID_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 0x00000064;
enum PWM_IOCTL_ID_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 0x00000065;
enum PWM_IOCTL_ID_PIN_GET_POLARITY = 0x00000066;
enum PWM_IOCTL_ID_PIN_SET_POLARITY = 0x00000067;
enum PWM_IOCTL_ID_PIN_START = 0x00000068;
enum PWM_IOCTL_ID_PIN_STOP = 0x00000069;
enum PWM_IOCTL_ID_PIN_IS_STARTED = 0x0000006a;
struct PWM_CONTROLLER_INFO
{
    ulong Size;
    uint PinCount;
    ulong MinimumPeriod;
    ulong MaximumPeriod;
}
struct PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT
{
    ulong ActualPeriod;
}
struct PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT
{
    ulong DesiredPeriod;
}
struct PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT
{
    ulong ActualPeriod;
}
struct PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT
{
    ulong Percentage;
}
struct PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT
{
    ulong Percentage;
}
alias PWM_POLARITY = int;
enum : int
{
    PWM_ACTIVE_HIGH = 0x00000000,
    PWM_ACTIVE_LOW  = 0x00000001,
}

struct PWM_PIN_GET_POLARITY_OUTPUT
{
    PWM_POLARITY Polarity;
}
struct PWM_PIN_SET_POLARITY_INPUT
{
    PWM_POLARITY Polarity;
}
struct PWM_PIN_IS_STARTED_OUTPUT
{
    BOOLEAN IsStarted;
}
