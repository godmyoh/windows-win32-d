module windows.win32.devices.imageacquisition;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOL, BSTR, CHAR, FILETIME, HANDLE, HGLOBAL, HRESULT, HWND, PWSTR, RECT;
import windows.win32.graphics.gdi : HBITMAP;
import windows.win32.system.com : IStream, IUnknown, STGMEDIUM;
import windows.win32.system.com.structuredstorage : IEnumSTATPROPSTG, PROPSPEC, PROPVARIANT, STATPROPSETSTG;
import windows.win32.system.variant : VARENUM;
import windows.win32.ui.windowsandmessaging : HICON;

version (Windows):
extern (Windows):

enum WIA_DIP_DEV_ID = 0x00000002;
enum WIA_DIP_DEV_ID_STR = "Unique Device ID";
enum WIA_DIP_VEND_DESC = 0x00000003;
enum WIA_DIP_VEND_DESC_STR = "Manufacturer";
enum WIA_DIP_DEV_DESC = 0x00000004;
enum WIA_DIP_DEV_DESC_STR = "Description";
enum WIA_DIP_DEV_TYPE = 0x00000005;
enum WIA_DIP_DEV_TYPE_STR = "Type";
enum WIA_DIP_PORT_NAME = 0x00000006;
enum WIA_DIP_PORT_NAME_STR = "Port";
enum WIA_DIP_DEV_NAME = 0x00000007;
enum WIA_DIP_DEV_NAME_STR = "Name";
enum WIA_DIP_SERVER_NAME = 0x00000008;
enum WIA_DIP_SERVER_NAME_STR = "Server";
enum WIA_DIP_REMOTE_DEV_ID = 0x00000009;
enum WIA_DIP_REMOTE_DEV_ID_STR = "Remote Device ID";
enum WIA_DIP_UI_CLSID = 0x0000000a;
enum WIA_DIP_UI_CLSID_STR = "UI Class ID";
enum WIA_DIP_HW_CONFIG = 0x0000000b;
enum WIA_DIP_HW_CONFIG_STR = "Hardware Configuration";
enum WIA_DIP_BAUDRATE = 0x0000000c;
enum WIA_DIP_BAUDRATE_STR = "BaudRate";
enum WIA_DIP_STI_GEN_CAPABILITIES = 0x0000000d;
enum WIA_DIP_STI_GEN_CAPABILITIES_STR = "STI Generic Capabilities";
enum WIA_DIP_WIA_VERSION = 0x0000000e;
enum WIA_DIP_WIA_VERSION_STR = "WIA Version";
enum WIA_DIP_DRIVER_VERSION = 0x0000000f;
enum WIA_DIP_DRIVER_VERSION_STR = "Driver Version";
enum WIA_DIP_PNP_ID = 0x00000010;
enum WIA_DIP_PNP_ID_STR = "PnP ID String";
enum WIA_DIP_STI_DRIVER_VERSION = 0x00000011;
enum WIA_DIP_STI_DRIVER_VERSION_STR = "STI Driver Version";
enum WIA_DPA_FIRMWARE_VERSION = 0x00000402;
enum WIA_DPA_FIRMWARE_VERSION_STR = "Firmware Version";
enum WIA_DPA_CONNECT_STATUS = 0x00000403;
enum WIA_DPA_CONNECT_STATUS_STR = "Connect Status";
enum WIA_DPA_DEVICE_TIME = 0x00000404;
enum WIA_DPA_DEVICE_TIME_STR = "Device Time";
enum WIA_DPC_PICTURES_TAKEN = 0x00000802;
enum WIA_DPC_PICTURES_TAKEN_STR = "Pictures Taken";
enum WIA_DPC_PICTURES_REMAINING = 0x00000803;
enum WIA_DPC_PICTURES_REMAINING_STR = "Pictures Remaining";
enum WIA_DPC_EXPOSURE_MODE = 0x00000804;
enum WIA_DPC_EXPOSURE_MODE_STR = "Exposure Mode";
enum WIA_DPC_EXPOSURE_COMP = 0x00000805;
enum WIA_DPC_EXPOSURE_COMP_STR = "Exposure Compensation";
enum WIA_DPC_EXPOSURE_TIME = 0x00000806;
enum WIA_DPC_EXPOSURE_TIME_STR = "Exposure Time";
enum WIA_DPC_FNUMBER = 0x00000807;
enum WIA_DPC_FNUMBER_STR = "F Number";
enum WIA_DPC_FLASH_MODE = 0x00000808;
enum WIA_DPC_FLASH_MODE_STR = "Flash Mode";
enum WIA_DPC_FOCUS_MODE = 0x00000809;
enum WIA_DPC_FOCUS_MODE_STR = "Focus Mode";
enum WIA_DPC_FOCUS_MANUAL_DIST = 0x0000080a;
enum WIA_DPC_FOCUS_MANUAL_DIST_STR = "Focus Manual Dist";
enum WIA_DPC_ZOOM_POSITION = 0x0000080b;
enum WIA_DPC_ZOOM_POSITION_STR = "Zoom Position";
enum WIA_DPC_PAN_POSITION = 0x0000080c;
enum WIA_DPC_PAN_POSITION_STR = "Pan Position";
enum WIA_DPC_TILT_POSITION = 0x0000080d;
enum WIA_DPC_TILT_POSITION_STR = "Tilt Position";
enum WIA_DPC_TIMER_MODE = 0x0000080e;
enum WIA_DPC_TIMER_MODE_STR = "Timer Mode";
enum WIA_DPC_TIMER_VALUE = 0x0000080f;
enum WIA_DPC_TIMER_VALUE_STR = "Timer Value";
enum WIA_DPC_POWER_MODE = 0x00000810;
enum WIA_DPC_POWER_MODE_STR = "Power Mode";
enum WIA_DPC_BATTERY_STATUS = 0x00000811;
enum WIA_DPC_BATTERY_STATUS_STR = "Battery Status";
enum WIA_DPC_THUMB_WIDTH = 0x00000812;
enum WIA_DPC_THUMB_WIDTH_STR = "Thumbnail Width";
enum WIA_DPC_THUMB_HEIGHT = 0x00000813;
enum WIA_DPC_THUMB_HEIGHT_STR = "Thumbnail Height";
enum WIA_DPC_PICT_WIDTH = 0x00000814;
enum WIA_DPC_PICT_WIDTH_STR = "Picture Width";
enum WIA_DPC_PICT_HEIGHT = 0x00000815;
enum WIA_DPC_PICT_HEIGHT_STR = "Picture Height";
enum WIA_DPC_DIMENSION = 0x00000816;
enum WIA_DPC_DIMENSION_STR = "Dimension";
enum WIA_DPC_COMPRESSION_SETTING = 0x00000817;
enum WIA_DPC_COMPRESSION_SETTING_STR = "Compression Setting";
enum WIA_DPC_FOCUS_METERING = 0x00000818;
enum WIA_DPC_FOCUS_METERING_STR = "Focus Metering Mode";
enum WIA_DPC_TIMELAPSE_INTERVAL = 0x00000819;
enum WIA_DPC_TIMELAPSE_INTERVAL_STR = "Timelapse Interval";
enum WIA_DPC_TIMELAPSE_NUMBER = 0x0000081a;
enum WIA_DPC_TIMELAPSE_NUMBER_STR = "Timelapse Number";
enum WIA_DPC_BURST_INTERVAL = 0x0000081b;
enum WIA_DPC_BURST_INTERVAL_STR = "Burst Interval";
enum WIA_DPC_BURST_NUMBER = 0x0000081c;
enum WIA_DPC_BURST_NUMBER_STR = "Burst Number";
enum WIA_DPC_EFFECT_MODE = 0x0000081d;
enum WIA_DPC_EFFECT_MODE_STR = "Effect Mode";
enum WIA_DPC_DIGITAL_ZOOM = 0x0000081e;
enum WIA_DPC_DIGITAL_ZOOM_STR = "Digital Zoom";
enum WIA_DPC_SHARPNESS = 0x0000081f;
enum WIA_DPC_SHARPNESS_STR = "Sharpness";
enum WIA_DPC_CONTRAST = 0x00000820;
enum WIA_DPC_CONTRAST_STR = "Contrast";
enum WIA_DPC_CAPTURE_MODE = 0x00000821;
enum WIA_DPC_CAPTURE_MODE_STR = "Capture Mode";
enum WIA_DPC_CAPTURE_DELAY = 0x00000822;
enum WIA_DPC_CAPTURE_DELAY_STR = "Capture Delay";
enum WIA_DPC_EXPOSURE_INDEX = 0x00000823;
enum WIA_DPC_EXPOSURE_INDEX_STR = "Exposure Index";
enum WIA_DPC_EXPOSURE_METERING_MODE = 0x00000824;
enum WIA_DPC_EXPOSURE_METERING_MODE_STR = "Exposure Metering Mode";
enum WIA_DPC_FOCUS_METERING_MODE = 0x00000825;
enum WIA_DPC_FOCUS_METERING_MODE_STR = "Focus Metering Mode";
enum WIA_DPC_FOCUS_DISTANCE = 0x00000826;
enum WIA_DPC_FOCUS_DISTANCE_STR = "Focus Distance";
enum WIA_DPC_FOCAL_LENGTH = 0x00000827;
enum WIA_DPC_FOCAL_LENGTH_STR = "Focus Length";
enum WIA_DPC_RGB_GAIN = 0x00000828;
enum WIA_DPC_RGB_GAIN_STR = "RGB Gain";
enum WIA_DPC_WHITE_BALANCE = 0x00000829;
enum WIA_DPC_WHITE_BALANCE_STR = "White Balance";
enum WIA_DPC_UPLOAD_URL = 0x0000082a;
enum WIA_DPC_UPLOAD_URL_STR = "Upload URL";
enum WIA_DPC_ARTIST = 0x0000082b;
enum WIA_DPC_ARTIST_STR = "Artist";
enum WIA_DPC_COPYRIGHT_INFO = 0x0000082c;
enum WIA_DPC_COPYRIGHT_INFO_STR = "Copyright Info";
enum WIA_DPS_HORIZONTAL_BED_SIZE = 0x00000c02;
enum WIA_DPS_HORIZONTAL_BED_SIZE_STR = "Horizontal Bed Size";
enum WIA_DPS_VERTICAL_BED_SIZE = 0x00000c03;
enum WIA_DPS_VERTICAL_BED_SIZE_STR = "Vertical Bed Size";
enum WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE = 0x00000c04;
enum WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE_STR = "Horizontal Sheet Feed Size";
enum WIA_DPS_VERTICAL_SHEET_FEED_SIZE = 0x00000c05;
enum WIA_DPS_VERTICAL_SHEET_FEED_SIZE_STR = "Vertical Sheet Feed Size";
enum WIA_DPS_SHEET_FEEDER_REGISTRATION = 0x00000c06;
enum WIA_DPS_SHEET_FEEDER_REGISTRATION_STR = "Sheet Feeder Registration";
enum WIA_DPS_HORIZONTAL_BED_REGISTRATION = 0x00000c07;
enum WIA_DPS_HORIZONTAL_BED_REGISTRATION_STR = "Horizontal Bed Registration";
enum WIA_DPS_VERTICAL_BED_REGISTRATION = 0x00000c08;
enum WIA_DPS_VERTICAL_BED_REGISTRATION_STR = "Vertical Bed Registration";
enum WIA_DPS_PLATEN_COLOR = 0x00000c09;
enum WIA_DPS_PLATEN_COLOR_STR = "Platen Color";
enum WIA_DPS_PAD_COLOR = 0x00000c0a;
enum WIA_DPS_PAD_COLOR_STR = "Pad Color";
enum WIA_DPS_FILTER_SELECT = 0x00000c0b;
enum WIA_DPS_FILTER_SELECT_STR = "Filter Select";
enum WIA_DPS_DITHER_SELECT = 0x00000c0c;
enum WIA_DPS_DITHER_SELECT_STR = "Dither Select";
enum WIA_DPS_DITHER_PATTERN_DATA = 0x00000c0d;
enum WIA_DPS_DITHER_PATTERN_DATA_STR = "Dither Pattern Data";
enum WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES = 0x00000c0e;
enum WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES_STR = "Document Handling Capabilities";
enum WIA_DPS_DOCUMENT_HANDLING_STATUS = 0x00000c0f;
enum WIA_DPS_DOCUMENT_HANDLING_STATUS_STR = "Document Handling Status";
enum WIA_DPS_DOCUMENT_HANDLING_SELECT = 0x00000c10;
enum WIA_DPS_DOCUMENT_HANDLING_SELECT_STR = "Document Handling Select";
enum WIA_DPS_DOCUMENT_HANDLING_CAPACITY = 0x00000c11;
enum WIA_DPS_DOCUMENT_HANDLING_CAPACITY_STR = "Document Handling Capacity";
enum WIA_DPS_OPTICAL_XRES = 0x00000c12;
enum WIA_DPS_OPTICAL_XRES_STR = "Horizontal Optical Resolution";
enum WIA_DPS_OPTICAL_YRES = 0x00000c13;
enum WIA_DPS_OPTICAL_YRES_STR = "Vertical Optical Resolution";
enum WIA_DPS_ENDORSER_CHARACTERS = 0x00000c14;
enum WIA_DPS_ENDORSER_CHARACTERS_STR = "Endorser Characters";
enum WIA_DPS_ENDORSER_STRING = 0x00000c15;
enum WIA_DPS_ENDORSER_STRING_STR = "Endorser String";
enum WIA_DPS_SCAN_AHEAD_PAGES = 0x00000c16;
enum WIA_DPS_SCAN_AHEAD_PAGES_STR = "Scan Ahead Pages";
enum WIA_DPS_MAX_SCAN_TIME = 0x00000c17;
enum WIA_DPS_MAX_SCAN_TIME_STR = "Max Scan Time";
enum WIA_DPS_PAGES = 0x00000c18;
enum WIA_DPS_PAGES_STR = "Pages";
enum WIA_DPS_PAGE_SIZE = 0x00000c19;
enum WIA_DPS_PAGE_SIZE_STR = "Page Size";
enum WIA_DPS_PAGE_WIDTH = 0x00000c1a;
enum WIA_DPS_PAGE_WIDTH_STR = "Page Width";
enum WIA_DPS_PAGE_HEIGHT = 0x00000c1b;
enum WIA_DPS_PAGE_HEIGHT_STR = "Page Height";
enum WIA_DPS_PREVIEW = 0x00000c1c;
enum WIA_DPS_PREVIEW_STR = "Preview";
enum WIA_DPS_TRANSPARENCY = 0x00000c1d;
enum WIA_DPS_TRANSPARENCY_STR = "Transparency Adapter";
enum WIA_DPS_TRANSPARENCY_SELECT = 0x00000c1e;
enum WIA_DPS_TRANSPARENCY_SELECT_STR = "Transparency Adapter Select";
enum WIA_DPS_SHOW_PREVIEW_CONTROL = 0x00000c1f;
enum WIA_DPS_SHOW_PREVIEW_CONTROL_STR = "Show preview control";
enum WIA_DPS_MIN_HORIZONTAL_SHEET_FEED_SIZE = 0x00000c20;
enum WIA_DPS_MIN_HORIZONTAL_SHEET_FEED_SIZE_STR = "Minimum Horizontal Sheet Feed Size";
enum WIA_DPS_MIN_VERTICAL_SHEET_FEED_SIZE = 0x00000c21;
enum WIA_DPS_MIN_VERTICAL_SHEET_FEED_SIZE_STR = "Minimum Vertical Sheet Feed Size";
enum WIA_DPS_TRANSPARENCY_CAPABILITIES = 0x00000c22;
enum WIA_DPS_TRANSPARENCY_CAPABILITIES_STR = "Transparency Adapter Capabilities";
enum WIA_DPS_TRANSPARENCY_STATUS = 0x00000c23;
enum WIA_DPS_TRANSPARENCY_STATUS_STR = "Transparency Adapter Status";
enum WIA_DPF_MOUNT_POINT = 0x00000d02;
enum WIA_DPF_MOUNT_POINT_STR = "Directory mount point";
enum WIA_DPV_LAST_PICTURE_TAKEN = 0x00000e02;
enum WIA_DPV_LAST_PICTURE_TAKEN_STR = "Last Picture Taken";
enum WIA_DPV_IMAGES_DIRECTORY = 0x00000e03;
enum WIA_DPV_IMAGES_DIRECTORY_STR = "Images Directory";
enum WIA_DPV_DSHOW_DEVICE_PATH = 0x00000e04;
enum WIA_DPV_DSHOW_DEVICE_PATH_STR = "Directshow Device Path";
enum WIA_IPA_ITEM_NAME = 0x00001002;
enum WIA_IPA_ITEM_NAME_STR = "Item Name";
enum WIA_IPA_FULL_ITEM_NAME = 0x00001003;
enum WIA_IPA_FULL_ITEM_NAME_STR = "Full Item Name";
enum WIA_IPA_ITEM_TIME = 0x00001004;
enum WIA_IPA_ITEM_TIME_STR = "Item Time Stamp";
enum WIA_IPA_ITEM_FLAGS = 0x00001005;
enum WIA_IPA_ITEM_FLAGS_STR = "Item Flags";
enum WIA_IPA_ACCESS_RIGHTS = 0x00001006;
enum WIA_IPA_ACCESS_RIGHTS_STR = "Access Rights";
enum WIA_IPA_DATATYPE = 0x00001007;
enum WIA_IPA_DATATYPE_STR = "Data Type";
enum WIA_IPA_DEPTH = 0x00001008;
enum WIA_IPA_DEPTH_STR = "Bits Per Pixel";
enum WIA_IPA_PREFERRED_FORMAT = 0x00001009;
enum WIA_IPA_PREFERRED_FORMAT_STR = "Preferred Format";
enum WIA_IPA_FORMAT = 0x0000100a;
enum WIA_IPA_FORMAT_STR = "Format";
enum WIA_IPA_COMPRESSION = 0x0000100b;
enum WIA_IPA_COMPRESSION_STR = "Compression";
enum WIA_IPA_TYMED = 0x0000100c;
enum WIA_IPA_TYMED_STR = "Media Type";
enum WIA_IPA_CHANNELS_PER_PIXEL = 0x0000100d;
enum WIA_IPA_CHANNELS_PER_PIXEL_STR = "Channels Per Pixel";
enum WIA_IPA_BITS_PER_CHANNEL = 0x0000100e;
enum WIA_IPA_BITS_PER_CHANNEL_STR = "Bits Per Channel";
enum WIA_IPA_PLANAR = 0x0000100f;
enum WIA_IPA_PLANAR_STR = "Planar";
enum WIA_IPA_PIXELS_PER_LINE = 0x00001010;
enum WIA_IPA_PIXELS_PER_LINE_STR = "Pixels Per Line";
enum WIA_IPA_BYTES_PER_LINE = 0x00001011;
enum WIA_IPA_BYTES_PER_LINE_STR = "Bytes Per Line";
enum WIA_IPA_NUMBER_OF_LINES = 0x00001012;
enum WIA_IPA_NUMBER_OF_LINES_STR = "Number of Lines";
enum WIA_IPA_GAMMA_CURVES = 0x00001013;
enum WIA_IPA_GAMMA_CURVES_STR = "Gamma Curves";
enum WIA_IPA_ITEM_SIZE = 0x00001014;
enum WIA_IPA_ITEM_SIZE_STR = "Item Size";
enum WIA_IPA_COLOR_PROFILE = 0x00001015;
enum WIA_IPA_COLOR_PROFILE_STR = "Color Profiles";
enum WIA_IPA_MIN_BUFFER_SIZE = 0x00001016;
enum WIA_IPA_MIN_BUFFER_SIZE_STR = "Buffer Size";
enum WIA_IPA_BUFFER_SIZE = 0x00001016;
enum WIA_IPA_BUFFER_SIZE_STR = "Buffer Size";
enum WIA_IPA_REGION_TYPE = 0x00001017;
enum WIA_IPA_REGION_TYPE_STR = "Region Type";
enum WIA_IPA_ICM_PROFILE_NAME = 0x00001018;
enum WIA_IPA_ICM_PROFILE_NAME_STR = "Color Profile Name";
enum WIA_IPA_APP_COLOR_MAPPING = 0x00001019;
enum WIA_IPA_APP_COLOR_MAPPING_STR = "Application Applies Color Mapping";
enum WIA_IPA_PROP_STREAM_COMPAT_ID = 0x0000101a;
enum WIA_IPA_PROP_STREAM_COMPAT_ID_STR = "Stream Compatibility ID";
enum WIA_IPA_FILENAME_EXTENSION = 0x0000101b;
enum WIA_IPA_FILENAME_EXTENSION_STR = "Filename extension";
enum WIA_IPA_SUPPRESS_PROPERTY_PAGE = 0x0000101c;
enum WIA_IPA_SUPPRESS_PROPERTY_PAGE_STR = "Suppress a property page";
enum WIA_IPC_THUMBNAIL = 0x00001402;
enum WIA_IPC_THUMBNAIL_STR = "Thumbnail Data";
enum WIA_IPC_THUMB_WIDTH = 0x00001403;
enum WIA_IPC_THUMB_WIDTH_STR = "Thumbnail Width";
enum WIA_IPC_THUMB_HEIGHT = 0x00001404;
enum WIA_IPC_THUMB_HEIGHT_STR = "Thumbnail Height";
enum WIA_IPC_AUDIO_AVAILABLE = 0x00001405;
enum WIA_IPC_AUDIO_AVAILABLE_STR = "Audio Available";
enum WIA_IPC_AUDIO_DATA_FORMAT = 0x00001406;
enum WIA_IPC_AUDIO_DATA_FORMAT_STR = "Audio Format";
enum WIA_IPC_AUDIO_DATA = 0x00001407;
enum WIA_IPC_AUDIO_DATA_STR = "Audio Data";
enum WIA_IPC_NUM_PICT_PER_ROW = 0x00001408;
enum WIA_IPC_NUM_PICT_PER_ROW_STR = "Pictures per Row";
enum WIA_IPC_SEQUENCE = 0x00001409;
enum WIA_IPC_SEQUENCE_STR = "Sequence Number";
enum WIA_IPC_TIMEDELAY = 0x0000140a;
enum WIA_IPC_TIMEDELAY_STR = "Time Delay";
enum WIA_IPS_CUR_INTENT = 0x00001802;
enum WIA_IPS_CUR_INTENT_STR = "Current Intent";
enum WIA_IPS_XRES = 0x00001803;
enum WIA_IPS_XRES_STR = "Horizontal Resolution";
enum WIA_IPS_YRES = 0x00001804;
enum WIA_IPS_YRES_STR = "Vertical Resolution";
enum WIA_IPS_XPOS = 0x00001805;
enum WIA_IPS_XPOS_STR = "Horizontal Start Position";
enum WIA_IPS_YPOS = 0x00001806;
enum WIA_IPS_YPOS_STR = "Vertical Start Position";
enum WIA_IPS_XEXTENT = 0x00001807;
enum WIA_IPS_XEXTENT_STR = "Horizontal Extent";
enum WIA_IPS_YEXTENT = 0x00001808;
enum WIA_IPS_YEXTENT_STR = "Vertical Extent";
enum WIA_IPS_PHOTOMETRIC_INTERP = 0x00001809;
enum WIA_IPS_PHOTOMETRIC_INTERP_STR = "Photometric Interpretation";
enum WIA_IPS_BRIGHTNESS = 0x0000180a;
enum WIA_IPS_BRIGHTNESS_STR = "Brightness";
enum WIA_IPS_CONTRAST = 0x0000180b;
enum WIA_IPS_CONTRAST_STR = "Contrast";
enum WIA_IPS_ORIENTATION = 0x0000180c;
enum WIA_IPS_ORIENTATION_STR = "Orientation";
enum WIA_IPS_ROTATION = 0x0000180d;
enum WIA_IPS_ROTATION_STR = "Rotation";
enum WIA_IPS_MIRROR = 0x0000180e;
enum WIA_IPS_MIRROR_STR = "Mirror";
enum WIA_IPS_THRESHOLD = 0x0000180f;
enum WIA_IPS_THRESHOLD_STR = "Threshold";
enum WIA_IPS_INVERT = 0x00001810;
enum WIA_IPS_INVERT_STR = "Invert";
enum WIA_IPS_WARM_UP_TIME = 0x00001811;
enum WIA_IPS_WARM_UP_TIME_STR = "Lamp Warm up Time";
enum WIA_DPS_USER_NAME = 0x00000c28;
enum WIA_DPS_USER_NAME_STR = "User Name";
enum WIA_DPS_SERVICE_ID = 0x00000c29;
enum WIA_DPS_SERVICE_ID_STR = "Service ID";
enum WIA_DPS_DEVICE_ID = 0x00000c2a;
enum WIA_DPS_DEVICE_ID_STR = "Device ID";
enum WIA_DPS_GLOBAL_IDENTITY = 0x00000c2b;
enum WIA_DPS_GLOBAL_IDENTITY_STR = "Global Identity";
enum WIA_DPS_SCAN_AVAILABLE_ITEM = 0x00000c2c;
enum WIA_DPS_SCAN_AVAILABLE_ITEM_STR = "Scan Available Item";
enum WIA_IPS_DESKEW_X = 0x00001812;
enum WIA_IPS_DESKEW_X_STR = "DeskewX";
enum WIA_IPS_DESKEW_Y = 0x00001813;
enum WIA_IPS_DESKEW_Y_STR = "DeskewY";
enum WIA_IPS_SEGMENTATION = 0x00001814;
enum WIA_IPS_SEGMENTATION_STR = "Segmentation";
enum WIA_SEGMENTATION_FILTER_STR = "SegmentationFilter";
enum WIA_IMAGEPROC_FILTER_STR = "ImageProcessingFilter";
enum WIA_IPS_MAX_HORIZONTAL_SIZE = 0x00001815;
enum WIA_IPS_MAX_HORIZONTAL_SIZE_STR = "Maximum Horizontal Scan Size";
enum WIA_IPS_MAX_VERTICAL_SIZE = 0x00001816;
enum WIA_IPS_MAX_VERTICAL_SIZE_STR = "Maximum Vertical Scan Size";
enum WIA_IPS_MIN_HORIZONTAL_SIZE = 0x00001817;
enum WIA_IPS_MIN_HORIZONTAL_SIZE_STR = "Minimum Horizontal Scan Size";
enum WIA_IPS_MIN_VERTICAL_SIZE = 0x00001818;
enum WIA_IPS_MIN_VERTICAL_SIZE_STR = "Minimum Vertical Scan Size";
enum WIA_IPS_TRANSFER_CAPABILITIES = 0x00001819;
enum WIA_IPS_TRANSFER_CAPABILITIES_STR = "Transfer Capabilities";
enum WIA_IPS_SHEET_FEEDER_REGISTRATION = 0x00000c06;
enum WIA_IPS_SHEET_FEEDER_REGISTRATION_STR = "Sheet Feeder Registration";
enum WIA_IPS_DOCUMENT_HANDLING_SELECT = 0x00000c10;
enum WIA_IPS_DOCUMENT_HANDLING_SELECT_STR = "Document Handling Select";
enum WIA_IPS_OPTICAL_XRES = 0x00000c12;
enum WIA_IPS_OPTICAL_XRES_STR = "Horizontal Optical Resolution";
enum WIA_IPS_OPTICAL_YRES = 0x00000c13;
enum WIA_IPS_OPTICAL_YRES_STR = "Vertical Optical Resolution";
enum WIA_IPS_PAGES = 0x00000c18;
enum WIA_IPS_PAGES_STR = "Pages";
enum WIA_IPS_PAGE_SIZE = 0x00000c19;
enum WIA_IPS_PAGE_SIZE_STR = "Page Size";
enum WIA_IPS_PAGE_WIDTH = 0x00000c1a;
enum WIA_IPS_PAGE_WIDTH_STR = "Page Width";
enum WIA_IPS_PAGE_HEIGHT = 0x00000c1b;
enum WIA_IPS_PAGE_HEIGHT_STR = "Page Height";
enum WIA_IPS_PREVIEW = 0x00000c1c;
enum WIA_IPS_PREVIEW_STR = "Preview";
enum WIA_IPS_SHOW_PREVIEW_CONTROL = 0x00000c1f;
enum WIA_IPS_SHOW_PREVIEW_CONTROL_STR = "Show preview control";
enum WIA_IPS_FILM_SCAN_MODE = 0x00000c20;
enum WIA_IPS_FILM_SCAN_MODE_STR = "Film Scan Mode";
enum WIA_IPS_LAMP = 0x00000c21;
enum WIA_IPS_LAMP_STR = "Lamp";
enum WIA_IPS_LAMP_AUTO_OFF = 0x00000c22;
enum WIA_IPS_LAMP_AUTO_OFF_STR = "Lamp Auto Off";
enum WIA_IPS_AUTO_DESKEW = 0x00000c23;
enum WIA_IPS_AUTO_DESKEW_STR = "Automatic Deskew";
enum WIA_IPS_SUPPORTS_CHILD_ITEM_CREATION = 0x00000c24;
enum WIA_IPS_SUPPORTS_CHILD_ITEM_CREATION_STR = "Supports Child Item Creation";
enum WIA_IPS_XSCALING = 0x00000c25;
enum WIA_IPS_XSCALING_STR = "Horizontal Scaling";
enum WIA_IPS_YSCALING = 0x00000c26;
enum WIA_IPS_YSCALING_STR = "Vertical Scaling";
enum WIA_IPS_PREVIEW_TYPE = 0x00000c27;
enum WIA_IPS_PREVIEW_TYPE_STR = "Preview Type";
enum WIA_IPA_ITEM_CATEGORY = 0x0000101d;
enum WIA_IPA_ITEM_CATEGORY_STR = "Item Category";
enum WIA_IPA_UPLOAD_ITEM_SIZE = 0x0000101e;
enum WIA_IPA_UPLOAD_ITEM_SIZE_STR = "Upload Item Size";
enum WIA_IPA_ITEMS_STORED = 0x0000101f;
enum WIA_IPA_ITEMS_STORED_STR = "Items Stored";
enum WIA_IPA_RAW_BITS_PER_CHANNEL = 0x00001020;
enum WIA_IPA_RAW_BITS_PER_CHANNEL_STR = "Raw Bits Per Channel";
enum WIA_IPS_FILM_NODE_NAME = 0x00001021;
enum WIA_IPS_FILM_NODE_NAME_STR = "Film Node Name";
enum WIA_IPS_PRINTER_ENDORSER = 0x00001022;
enum WIA_IPS_PRINTER_ENDORSER_STR = "Printer/Endorser";
enum WIA_IPS_PRINTER_ENDORSER_ORDER = 0x00001023;
enum WIA_IPS_PRINTER_ENDORSER_ORDER_STR = "Printer/Endorser Order";
enum WIA_IPS_PRINTER_ENDORSER_COUNTER = 0x00001024;
enum WIA_IPS_PRINTER_ENDORSER_COUNTER_STR = "Printer/Endorser Counter";
enum WIA_IPS_PRINTER_ENDORSER_STEP = 0x00001025;
enum WIA_IPS_PRINTER_ENDORSER_STEP_STR = "Printer/Endorser Step";
enum WIA_IPS_PRINTER_ENDORSER_XOFFSET = 0x00001026;
enum WIA_IPS_PRINTER_ENDORSER_XOFFSET_STR = "Printer/Endorser Horizontal Offset";
enum WIA_IPS_PRINTER_ENDORSER_YOFFSET = 0x00001027;
enum WIA_IPS_PRINTER_ENDORSER_YOFFSET_STR = "Printer/Endorser Vertical Offset";
enum WIA_IPS_PRINTER_ENDORSER_NUM_LINES = 0x00001028;
enum WIA_IPS_PRINTER_ENDORSER_NUM_LINES_STR = "Printer/Endorser Lines";
enum WIA_IPS_PRINTER_ENDORSER_STRING = 0x00001029;
enum WIA_IPS_PRINTER_ENDORSER_STRING_STR = "Printer/Endorser String";
enum WIA_IPS_PRINTER_ENDORSER_VALID_CHARACTERS = 0x0000102a;
enum WIA_IPS_PRINTER_ENDORSER_VALID_CHARACTERS_STR = "Printer/Endorser Valid Characters";
enum WIA_IPS_PRINTER_ENDORSER_VALID_FORMAT_SPECIFIERS = 0x0000102b;
enum WIA_IPS_PRINTER_ENDORSER_VALID_FORMAT_SPECIFIERS_STR = "Printer/Endorser Valid Format Specifiers";
enum WIA_IPS_PRINTER_ENDORSER_TEXT_UPLOAD = 0x0000102c;
enum WIA_IPS_PRINTER_ENDORSER_TEXT_UPLOAD_STR = "Printer/Endorser Text Upload";
enum WIA_IPS_PRINTER_ENDORSER_TEXT_DOWNLOAD = 0x0000102d;
enum WIA_IPS_PRINTER_ENDORSER_TEXT_DOWNLOAD_STR = "Printer/Endorser Text Download";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS = 0x0000102e;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_STR = "Printer/Endorser Graphics";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_POSITION = 0x0000102f;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_POSITION_STR = "Printer/Endorser Graphics Position";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_WIDTH = 0x00001030;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_WIDTH_STR = "Printer/Endorser Graphics Minimum Width";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_WIDTH = 0x00001031;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_WIDTH_STR = "Printer/Endorser Graphics Maximum Width";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_HEIGHT = 0x00001032;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_HEIGHT_STR = "Printer/Endorser Graphics Minimum Height";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_HEIGHT = 0x00001033;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_HEIGHT_STR = "Printer/Endorser Graphics Maximum Height";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_UPLOAD = 0x00001034;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_UPLOAD_STR = "Printer/Endorser Graphics Upload";
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_DOWNLOAD = 0x00001035;
enum WIA_IPS_PRINTER_ENDORSER_GRAPHICS_DOWNLOAD_STR = "Printer/Endorser Graphics Download";
enum WIA_IPS_BARCODE_READER = 0x00001036;
enum WIA_IPS_BARCODE_READER_STR = "Barcode Reader";
enum WIA_IPS_MAXIMUM_BARCODES_PER_PAGE = 0x00001037;
enum WIA_IPS_MAXIMUM_BARCODES_PER_PAGE_STR = "Maximum Barcodes Per Page";
enum WIA_IPS_BARCODE_SEARCH_DIRECTION = 0x00001038;
enum WIA_IPS_BARCODE_SEARCH_DIRECTION_STR = "Barcode Search Direction";
enum WIA_IPS_MAXIMUM_BARCODE_SEARCH_RETRIES = 0x00001039;
enum WIA_IPS_MAXIMUM_BARCODE_SEARCH_RETRIES_STR = "Barcode Search Retries";
enum WIA_IPS_BARCODE_SEARCH_TIMEOUT = 0x0000103a;
enum WIA_IPS_BARCODE_SEARCH_TIMEOUT_STR = "Barcode Search Timeout";
enum WIA_IPS_SUPPORTED_BARCODE_TYPES = 0x0000103b;
enum WIA_IPS_SUPPORTED_BARCODE_TYPES_STR = "Supported Barcode Types";
enum WIA_IPS_ENABLED_BARCODE_TYPES = 0x0000103c;
enum WIA_IPS_ENABLED_BARCODE_TYPES_STR = "Enabled Barcode Types";
enum WIA_IPS_PATCH_CODE_READER = 0x0000103d;
enum WIA_IPS_PATCH_CODE_READER_STR = "Patch Code Reader";
enum WIA_IPS_SUPPORTED_PATCH_CODE_TYPES = 0x00001042;
enum WIA_IPS_SUPPORTED_PATCH_CODE_TYPES_STR = "Supported Patch Code Types";
enum WIA_IPS_ENABLED_PATCH_CODE_TYPES = 0x00001043;
enum WIA_IPS_ENABLED_PATCH_CODE_TYPES_STR = "Enabled Path Code Types";
enum WIA_IPS_MICR_READER = 0x00001044;
enum WIA_IPS_MICR_READER_STR = "MICR Reader";
enum WIA_IPS_JOB_SEPARATORS = 0x00001045;
enum WIA_IPS_JOB_SEPARATORS_STR = "Job Separators";
enum WIA_IPS_LONG_DOCUMENT = 0x00001046;
enum WIA_IPS_LONG_DOCUMENT_STR = "Long Document";
enum WIA_IPS_BLANK_PAGES = 0x00001047;
enum WIA_IPS_BLANK_PAGES_STR = "Blank Pages";
enum WIA_IPS_MULTI_FEED = 0x00001048;
enum WIA_IPS_MULTI_FEED_STR = "Multi-Feed";
enum WIA_IPS_MULTI_FEED_SENSITIVITY = 0x00001049;
enum WIA_IPS_MULTI_FEED_SENSITIVITY_STR = "Multi-Feed Sensitivity";
enum WIA_IPS_AUTO_CROP = 0x0000104a;
enum WIA_IPS_AUTO_CROP_STR = "Auto-Crop";
enum WIA_IPS_OVER_SCAN = 0x0000104b;
enum WIA_IPS_OVER_SCAN_STR = "Overscan";
enum WIA_IPS_OVER_SCAN_LEFT = 0x0000104c;
enum WIA_IPS_OVER_SCAN_LEFT_STR = "Overscan Left";
enum WIA_IPS_OVER_SCAN_RIGHT = 0x0000104d;
enum WIA_IPS_OVER_SCAN_RIGHT_STR = "Overscan Right";
enum WIA_IPS_OVER_SCAN_TOP = 0x0000104e;
enum WIA_IPS_OVER_SCAN_TOP_STR = "Overscan Top";
enum WIA_IPS_OVER_SCAN_BOTTOM = 0x0000104f;
enum WIA_IPS_OVER_SCAN_BOTTOM_STR = "Overscan Bottom";
enum WIA_IPS_COLOR_DROP = 0x00001050;
enum WIA_IPS_COLOR_DROP_STR = "Color Drop";
enum WIA_IPS_COLOR_DROP_RED = 0x00001051;
enum WIA_IPS_COLOR_DROP_RED_STR = "Color Drop Red";
enum WIA_IPS_COLOR_DROP_GREEN = 0x00001052;
enum WIA_IPS_COLOR_DROP_GREEN_STR = "Color Drop Green";
enum WIA_IPS_COLOR_DROP_BLUE = 0x00001053;
enum WIA_IPS_COLOR_DROP_BLUE_STR = "Color Drop Blue";
enum WIA_IPS_SCAN_AHEAD = 0x00001054;
enum WIA_IPS_SCAN_AHEAD_STR = "Scan Ahead";
enum WIA_IPS_SCAN_AHEAD_CAPACITY = 0x00001055;
enum WIA_IPS_SCAN_AHEAD_CAPACITY_STR = "Scan Ahead Capacity";
enum WIA_IPS_FEEDER_CONTROL = 0x00001056;
enum WIA_IPS_FEEDER_CONTROL_STR = "Feeder Control";
enum WIA_IPS_PRINTER_ENDORSER_PADDING = 0x00001057;
enum WIA_IPS_PRINTER_ENDORSER_PADDING_STR = "Printer/Endorser Padding";
enum WIA_IPS_PRINTER_ENDORSER_FONT_TYPE = 0x00001058;
enum WIA_IPS_PRINTER_ENDORSER_FONT_TYPE_STR = "Printer/Endorser Font Type";
enum WIA_IPS_ALARM = 0x00001059;
enum WIA_IPS_ALARM_STR = "Alarm";
enum WIA_IPS_PRINTER_ENDORSER_INK = 0x0000105a;
enum WIA_IPS_PRINTER_ENDORSER_INK_STR = "Printer/Endorser Ink";
enum WIA_IPS_PRINTER_ENDORSER_CHARACTER_ROTATION = 0x0000105b;
enum WIA_IPS_PRINTER_ENDORSER_CHARACTER_ROTATION_STR = "Printer/Endorser Character Rotation";
enum WIA_IPS_PRINTER_ENDORSER_MAX_CHARACTERS = 0x0000105c;
enum WIA_IPS_PRINTER_ENDORSER_MAX_CHARACTERS_STR = "Printer/Endorser Maximum Characters";
enum WIA_IPS_PRINTER_ENDORSER_MAX_GRAPHICS = 0x0000105d;
enum WIA_IPS_PRINTER_ENDORSER_MAX_GRAPHICS_STR = "Printer/Endorser Maximum Graphics";
enum WIA_IPS_PRINTER_ENDORSER_COUNTER_DIGITS = 0x0000105e;
enum WIA_IPS_PRINTER_ENDORSER_COUNTER_DIGITS_STR = "Printer/Endorser Counter Digits";
enum WIA_IPS_COLOR_DROP_MULTI = 0x0000105f;
enum WIA_IPS_COLOR_DROP_MULTI_STR = "Color Drop Multiple";
enum WIA_IPS_BLANK_PAGES_SENSITIVITY = 0x00001060;
enum WIA_IPS_BLANK_PAGES_SENSITIVITY_STR = "Blank Pages Sensitivity";
enum WIA_IPS_MULTI_FEED_DETECT_METHOD = 0x00001061;
enum WIA_IPS_MULTI_FEED_DETECT_METHOD_STR = "Multi-Feed Detection Method";
enum WIA_CATEGORY_FINISHED_FILE = GUID(0xff2b77ca, 0xcf84, 0x432b, [0xa7, 0x35, 0x3a, 0x13, 0xd, 0xde, 0x2a, 0x88]);
enum WIA_CATEGORY_FLATBED = GUID(0xfb607b1f, 0x43f3, 0x488b, [0x85, 0x5b, 0xfb, 0x70, 0x3e, 0xc3, 0x42, 0xa6]);
enum WIA_CATEGORY_FEEDER = GUID(0xfe131934, 0xf84c, 0x42ad, [0x8d, 0xa4, 0x61, 0x29, 0xcd, 0xdd, 0x72, 0x88]);
enum WIA_CATEGORY_FILM = GUID(0xfcf65be7, 0x3ce3, 0x4473, [0xaf, 0x85, 0xf5, 0xd3, 0x7d, 0x21, 0xb6, 0x8a]);
enum WIA_CATEGORY_ROOT = GUID(0xf193526f, 0x59b8, 0x4a26, [0x98, 0x88, 0xe1, 0x6e, 0x4f, 0x97, 0xce, 0x10]);
enum WIA_CATEGORY_FOLDER = GUID(0xc692a446, 0x6f5a, 0x481d, [0x85, 0xbb, 0x92, 0xe2, 0xe8, 0x6f, 0xd3, 0xa]);
enum WIA_CATEGORY_FEEDER_FRONT = GUID(0x4823175c, 0x3b28, 0x487b, [0xa7, 0xe6, 0xee, 0xbc, 0x17, 0x61, 0x4f, 0xd1]);
enum WIA_CATEGORY_FEEDER_BACK = GUID(0x61ca74d4, 0x39db, 0x42aa, [0x89, 0xb1, 0x8c, 0x19, 0xc9, 0xcd, 0x4c, 0x23]);
enum WIA_CATEGORY_AUTO = GUID(0xdefe5fd8, 0x6c97, 0x4dde, [0xb1, 0x1e, 0xcb, 0x50, 0x9b, 0x27, 0xe, 0x11]);
enum WIA_CATEGORY_IMPRINTER = GUID(0xfc65016d, 0x9202, 0x43dd, [0x91, 0xa7, 0x64, 0xc2, 0x95, 0x4c, 0xfb, 0x8b]);
enum WIA_CATEGORY_ENDORSER = GUID(0x47102cc3, 0x127f, 0x4771, [0xad, 0xfc, 0x99, 0x1a, 0xb8, 0xee, 0x1e, 0x97]);
enum WIA_CATEGORY_BARCODE_READER = GUID(0x36e178a0, 0x473f, 0x494b, [0xaf, 0x8f, 0x6c, 0x3f, 0x6d, 0x74, 0x86, 0xfc]);
enum WIA_CATEGORY_PATCH_CODE_READER = GUID(0x8faa1a6d, 0x9c8a, 0x42cd, [0x98, 0xb3, 0xee, 0x97, 0x0, 0xcb, 0xc7, 0x4f]);
enum WIA_CATEGORY_MICR_READER = GUID(0x3b86c1ec, 0x71bc, 0x4645, [0xb4, 0xd5, 0x1b, 0x19, 0xda, 0x2b, 0xe9, 0x78]);
enum CLSID_WiaDefaultSegFilter = GUID(0xd4f4d30b, 0xb29, 0x4508, [0x89, 0x22, 0xc, 0x57, 0x97, 0xd4, 0x27, 0x65]);
enum WIA_TRANSFER_CHILDREN_SINGLE_SCAN = 0x00000001;
enum WIA_USE_SEGMENTATION_FILTER = 0x00000000;
enum WIA_DONT_USE_SEGMENTATION_FILTER = 0x00000001;
enum WIA_FILM_COLOR_SLIDE = 0x00000000;
enum WIA_FILM_COLOR_NEGATIVE = 0x00000001;
enum WIA_FILM_BW_NEGATIVE = 0x00000002;
enum WIA_LAMP_ON = 0x00000000;
enum WIA_LAMP_OFF = 0x00000001;
enum WIA_AUTO_DESKEW_ON = 0x00000000;
enum WIA_AUTO_DESKEW_OFF = 0x00000001;
enum WIA_ADVANCED_PREVIEW = 0x00000000;
enum WIA_BASIC_PREVIEW = 0x00000001;
enum WIA_PRINTER_ENDORSER_DISABLED = 0x00000000;
enum WIA_PRINTER_ENDORSER_AUTO = 0x00000001;
enum WIA_PRINTER_ENDORSER_FLATBED = 0x00000002;
enum WIA_PRINTER_ENDORSER_FEEDER_FRONT = 0x00000003;
enum WIA_PRINTER_ENDORSER_FEEDER_BACK = 0x00000004;
enum WIA_PRINTER_ENDORSER_FEEDER_DUPLEX = 0x00000005;
enum WIA_PRINTER_ENDORSER_DIGITAL = 0x00000006;
enum WIA_PRINTER_ENDORSER_BEFORE_SCAN = 0x00000000;
enum WIA_PRINTER_ENDORSER_AFTER_SCAN = 0x00000001;
enum WIA_PRINT_DATE = 0x00000000;
enum WIA_PRINT_YEAR = 0x00000001;
enum WIA_PRINT_MONTH = 0x00000002;
enum WIA_PRINT_DAY = 0x00000003;
enum WIA_PRINT_WEEK_DAY = 0x00000004;
enum WIA_PRINT_TIME_24H = 0x00000005;
enum WIA_PRINT_TIME_12H = 0x00000006;
enum WIA_PRINT_HOUR_24H = 0x00000007;
enum WIA_PRINT_HOUR_12H = 0x00000008;
enum WIA_PRINT_AM_PM = 0x00000009;
enum WIA_PRINT_MINUTE = 0x0000000a;
enum WIA_PRINT_SECOND = 0x0000000b;
enum WIA_PRINT_PAGE_COUNT = 0x0000000c;
enum WIA_PRINT_IMAGE = 0x0000000d;
enum WIA_PRINT_MILLISECOND = 0x0000000e;
enum WIA_PRINT_MONTH_NAME = 0x0000000f;
enum WIA_PRINT_MONTH_SHORT = 0x00000010;
enum WIA_PRINT_WEEK_DAY_SHORT = 0x00000011;
enum WIA_PRINTER_ENDORSER_GRAPHICS_LEFT = 0x00000000;
enum WIA_PRINTER_ENDORSER_GRAPHICS_RIGHT = 0x00000001;
enum WIA_PRINTER_ENDORSER_GRAPHICS_TOP = 0x00000002;
enum WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM = 0x00000003;
enum WIA_PRINTER_ENDORSER_GRAPHICS_TOP_LEFT = 0x00000004;
enum WIA_PRINTER_ENDORSER_GRAPHICS_TOP_RIGHT = 0x00000005;
enum WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_LEFT = 0x00000006;
enum WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_RIGHT = 0x00000007;
enum WIA_PRINTER_ENDORSER_GRAPHICS_BACKGROUND = 0x00000008;
enum WIA_PRINTER_ENDORSER_GRAPHICS_DEVICE_DEFAULT = 0x00000009;
enum WIA_BARCODE_READER_DISABLED = 0x00000000;
enum WIA_BARCODE_READER_AUTO = 0x00000001;
enum WIA_BARCODE_READER_FLATBED = 0x00000002;
enum WIA_BARCODE_READER_FEEDER_FRONT = 0x00000003;
enum WIA_BARCODE_READER_FEEDER_BACK = 0x00000004;
enum WIA_BARCODE_READER_FEEDER_DUPLEX = 0x00000005;
enum WIA_BARCODE_HORIZONTAL_SEARCH = 0x00000000;
enum WIA_BARCODE_VERTICAL_SEARCH = 0x00000001;
enum WIA_BARCODE_HORIZONTAL_VERTICAL_SEARCH = 0x00000002;
enum WIA_BARCODE_VERTICAL_HORIZONTAL_SEARCH = 0x00000003;
enum WIA_BARCODE_AUTO_SEARCH = 0x00000004;
enum WIA_BARCODE_UPCA = 0x00000000;
enum WIA_BARCODE_UPCE = 0x00000001;
enum WIA_BARCODE_CODABAR = 0x00000002;
enum WIA_BARCODE_NONINTERLEAVED_2OF5 = 0x00000003;
enum WIA_BARCODE_INTERLEAVED_2OF5 = 0x00000004;
enum WIA_BARCODE_CODE39 = 0x00000005;
enum WIA_BARCODE_CODE39_MOD43 = 0x00000006;
enum WIA_BARCODE_CODE39_FULLASCII = 0x00000007;
enum WIA_BARCODE_CODE93 = 0x00000008;
enum WIA_BARCODE_CODE128 = 0x00000009;
enum WIA_BARCODE_CODE128A = 0x0000000a;
enum WIA_BARCODE_CODE128B = 0x0000000b;
enum WIA_BARCODE_CODE128C = 0x0000000c;
enum WIA_BARCODE_GS1128 = 0x0000000d;
enum WIA_BARCODE_GS1DATABAR = 0x0000000e;
enum WIA_BARCODE_ITF14 = 0x0000000f;
enum WIA_BARCODE_EAN8 = 0x00000010;
enum WIA_BARCODE_EAN13 = 0x00000011;
enum WIA_BARCODE_POSTNETA = 0x00000012;
enum WIA_BARCODE_POSTNETB = 0x00000013;
enum WIA_BARCODE_POSTNETC = 0x00000014;
enum WIA_BARCODE_POSTNET_DPBC = 0x00000015;
enum WIA_BARCODE_PLANET = 0x00000016;
enum WIA_BARCODE_INTELLIGENT_MAIL = 0x00000017;
enum WIA_BARCODE_POSTBAR = 0x00000018;
enum WIA_BARCODE_RM4SCC = 0x00000019;
enum WIA_BARCODE_HIGH_CAPACITY_COLOR = 0x0000001a;
enum WIA_BARCODE_MAXICODE = 0x0000001b;
enum WIA_BARCODE_PDF417 = 0x0000001c;
enum WIA_BARCODE_CPCBINARY = 0x0000001d;
enum WIA_BARCODE_FIM = 0x0000001e;
enum WIA_BARCODE_PHARMACODE = 0x0000001f;
enum WIA_BARCODE_PLESSEY = 0x00000020;
enum WIA_BARCODE_MSI = 0x00000021;
enum WIA_BARCODE_JAN = 0x00000022;
enum WIA_BARCODE_TELEPEN = 0x00000023;
enum WIA_BARCODE_AZTEC = 0x00000024;
enum WIA_BARCODE_SMALLAZTEC = 0x00000025;
enum WIA_BARCODE_DATAMATRIX = 0x00000026;
enum WIA_BARCODE_DATASTRIP = 0x00000027;
enum WIA_BARCODE_EZCODE = 0x00000028;
enum WIA_BARCODE_QRCODE = 0x00000029;
enum WIA_BARCODE_SHOTCODE = 0x0000002a;
enum WIA_BARCODE_SPARQCODE = 0x0000002b;
enum WIA_BARCODE_CUSTOMBASE = 0x00008000;
enum WIA_PATCH_CODE_READER_DISABLED = 0x00000000;
enum WIA_PATCH_CODE_READER_AUTO = 0x00000001;
enum WIA_PATCH_CODE_READER_FLATBED = 0x00000002;
enum WIA_PATCH_CODE_READER_FEEDER_FRONT = 0x00000003;
enum WIA_PATCH_CODE_READER_FEEDER_BACK = 0x00000004;
enum WIA_PATCH_CODE_READER_FEEDER_DUPLEX = 0x00000005;
enum WIA_PATCH_CODE_UNKNOWN = 0x00000000;
enum WIA_PATCH_CODE_1 = 0x00000001;
enum WIA_PATCH_CODE_2 = 0x00000002;
enum WIA_PATCH_CODE_3 = 0x00000003;
enum WIA_PATCH_CODE_4 = 0x00000004;
enum WIA_PATCH_CODE_T = 0x00000005;
enum WIA_PATCH_CODE_6 = 0x00000006;
enum WIA_PATCH_CODE_7 = 0x00000007;
enum WIA_PATCH_CODE_8 = 0x00000008;
enum WIA_PATCH_CODE_9 = 0x00000009;
enum WIA_PATCH_CODE_10 = 0x0000000a;
enum WIA_PATCH_CODE_11 = 0x0000000b;
enum WIA_PATCH_CODE_12 = 0x0000000c;
enum WIA_PATCH_CODE_13 = 0x0000000d;
enum WIA_PATCH_CODE_14 = 0x0000000e;
enum WIA_PATCH_CODE_CUSTOM_BASE = 0x00008000;
enum WIA_MICR_READER_DISABLED = 0x00000000;
enum WIA_MICR_READER_AUTO = 0x00000001;
enum WIA_MICR_READER_FLATBED = 0x00000002;
enum WIA_MICR_READER_FEEDER_FRONT = 0x00000003;
enum WIA_MICR_READER_FEEDER_BACK = 0x00000004;
enum WIA_MICR_READER_FEEDER_DUPLEX = 0x00000005;
enum WIA_SEPARATOR_DISABLED = 0x00000000;
enum WIA_SEPARATOR_DETECT_SCAN_CONTINUE = 0x00000001;
enum WIA_SEPARATOR_DETECT_SCAN_STOP = 0x00000002;
enum WIA_SEPARATOR_DETECT_NOSCAN_CONTINUE = 0x00000003;
enum WIA_SEPARATOR_DETECT_NOSCAN_STOP = 0x00000004;
enum WIA_LONG_DOCUMENT_DISABLED = 0x00000000;
enum WIA_LONG_DOCUMENT_ENABLED = 0x00000001;
enum WIA_LONG_DOCUMENT_SPLIT = 0x00000002;
enum WIA_BLANK_PAGE_DETECTION_DISABLED = 0x00000000;
enum WIA_BLANK_PAGE_DISCARD = 0x00000001;
enum WIA_BLANK_PAGE_JOB_SEPARATOR = 0x00000002;
enum WIA_MULTI_FEED_DETECT_DISABLED = 0x00000000;
enum WIA_MULTI_FEED_DETECT_STOP_ERROR = 0x00000001;
enum WIA_MULTI_FEED_DETECT_STOP_SUCCESS = 0x00000002;
enum WIA_MULTI_FEED_DETECT_CONTINUE = 0x00000003;
enum WIA_MULTI_FEED_DETECT_METHOD_LENGTH = 0x00000000;
enum WIA_MULTI_FEED_DETECT_METHOD_OVERLAP = 0x00000001;
enum WIA_AUTO_CROP_DISABLED = 0x00000000;
enum WIA_AUTO_CROP_SINGLE = 0x00000001;
enum WIA_AUTO_CROP_MULTI = 0x00000002;
enum WIA_OVER_SCAN_DISABLED = 0x00000000;
enum WIA_OVER_SCAN_TOP_BOTTOM = 0x00000001;
enum WIA_OVER_SCAN_LEFT_RIGHT = 0x00000002;
enum WIA_OVER_SCAN_ALL = 0x00000003;
enum WIA_COLOR_DROP_DISABLED = 0x00000000;
enum WIA_COLOR_DROP_RED = 0x00000001;
enum WIA_COLOR_DROP_GREEN = 0x00000002;
enum WIA_COLOR_DROP_BLUE = 0x00000003;
enum WIA_COLOR_DROP_RGB = 0x00000004;
enum WIA_SCAN_AHEAD_DISABLED = 0x00000000;
enum WIA_SCAN_AHEAD_ENABLED = 0x00000001;
enum WIA_FEEDER_CONTROL_AUTO = 0x00000000;
enum WIA_FEEDER_CONTROL_MANUAL = 0x00000001;
enum WIA_PRINT_PADDING_NONE = 0x00000000;
enum WIA_PRINT_PADDING_ZERO = 0x00000001;
enum WIA_PRINT_PADDING_BLANK = 0x00000002;
enum WIA_PRINT_FONT_NORMAL = 0x00000000;
enum WIA_PRINT_FONT_BOLD = 0x00000001;
enum WIA_PRINT_FONT_EXTRA_BOLD = 0x00000002;
enum WIA_PRINT_FONT_ITALIC_BOLD = 0x00000003;
enum WIA_PRINT_FONT_ITALIC_EXTRA_BOLD = 0x00000004;
enum WIA_PRINT_FONT_ITALIC = 0x00000005;
enum WIA_PRINT_FONT_SMALL = 0x00000006;
enum WIA_PRINT_FONT_SMALL_BOLD = 0x00000007;
enum WIA_PRINT_FONT_SMALL_EXTRA_BOLD = 0x00000008;
enum WIA_PRINT_FONT_SMALL_ITALIC_BOLD = 0x00000009;
enum WIA_PRINT_FONT_SMALL_ITALIC_EXTRA_BOLD = 0x0000000a;
enum WIA_PRINT_FONT_SMALL_ITALIC = 0x0000000b;
enum WIA_PRINT_FONT_LARGE = 0x0000000c;
enum WIA_PRINT_FONT_LARGE_BOLD = 0x0000000d;
enum WIA_PRINT_FONT_LARGE_EXTRA_BOLD = 0x0000000e;
enum WIA_PRINT_FONT_LARGE_ITALIC_BOLD = 0x0000000f;
enum WIA_PRINT_FONT_LARGE_ITALIC_EXTRA_BOLD = 0x00000010;
enum WIA_PRINT_FONT_LARGE_ITALIC = 0x00000011;
enum WIA_ALARM_NONE = 0x00000000;
enum WIA_ALARM_BEEP1 = 0x00000001;
enum WIA_ALARM_BEEP2 = 0x00000002;
enum WIA_ALARM_BEEP3 = 0x00000003;
enum WIA_ALARM_BEEP4 = 0x00000004;
enum WIA_ALARM_BEEP5 = 0x00000005;
enum WIA_ALARM_BEEP6 = 0x00000006;
enum WIA_ALARM_BEEP7 = 0x00000007;
enum WIA_ALARM_BEEP8 = 0x00000008;
enum WIA_ALARM_BEEP9 = 0x00000009;
enum WIA_ALARM_BEEP10 = 0x0000000a;
enum WIA_PRIVATE_DEVPROP = 0x00009802;
enum WIA_PRIVATE_ITEMPROP = 0x00011802;
enum WiaImgFmt_UNDEFINED = GUID(0xb96b3ca9, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_RAWRGB = GUID(0xbca48b55, 0xf272, 0x4371, [0xb0, 0xf1, 0x4a, 0x15, 0xd, 0x5, 0x7b, 0xb4]);
enum WiaImgFmt_MEMORYBMP = GUID(0xb96b3caa, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_BMP = GUID(0xb96b3cab, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_EMF = GUID(0xb96b3cac, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_WMF = GUID(0xb96b3cad, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_JPEG = GUID(0xb96b3cae, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_PNG = GUID(0xb96b3caf, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_GIF = GUID(0xb96b3cb0, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_TIFF = GUID(0xb96b3cb1, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_EXIF = GUID(0xb96b3cb2, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_PHOTOCD = GUID(0xb96b3cb3, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_FLASHPIX = GUID(0xb96b3cb4, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_ICO = GUID(0xb96b3cb5, 0x728, 0x11d3, [0x9d, 0x7b, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e]);
enum WiaImgFmt_CIFF = GUID(0x9821a8ab, 0x3a7e, 0x4215, [0x94, 0xe0, 0xd2, 0x7a, 0x46, 0xc, 0x3, 0xb2]);
enum WiaImgFmt_PICT = GUID(0xa6bc85d8, 0x6b3e, 0x40ee, [0xa9, 0x5c, 0x25, 0xd4, 0x82, 0xe4, 0x1a, 0xdc]);
enum WiaImgFmt_JPEG2K = GUID(0x344ee2b2, 0x39db, 0x4dde, [0x81, 0x73, 0xc4, 0xb7, 0x5f, 0x8f, 0x1e, 0x49]);
enum WiaImgFmt_JPEG2KX = GUID(0x43e14614, 0xc80a, 0x4850, [0xba, 0xf3, 0x4b, 0x15, 0x2d, 0xc8, 0xda, 0x27]);
enum WiaImgFmt_RAW = GUID(0x6f120719, 0xf1a8, 0x4e07, [0x9a, 0xde, 0x9b, 0x64, 0xc6, 0x3a, 0x3d, 0xcc]);
enum WiaImgFmt_JBIG = GUID(0x41e8dd92, 0x2f0a, 0x43d4, [0x86, 0x36, 0xf1, 0x61, 0x4b, 0xa1, 0x1e, 0x46]);
enum WiaImgFmt_JBIG2 = GUID(0xbb8e7e67, 0x283c, 0x4235, [0x9e, 0x59, 0xb, 0x9b, 0xf9, 0x4c, 0xa6, 0x87]);
enum WiaImgFmt_RTF = GUID(0x573dd6a3, 0x4834, 0x432d, [0xa9, 0xb5, 0xe1, 0x98, 0xdd, 0x9e, 0x89, 0xd]);
enum WiaImgFmt_XML = GUID(0xb9171457, 0xdac8, 0x4884, [0xb3, 0x93, 0x15, 0xb4, 0x71, 0xd5, 0xf0, 0x7e]);
enum WiaImgFmt_HTML = GUID(0xc99a4e62, 0x99de, 0x4a94, [0xac, 0xca, 0x71, 0x95, 0x6a, 0xc2, 0x97, 0x7d]);
enum WiaImgFmt_TXT = GUID(0xfafd4d82, 0x723f, 0x421f, [0x93, 0x18, 0x30, 0x50, 0x1a, 0xc4, 0x4b, 0x59]);
enum WiaImgFmt_PDFA = GUID(0x9980bd5b, 0x3463, 0x43c7, [0xbd, 0xca, 0x3c, 0xaa, 0x14, 0x6f, 0x22, 0x9f]);
enum WiaImgFmt_XPS = GUID(0x700b4a0f, 0x2011, 0x411c, [0xb4, 0x30, 0xd1, 0xe0, 0xb2, 0xe1, 0xb, 0x28]);
enum WiaImgFmt_OXPS = GUID(0x2c7b1240, 0xc14d, 0x4109, [0x97, 0x55, 0x4, 0xb8, 0x90, 0x25, 0x15, 0x3a]);
enum WiaImgFmt_CSV = GUID(0x355bda24, 0x5a9f, 0x4494, [0x80, 0xdc, 0xbe, 0x75, 0x2c, 0xec, 0xbc, 0x8c]);
enum WiaImgFmt_MPG = GUID(0xecd757e4, 0xd2ec, 0x4f57, [0x95, 0x5d, 0xbc, 0xf8, 0xa9, 0x7c, 0x4e, 0x52]);
enum WiaImgFmt_AVI = GUID(0x32f8ca14, 0x87c, 0x4908, [0xb7, 0xc4, 0x67, 0x57, 0xfe, 0x7e, 0x90, 0xab]);
enum WiaAudFmt_WAV = GUID(0xf818e146, 0x7af, 0x40ff, [0xae, 0x55, 0xbe, 0x8f, 0x2c, 0x6, 0x5d, 0xbe]);
enum WiaAudFmt_MP3 = GUID(0xfbc71fb, 0x43bf, 0x49f2, [0x91, 0x90, 0xe6, 0xfe, 0xcf, 0xf3, 0x7e, 0x54]);
enum WiaAudFmt_AIFF = GUID(0x66e2bf4f, 0xb6fc, 0x443f, [0x94, 0xc8, 0x2f, 0x33, 0xc8, 0xa6, 0x5a, 0xaf]);
enum WiaAudFmt_WMA = GUID(0xd61d6413, 0x8bc2, 0x438f, [0x93, 0xad, 0x21, 0xbd, 0x48, 0x4d, 0xb6, 0xa1]);
enum WiaImgFmt_ASF = GUID(0x8d948ee9, 0xd0aa, 0x4a12, [0x9d, 0x9a, 0x9c, 0xc5, 0xde, 0x36, 0x19, 0x9b]);
enum WiaImgFmt_SCRIPT = GUID(0xfe7d6c53, 0x2dac, 0x446a, [0xb0, 0xbd, 0xd7, 0x3e, 0x21, 0xe9, 0x24, 0xc9]);
enum WiaImgFmt_EXEC = GUID(0x485da097, 0x141e, 0x4aa5, [0xbb, 0x3b, 0xa5, 0x61, 0x8d, 0x95, 0xd0, 0x2b]);
enum WiaImgFmt_UNICODE16 = GUID(0x1b7639b6, 0x6357, 0x47d1, [0x9a, 0x7, 0x12, 0x45, 0x2d, 0xc0, 0x73, 0xe9]);
enum WiaImgFmt_DPOF = GUID(0x369eeeab, 0xa0e8, 0x45ca, [0x86, 0xa6, 0xa8, 0x3c, 0xe5, 0x69, 0x7e, 0x28]);
enum WiaImgFmt_XMLBAR = GUID(0x6235701c, 0x3a98, 0x484c, [0xb2, 0xa8, 0xfd, 0xff, 0xd8, 0x7e, 0x6b, 0x16]);
enum WiaImgFmt_RAWBAR = GUID(0xda63f833, 0xd26e, 0x451e, [0x90, 0xd2, 0xea, 0x55, 0xa1, 0x36, 0x5d, 0x62]);
enum WiaImgFmt_XMLPAT = GUID(0xf8986f55, 0xf052, 0x460d, [0x95, 0x23, 0x3a, 0x7d, 0xfe, 0xdb, 0xb3, 0x3c]);
enum WiaImgFmt_RAWPAT = GUID(0x7760507c, 0x5064, 0x400c, [0x9a, 0x17, 0x57, 0x56, 0x24, 0xd8, 0x82, 0x4b]);
enum WiaImgFmt_XMLMIC = GUID(0x2d164c61, 0xb9ae, 0x4b23, [0x89, 0x73, 0xc7, 0x6, 0x7e, 0x1f, 0xbd, 0x31]);
enum WiaImgFmt_RAWMIC = GUID(0x22c4f058, 0xd88, 0x409c, [0xac, 0x1c, 0xee, 0xc1, 0x2b, 0xe, 0xa6, 0x80]);
enum WIA_EVENT_DEVICE_DISCONNECTED = GUID(0x143e4e83, 0x6497, 0x11d2, [0xa2, 0x31, 0x0, 0xc0, 0x4f, 0xa3, 0x18, 0x9]);
enum WIA_EVENT_DEVICE_CONNECTED = GUID(0xa28bbade, 0x64b6, 0x11d2, [0xa2, 0x31, 0x0, 0xc0, 0x4f, 0xa3, 0x18, 0x9]);
enum WIA_EVENT_ITEM_DELETED = GUID(0x1d22a559, 0xe14f, 0x11d2, [0xb3, 0x26, 0x0, 0xc0, 0x4f, 0x68, 0xce, 0x61]);
enum WIA_EVENT_ITEM_CREATED = GUID(0x4c8f4ef5, 0xe14f, 0x11d2, [0xb3, 0x26, 0x0, 0xc0, 0x4f, 0x68, 0xce, 0x61]);
enum WIA_EVENT_TREE_UPDATED = GUID(0xc9859b91, 0x4ab2, 0x4cd6, [0xa1, 0xfc, 0x58, 0x2e, 0xec, 0x55, 0xe5, 0x85]);
enum WIA_EVENT_VOLUME_INSERT = GUID(0x9638bbfd, 0xd1bd, 0x11d2, [0xb3, 0x1f, 0x0, 0xc0, 0x4f, 0x68, 0xce, 0x61]);
enum WIA_EVENT_SCAN_IMAGE = GUID(0xa6c5a715, 0x8c6e, 0x11d2, [0x97, 0x7a, 0x0, 0x0, 0xf8, 0x7a, 0x92, 0x6f]);
enum WIA_EVENT_SCAN_PRINT_IMAGE = GUID(0xb441f425, 0x8c6e, 0x11d2, [0x97, 0x7a, 0x0, 0x0, 0xf8, 0x7a, 0x92, 0x6f]);
enum WIA_EVENT_SCAN_FAX_IMAGE = GUID(0xc00eb793, 0x8c6e, 0x11d2, [0x97, 0x7a, 0x0, 0x0, 0xf8, 0x7a, 0x92, 0x6f]);
enum WIA_EVENT_SCAN_OCR_IMAGE = GUID(0x9d095b89, 0x37d6, 0x4877, [0xaf, 0xed, 0x62, 0xa2, 0x97, 0xdc, 0x6d, 0xbe]);
enum WIA_EVENT_SCAN_EMAIL_IMAGE = GUID(0xc686dcee, 0x54f2, 0x419e, [0x9a, 0x27, 0x2f, 0xc7, 0xf2, 0xe9, 0x8f, 0x9e]);
enum WIA_EVENT_SCAN_FILM_IMAGE = GUID(0x9b2b662c, 0x6185, 0x438c, [0xb6, 0x8b, 0xe3, 0x9e, 0xe2, 0x5e, 0x71, 0xcb]);
enum WIA_EVENT_SCAN_IMAGE2 = GUID(0xfc4767c1, 0xc8b3, 0x48a2, [0x9c, 0xfa, 0x2e, 0x90, 0xcb, 0x3d, 0x35, 0x90]);
enum WIA_EVENT_SCAN_IMAGE3 = GUID(0x154e27be, 0xb617, 0x4653, [0xac, 0xc5, 0xf, 0xd7, 0xbd, 0x4c, 0x65, 0xce]);
enum WIA_EVENT_SCAN_IMAGE4 = GUID(0xa65b704a, 0x7f3c, 0x4447, [0xa7, 0x5d, 0x8a, 0x26, 0xdf, 0xca, 0x1f, 0xdf]);
enum WIA_EVENT_STORAGE_CREATED = GUID(0x353308b2, 0xfe73, 0x46c8, [0x89, 0x5e, 0xfa, 0x45, 0x51, 0xcc, 0xc8, 0x5a]);
enum WIA_EVENT_STORAGE_DELETED = GUID(0x5e41e75e, 0x9390, 0x44c5, [0x9a, 0x51, 0xe4, 0x70, 0x19, 0xe3, 0x90, 0xcf]);
enum WIA_EVENT_STI_PROXY = GUID(0xd711f81f, 0x1f0d, 0x422d, [0x86, 0x41, 0x92, 0x7d, 0x1b, 0x93, 0xe5, 0xe5]);
enum WIA_EVENT_CANCEL_IO = GUID(0xc860f7b8, 0x9ccd, 0x41ea, [0xbb, 0xbf, 0x4d, 0xd0, 0x9c, 0x5b, 0x17, 0x95]);
enum WIA_EVENT_POWER_SUSPEND = GUID(0xa0922ff9, 0xc3b4, 0x411c, [0x9e, 0x29, 0x3, 0xa6, 0x69, 0x93, 0xd2, 0xbe]);
enum WIA_EVENT_POWER_RESUME = GUID(0x618f153e, 0xf686, 0x4350, [0x96, 0x34, 0x41, 0x15, 0xa3, 0x4, 0x83, 0xc]);
enum WIA_EVENT_HANDLER_NO_ACTION = GUID(0xe0372b7d, 0xe115, 0x4525, [0xbc, 0x55, 0xb6, 0x29, 0xe6, 0x8c, 0x74, 0x5a]);
enum WIA_EVENT_HANDLER_PROMPT = GUID(0x5f4baad0, 0x4d59, 0x4fcd, [0xb2, 0x13, 0x78, 0x3c, 0xe7, 0xa9, 0x2f, 0x22]);
enum WIA_EVENT_DEVICE_NOT_READY = GUID(0xd8962d7e, 0xe4dc, 0x4b4d, [0xba, 0x29, 0x66, 0x8a, 0x87, 0xf4, 0x2e, 0x6f]);
enum WIA_EVENT_DEVICE_READY = GUID(0x7523ec6c, 0x988b, 0x419e, [0x9a, 0xa, 0x42, 0x5a, 0xc3, 0x1b, 0x37, 0xdc]);
enum WIA_EVENT_FLATBED_LID_OPEN = GUID(0xba0a0623, 0x437d, 0x4f03, [0xa9, 0x7d, 0x77, 0x93, 0xb1, 0x23, 0x11, 0x3c]);
enum WIA_EVENT_FLATBED_LID_CLOSED = GUID(0xf879af0f, 0x9b29, 0x4283, [0xad, 0x95, 0xd4, 0x12, 0x16, 0x4d, 0x39, 0xa9]);
enum WIA_EVENT_FEEDER_LOADED = GUID(0xcc8d701e, 0x9aba, 0x481d, [0xbf, 0x74, 0x78, 0xf7, 0x63, 0xdc, 0x34, 0x2a]);
enum WIA_EVENT_FEEDER_EMPTIED = GUID(0xe70b4b82, 0x6dda, 0x46bb, [0x8f, 0xf9, 0x53, 0xce, 0xb1, 0xa0, 0x3e, 0x35]);
enum WIA_EVENT_COVER_OPEN = GUID(0x19a12136, 0xfa1c, 0x4f66, [0x90, 0xf, 0x8f, 0x91, 0x4e, 0xc7, 0x4e, 0xc9]);
enum WIA_EVENT_COVER_CLOSED = GUID(0x6714a1e6, 0xe285, 0x468c, [0x9b, 0x8c, 0xda, 0x7d, 0xc4, 0xcb, 0xaa, 0x5]);
enum WIA_CMD_SYNCHRONIZE = GUID(0x9b26b7b2, 0xacad, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
enum WIA_CMD_TAKE_PICTURE = GUID(0xaf933cac, 0xacad, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
enum WIA_CMD_DELETE_ALL_ITEMS = GUID(0xe208c170, 0xacad, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
enum WIA_CMD_CHANGE_DOCUMENT = GUID(0x4e725b0, 0xacae, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
enum WIA_CMD_UNLOAD_DOCUMENT = GUID(0x1f3b3d8e, 0xacae, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
enum WIA_CMD_DIAGNOSTIC = GUID(0x10ff52f5, 0xde04, 0x4cf0, [0xa5, 0xad, 0x69, 0x1f, 0x8d, 0xce, 0x1, 0x41]);
enum WIA_CMD_FORMAT = GUID(0xc3a693aa, 0xf788, 0x4d34, [0xa5, 0xb0, 0xbe, 0x71, 0x90, 0x75, 0x9a, 0x24]);
enum WIA_CMD_DELETE_DEVICE_TREE = GUID(0x73815942, 0xdbea, 0x11d2, [0x84, 0x16, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
enum WIA_CMD_BUILD_DEVICE_TREE = GUID(0x9cba5ce0, 0xdbea, 0x11d2, [0x84, 0x16, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
enum WIA_CMD_START_FEEDER = GUID(0x5a9df6c9, 0x5f2d, 0x4a39, [0x9d, 0x6c, 0x0, 0x45, 0x6d, 0x4, 0x7f, 0x0]);
enum WIA_CMD_STOP_FEEDER = GUID(0xd847b06d, 0x3905, 0x459c, [0x95, 0x9, 0x9b, 0x29, 0xcd, 0xb6, 0x91, 0xe7]);
enum WIA_CMD_PAUSE_FEEDER = GUID(0x50985e4d, 0xa5b2, 0x4b71, [0x9c, 0x95, 0x6d, 0x7d, 0x7c, 0x46, 0x9a, 0x43]);
enum BASE_VAL_WIA_ERROR = 0x00000000;
enum BASE_VAL_WIA_SUCCESS = 0x00000000;
enum WIA_ERROR_GENERAL_ERROR = 0xffffffff80210001;
enum WIA_ERROR_PAPER_JAM = 0xffffffff80210002;
enum WIA_ERROR_PAPER_EMPTY = 0xffffffff80210003;
enum WIA_ERROR_PAPER_PROBLEM = 0xffffffff80210004;
enum WIA_ERROR_OFFLINE = 0xffffffff80210005;
enum WIA_ERROR_BUSY = 0xffffffff80210006;
enum WIA_ERROR_WARMING_UP = 0xffffffff80210007;
enum WIA_ERROR_USER_INTERVENTION = 0xffffffff80210008;
enum WIA_ERROR_ITEM_DELETED = 0xffffffff80210009;
enum WIA_ERROR_DEVICE_COMMUNICATION = 0xffffffff8021000a;
enum WIA_ERROR_INVALID_COMMAND = 0xffffffff8021000b;
enum WIA_ERROR_INCORRECT_HARDWARE_SETTING = 0xffffffff8021000c;
enum WIA_ERROR_DEVICE_LOCKED = 0xffffffff8021000d;
enum WIA_ERROR_EXCEPTION_IN_DRIVER = 0xffffffff8021000e;
enum WIA_ERROR_INVALID_DRIVER_RESPONSE = 0xffffffff8021000f;
enum WIA_ERROR_COVER_OPEN = 0xffffffff80210010;
enum WIA_ERROR_LAMP_OFF = 0xffffffff80210011;
enum WIA_ERROR_DESTINATION = 0xffffffff80210012;
enum WIA_ERROR_NETWORK_RESERVATION_FAILED = 0xffffffff80210013;
enum WIA_ERROR_MULTI_FEED = 0xffffffff80210014;
enum WIA_ERROR_MAXIMUM_PRINTER_ENDORSER_COUNTER = 0xffffffff80210015;
enum WIA_STATUS_END_OF_MEDIA = 0x00210001;
enum WIA_STATUS_WARMING_UP = 0x00210002;
enum WIA_STATUS_CALIBRATING = 0x00210003;
enum WIA_STATUS_RESERVING_NETWORK_DEVICE = 0x00210006;
enum WIA_STATUS_NETWORK_DEVICE_RESERVED = 0x00210007;
enum WIA_STATUS_CLEAR = 0x00210008;
enum WIA_STATUS_SKIP_ITEM = 0x00210009;
enum WIA_STATUS_NOT_HANDLED = 0x0021000a;
enum WIA_S_CHANGE_DEVICE = 0x0021000b;
enum WIA_S_NO_DEVICE_AVAILABLE = 0xffffffff80210015;
enum WIA_SELECT_DEVICE_NODEFAULT = 0x00000001;
enum WIA_DEVICE_DIALOG_SINGLE_IMAGE = 0x00000002;
enum WIA_DEVICE_DIALOG_USE_COMMON_UI = 0x00000004;
enum WIA_REGISTER_EVENT_CALLBACK = 0x00000001;
enum WIA_UNREGISTER_EVENT_CALLBACK = 0x00000002;
enum WIA_SET_DEFAULT_HANDLER = 0x00000004;
enum WIA_NOTIFICATION_EVENT = 0x00000001;
enum WIA_ACTION_EVENT = 0x00000002;
enum WIA_LINE_ORDER_TOP_TO_BOTTOM = 0x00000001;
enum WIA_LINE_ORDER_BOTTOM_TO_TOP = 0x00000002;
enum WIA_IS_DEFAULT_HANDLER = 0x00000001;
enum WIA_EVENT_DEVICE_DISCONNECTED_STR = "Device Disconnected";
enum WIA_EVENT_DEVICE_CONNECTED_STR = "Device Connected";
enum TYMED_CALLBACK = 0x00000080;
enum TYMED_MULTIPAGE_FILE = 0x00000100;
enum TYMED_MULTIPAGE_CALLBACK = 0x00000200;
enum IT_MSG_DATA_HEADER = 0x00000001;
enum IT_MSG_DATA = 0x00000002;
enum IT_MSG_STATUS = 0x00000003;
enum IT_MSG_TERMINATION = 0x00000004;
enum IT_MSG_NEW_PAGE = 0x00000005;
enum IT_MSG_FILE_PREVIEW_DATA = 0x00000006;
enum IT_MSG_FILE_PREVIEW_DATA_HEADER = 0x00000007;
enum IT_STATUS_TRANSFER_FROM_DEVICE = 0x00000001;
enum IT_STATUS_PROCESSING_DATA = 0x00000002;
enum IT_STATUS_TRANSFER_TO_CLIENT = 0x00000004;
enum IT_STATUS_MASK = 0x00000007;
enum WIA_TRANSFER_ACQUIRE_CHILDREN = 0x00000001;
enum WIA_TRANSFER_MSG_STATUS = 0x00000001;
enum WIA_TRANSFER_MSG_END_OF_STREAM = 0x00000002;
enum WIA_TRANSFER_MSG_END_OF_TRANSFER = 0x00000003;
enum WIA_TRANSFER_MSG_DEVICE_STATUS = 0x00000005;
enum WIA_TRANSFER_MSG_NEW_PAGE = 0x00000006;
enum WIA_MAJOR_EVENT_DEVICE_CONNECT = 0x00000001;
enum WIA_MAJOR_EVENT_DEVICE_DISCONNECT = 0x00000002;
enum WIA_MAJOR_EVENT_PICTURE_TAKEN = 0x00000003;
enum WIA_MAJOR_EVENT_PICTURE_DELETED = 0x00000004;
enum WIA_DEVICE_NOT_CONNECTED = 0x00000000;
enum WIA_DEVICE_CONNECTED = 0x00000001;
enum WIA_DEVICE_COMMANDS = 0x00000001;
enum WIA_DEVICE_EVENTS = 0x00000002;
enum WIA_DEVINFO_ENUM_ALL = 0x0000000f;
enum WIA_DEVINFO_ENUM_LOCAL = 0x00000010;
enum WiaItemTypeFree = 0x00000000;
enum WiaItemTypeImage = 0x00000001;
enum WiaItemTypeFile = 0x00000002;
enum WiaItemTypeFolder = 0x00000004;
enum WiaItemTypeRoot = 0x00000008;
enum WiaItemTypeAnalyze = 0x00000010;
enum WiaItemTypeAudio = 0x00000020;
enum WiaItemTypeDevice = 0x00000040;
enum WiaItemTypeDeleted = 0x00000080;
enum WiaItemTypeDisconnected = 0x00000100;
enum WiaItemTypeHPanorama = 0x00000200;
enum WiaItemTypeVPanorama = 0x00000400;
enum WiaItemTypeBurst = 0x00000800;
enum WiaItemTypeStorage = 0x00001000;
enum WiaItemTypeTransfer = 0x00002000;
enum WiaItemTypeGenerated = 0x00004000;
enum WiaItemTypeHasAttachments = 0x00008000;
enum WiaItemTypeVideo = 0x00010000;
enum WiaItemTypeRemoved = 0x80000000;
enum WiaItemTypeDocument = 0x00040000;
enum WiaItemTypeProgrammableDataSource = 0x00080000;
enum WiaItemTypeMask = 0x800fffff;
enum WIA_MAX_CTX_SIZE = 0x01000000;
enum WIA_PROP_READ = 0x00000001;
enum WIA_PROP_WRITE = 0x00000002;
enum WIA_PROP_SYNC_REQUIRED = 0x00000004;
enum WIA_PROP_NONE = 0x00000008;
enum WIA_PROP_RANGE = 0x00000010;
enum WIA_PROP_LIST = 0x00000020;
enum WIA_PROP_FLAG = 0x00000040;
enum WIA_PROP_CACHEABLE = 0x00010000;
enum COPY_PARENT_PROPERTY_VALUES = 0x40000000;
enum WIA_ITEM_CAN_BE_DELETED = 0x00000080;
enum WIA_ITEM_READ = 0x00000001;
enum WIA_ITEM_WRITE = 0x00000002;
enum WIA_RANGE_MIN = 0x00000000;
enum WIA_RANGE_NOM = 0x00000001;
enum WIA_RANGE_MAX = 0x00000002;
enum WIA_RANGE_STEP = 0x00000003;
enum WIA_RANGE_NUM_ELEMS = 0x00000004;
enum WIA_LIST_COUNT = 0x00000000;
enum WIA_LIST_NOM = 0x00000001;
enum WIA_LIST_VALUES = 0x00000002;
enum WIA_LIST_NUM_ELEMS = 0x00000002;
enum WIA_FLAG_NOM = 0x00000000;
enum WIA_FLAG_VALUES = 0x00000001;
enum WIA_FLAG_NUM_ELEMS = 0x00000002;
enum WIA_DIP_FIRST = 0x00000002;
enum WIA_IPA_FIRST = 0x00001002;
enum WIA_DPF_FIRST = 0x00000d02;
enum WIA_IPS_FIRST = 0x00001802;
enum WIA_DPS_FIRST = 0x00000c02;
enum WIA_IPC_FIRST = 0x00001402;
enum WIA_NUM_IPC = 0x00000009;
enum WIA_RESERVED_FOR_NEW_PROPS = 0x00000400;
enum WHITEBALANCE_MANUAL = 0x00000001;
enum WHITEBALANCE_AUTO = 0x00000002;
enum WHITEBALANCE_ONEPUSH_AUTO = 0x00000003;
enum WHITEBALANCE_DAYLIGHT = 0x00000004;
enum WHITEBALANCE_FLORESCENT = 0x00000005;
enum WHITEBALANCE_TUNGSTEN = 0x00000006;
enum WHITEBALANCE_FLASH = 0x00000007;
enum FOCUSMODE_MANUAL = 0x00000001;
enum FOCUSMODE_AUTO = 0x00000002;
enum FOCUSMODE_MACROAUTO = 0x00000003;
enum EXPOSUREMETERING_AVERAGE = 0x00000001;
enum EXPOSUREMETERING_CENTERWEIGHT = 0x00000002;
enum EXPOSUREMETERING_MULTISPOT = 0x00000003;
enum EXPOSUREMETERING_CENTERSPOT = 0x00000004;
enum FLASHMODE_AUTO = 0x00000001;
enum FLASHMODE_OFF = 0x00000002;
enum FLASHMODE_FILL = 0x00000003;
enum FLASHMODE_REDEYE_AUTO = 0x00000004;
enum FLASHMODE_REDEYE_FILL = 0x00000005;
enum FLASHMODE_EXTERNALSYNC = 0x00000006;
enum EXPOSUREMODE_MANUAL = 0x00000001;
enum EXPOSUREMODE_AUTO = 0x00000002;
enum EXPOSUREMODE_APERTURE_PRIORITY = 0x00000003;
enum EXPOSUREMODE_SHUTTER_PRIORITY = 0x00000004;
enum EXPOSUREMODE_PROGRAM_CREATIVE = 0x00000005;
enum EXPOSUREMODE_PROGRAM_ACTION = 0x00000006;
enum EXPOSUREMODE_PORTRAIT = 0x00000007;
enum CAPTUREMODE_NORMAL = 0x00000001;
enum CAPTUREMODE_BURST = 0x00000002;
enum CAPTUREMODE_TIMELAPSE = 0x00000003;
enum EFFECTMODE_STANDARD = 0x00000001;
enum EFFECTMODE_BW = 0x00000002;
enum EFFECTMODE_SEPIA = 0x00000003;
enum FOCUSMETERING_CENTERSPOT = 0x00000001;
enum FOCUSMETERING_MULTISPOT = 0x00000002;
enum POWERMODE_LINE = 0x00000001;
enum POWERMODE_BATTERY = 0x00000002;
enum LEFT_JUSTIFIED = 0x00000000;
enum CENTERED = 0x00000001;
enum RIGHT_JUSTIFIED = 0x00000002;
enum TOP_JUSTIFIED = 0x00000000;
enum BOTTOM_JUSTIFIED = 0x00000002;
enum PORTRAIT = 0x00000000;
enum LANSCAPE = 0x00000001;
enum LANDSCAPE = 0x00000001;
enum ROT180 = 0x00000002;
enum ROT270 = 0x00000003;
enum MIRRORED = 0x00000001;
enum FEED = 0x00000001;
enum FLAT = 0x00000002;
enum DUP = 0x00000004;
enum DETECT_FLAT = 0x00000008;
enum DETECT_SCAN = 0x00000010;
enum DETECT_FEED = 0x00000020;
enum DETECT_DUP = 0x00000040;
enum DETECT_FEED_AVAIL = 0x00000080;
enum DETECT_DUP_AVAIL = 0x00000100;
enum FILM_TPA = 0x00000200;
enum DETECT_FILM_TPA = 0x00000400;
enum STOR = 0x00000800;
enum DETECT_STOR = 0x00001000;
enum ADVANCED_DUP = 0x00002000;
enum AUTO_SOURCE = 0x00008000;
enum IMPRINTER = 0x00010000;
enum ENDORSER = 0x00020000;
enum BARCODE_READER = 0x00040000;
enum PATCH_CODE_READER = 0x00080000;
enum MICR_READER = 0x00100000;
enum FEED_READY = 0x00000001;
enum FLAT_READY = 0x00000002;
enum DUP_READY = 0x00000004;
enum FLAT_COVER_UP = 0x00000008;
enum PATH_COVER_UP = 0x00000010;
enum PAPER_JAM = 0x00000020;
enum FILM_TPA_READY = 0x00000040;
enum STORAGE_READY = 0x00000080;
enum STORAGE_FULL = 0x00000100;
enum MULTIPLE_FEED = 0x00000200;
enum DEVICE_ATTENTION = 0x00000400;
enum LAMP_ERR = 0x00000800;
enum IMPRINTER_READY = 0x00001000;
enum ENDORSER_READY = 0x00002000;
enum BARCODE_READER_READY = 0x00004000;
enum PATCH_CODE_READER_READY = 0x00008000;
enum MICR_READER_READY = 0x00010000;
enum FEEDER = 0x00000001;
enum FLATBED = 0x00000002;
enum DUPLEX = 0x00000004;
enum FRONT_FIRST = 0x00000008;
enum BACK_FIRST = 0x00000010;
enum FRONT_ONLY = 0x00000020;
enum BACK_ONLY = 0x00000040;
enum NEXT_PAGE = 0x00000080;
enum PREFEED = 0x00000100;
enum AUTO_ADVANCE = 0x00000200;
enum ADVANCED_DUPLEX = 0x00000400;
enum LIGHT_SOURCE_PRESENT_DETECT = 0x00000001;
enum LIGHT_SOURCE_PRESENT = 0x00000002;
enum LIGHT_SOURCE_DETECT_READY = 0x00000004;
enum LIGHT_SOURCE_READY = 0x00000008;
enum TRANSPARENCY_DYNAMIC_FRAME_SUPPORT = 0x00000001;
enum TRANSPARENCY_STATIC_FRAME_SUPPORT = 0x00000002;
enum LIGHT_SOURCE_SELECT = 0x00000001;
enum LIGHT_SOURCE_POSITIVE = 0x00000002;
enum LIGHT_SOURCE_NEGATIVE = 0x00000004;
enum WIA_SCAN_AHEAD_ALL = 0x00000000;
enum ALL_PAGES = 0x00000000;
enum WIA_FINAL_SCAN = 0x00000000;
enum WIA_PREVIEW_SCAN = 0x00000001;
enum WIA_SHOW_PREVIEW_CONTROL = 0x00000000;
enum WIA_DONT_SHOW_PREVIEW_CONTROL = 0x00000001;
enum WIA_ENDORSER_TOK_DATE = "$DATE$";
enum WIA_ENDORSER_TOK_TIME = "$TIME$";
enum WIA_ENDORSER_TOK_PAGE_COUNT = "$PAGE_COUNT$";
enum WIA_ENDORSER_TOK_DAY = "$DAY$";
enum WIA_ENDORSER_TOK_MONTH = "$MONTH$";
enum WIA_ENDORSER_TOK_YEAR = "$YEAR$";
enum WIA_PAGE_A4 = 0x00000000;
enum WIA_PAGE_LETTER = 0x00000001;
enum WIA_PAGE_CUSTOM = 0x00000002;
enum WIA_PAGE_USLEGAL = 0x00000003;
enum WIA_PAGE_USLETTER = 0x00000001;
enum WIA_PAGE_USLEDGER = 0x00000004;
enum WIA_PAGE_USSTATEMENT = 0x00000005;
enum WIA_PAGE_BUSINESSCARD = 0x00000006;
enum WIA_PAGE_ISO_A0 = 0x00000007;
enum WIA_PAGE_ISO_A1 = 0x00000008;
enum WIA_PAGE_ISO_A2 = 0x00000009;
enum WIA_PAGE_ISO_A3 = 0x0000000a;
enum WIA_PAGE_ISO_A4 = 0x00000000;
enum WIA_PAGE_ISO_A5 = 0x0000000b;
enum WIA_PAGE_ISO_A6 = 0x0000000c;
enum WIA_PAGE_ISO_A7 = 0x0000000d;
enum WIA_PAGE_ISO_A8 = 0x0000000e;
enum WIA_PAGE_ISO_A9 = 0x0000000f;
enum WIA_PAGE_ISO_A10 = 0x00000010;
enum WIA_PAGE_ISO_B0 = 0x00000011;
enum WIA_PAGE_ISO_B1 = 0x00000012;
enum WIA_PAGE_ISO_B2 = 0x00000013;
enum WIA_PAGE_ISO_B3 = 0x00000014;
enum WIA_PAGE_ISO_B4 = 0x00000015;
enum WIA_PAGE_ISO_B5 = 0x00000016;
enum WIA_PAGE_ISO_B6 = 0x00000017;
enum WIA_PAGE_ISO_B7 = 0x00000018;
enum WIA_PAGE_ISO_B8 = 0x00000019;
enum WIA_PAGE_ISO_B9 = 0x0000001a;
enum WIA_PAGE_ISO_B10 = 0x0000001b;
enum WIA_PAGE_ISO_C0 = 0x0000001c;
enum WIA_PAGE_ISO_C1 = 0x0000001d;
enum WIA_PAGE_ISO_C2 = 0x0000001e;
enum WIA_PAGE_ISO_C3 = 0x0000001f;
enum WIA_PAGE_ISO_C4 = 0x00000020;
enum WIA_PAGE_ISO_C5 = 0x00000021;
enum WIA_PAGE_ISO_C6 = 0x00000022;
enum WIA_PAGE_ISO_C7 = 0x00000023;
enum WIA_PAGE_ISO_C8 = 0x00000024;
enum WIA_PAGE_ISO_C9 = 0x00000025;
enum WIA_PAGE_ISO_C10 = 0x00000026;
enum WIA_PAGE_JIS_B0 = 0x00000027;
enum WIA_PAGE_JIS_B1 = 0x00000028;
enum WIA_PAGE_JIS_B2 = 0x00000029;
enum WIA_PAGE_JIS_B3 = 0x0000002a;
enum WIA_PAGE_JIS_B4 = 0x0000002b;
enum WIA_PAGE_JIS_B5 = 0x0000002c;
enum WIA_PAGE_JIS_B6 = 0x0000002d;
enum WIA_PAGE_JIS_B7 = 0x0000002e;
enum WIA_PAGE_JIS_B8 = 0x0000002f;
enum WIA_PAGE_JIS_B9 = 0x00000030;
enum WIA_PAGE_JIS_B10 = 0x00000031;
enum WIA_PAGE_JIS_2A = 0x00000032;
enum WIA_PAGE_JIS_4A = 0x00000033;
enum WIA_PAGE_DIN_2B = 0x00000034;
enum WIA_PAGE_DIN_4B = 0x00000035;
enum WIA_PAGE_AUTO = 0x00000064;
enum WIA_PAGE_CUSTOM_BASE = 0x00008000;
enum WIA_COMPRESSION_NONE = 0x00000000;
enum WIA_COMPRESSION_BI_RLE4 = 0x00000001;
enum WIA_COMPRESSION_BI_RLE8 = 0x00000002;
enum WIA_COMPRESSION_G3 = 0x00000003;
enum WIA_COMPRESSION_G4 = 0x00000004;
enum WIA_COMPRESSION_JPEG = 0x00000005;
enum WIA_COMPRESSION_JBIG = 0x00000006;
enum WIA_COMPRESSION_JPEG2K = 0x00000007;
enum WIA_COMPRESSION_PNG = 0x00000008;
enum WIA_COMPRESSION_AUTO = 0x00000064;
enum WIA_PACKED_PIXEL = 0x00000000;
enum WIA_PLANAR = 0x00000001;
enum WIA_DATA_THRESHOLD = 0x00000000;
enum WIA_DATA_DITHER = 0x00000001;
enum WIA_DATA_GRAYSCALE = 0x00000002;
enum WIA_DATA_COLOR = 0x00000003;
enum WIA_DATA_COLOR_THRESHOLD = 0x00000004;
enum WIA_DATA_COLOR_DITHER = 0x00000005;
enum WIA_DATA_RAW_RGB = 0x00000006;
enum WIA_DATA_RAW_BGR = 0x00000007;
enum WIA_DATA_RAW_YUV = 0x00000008;
enum WIA_DATA_RAW_YUVK = 0x00000009;
enum WIA_DATA_RAW_CMY = 0x0000000a;
enum WIA_DATA_RAW_CMYK = 0x0000000b;
enum WIA_DATA_AUTO = 0x00000064;
enum WIA_DEPTH_AUTO = 0x00000000;
enum WIA_PHOTO_WHITE_1 = 0x00000000;
enum WIA_PHOTO_WHITE_0 = 0x00000001;
enum WIA_PROPPAGE_SCANNER_ITEM_GENERAL = 0x00000001;
enum WIA_PROPPAGE_CAMERA_ITEM_GENERAL = 0x00000002;
enum WIA_PROPPAGE_DEVICE_GENERAL = 0x00000004;
enum WIA_INTENT_NONE = 0x00000000;
enum WIA_INTENT_IMAGE_TYPE_COLOR = 0x00000001;
enum WIA_INTENT_IMAGE_TYPE_GRAYSCALE = 0x00000002;
enum WIA_INTENT_IMAGE_TYPE_TEXT = 0x00000004;
enum WIA_INTENT_IMAGE_TYPE_MASK = 0x0000000f;
enum WIA_INTENT_MINIMIZE_SIZE = 0x00010000;
enum WIA_INTENT_MAXIMIZE_QUALITY = 0x00020000;
enum WIA_INTENT_BEST_PREVIEW = 0x00040000;
enum WIA_INTENT_SIZE_MASK = 0x000f0000;
enum WIA_NUM_DIP = 0x00000010;
enum SHELLEX_WIAUIEXTENSION_NAME = "WiaDialogExtensionHandlers";
enum CFSTR_WIAITEMNAMES = "WIAItemNames";
enum CFSTR_WIAITEMPTR = "WIAItemPointer";
enum GUID_DEVINTERFACE_IMAGE = GUID(0x6bdd1fc6, 0x810f, 0x11d0, [0xbe, 0xc7, 0x8, 0x0, 0x2b, 0xe2, 0x9, 0x2f]);
enum MAX_IO_HANDLES = 0x00000010;
enum MAX_RESERVED = 0x00000004;
enum MAX_ANSI_CHAR = 0x000000ff;
enum BUS_TYPE_SCSI = 0x000000c8;
enum BUS_TYPE_USB = 0x000000c9;
enum BUS_TYPE_PARALLEL = 0x000000ca;
enum BUS_TYPE_FIREWIRE = 0x000000cb;
enum SCAN_FIRST = 0x0000000a;
enum SCAN_NEXT = 0x00000014;
enum SCAN_FINISHED = 0x0000001e;
enum SCANMODE_FINALSCAN = 0x00000000;
enum SCANMODE_PREVIEWSCAN = 0x00000001;
enum CMD_INITIALIZE = 0x00000064;
enum CMD_UNINITIALIZE = 0x00000065;
enum CMD_SETXRESOLUTION = 0x00000066;
enum CMD_SETYRESOLUTION = 0x00000067;
enum CMD_SETCONTRAST = 0x00000068;
enum CMD_SETINTENSITY = 0x00000069;
enum CMD_SETDATATYPE = 0x0000006a;
enum CMD_SETDITHER = 0x0000006b;
enum CMD_SETMIRROR = 0x0000006c;
enum CMD_SETNEGATIVE = 0x0000006d;
enum CMD_SETTONEMAP = 0x0000006e;
enum CMD_SETCOLORDITHER = 0x0000006f;
enum CMD_SETMATRIX = 0x00000070;
enum CMD_SETSPEED = 0x00000071;
enum CMD_SETFILTER = 0x00000072;
enum CMD_LOAD_ADF = 0x00000073;
enum CMD_UNLOAD_ADF = 0x00000074;
enum CMD_GETADFAVAILABLE = 0x00000075;
enum CMD_GETADFOPEN = 0x00000076;
enum CMD_GETADFREADY = 0x00000077;
enum CMD_GETADFHASPAPER = 0x00000078;
enum CMD_GETADFSTATUS = 0x00000079;
enum CMD_GETADFUNLOADREADY = 0x0000007a;
enum CMD_GETTPAAVAILABLE = 0x0000007b;
enum CMD_GETTPAOPENED = 0x0000007c;
enum CMD_TPAREADY = 0x0000007d;
enum CMD_SETLAMP = 0x0000007e;
enum CMD_SENDSCSICOMMAND = 0x0000007f;
enum CMD_STI_DEVICERESET = 0x00000080;
enum CMD_STI_GETSTATUS = 0x00000081;
enum CMD_STI_DIAGNOSTIC = 0x00000082;
enum CMD_RESETSCANNER = 0x00000083;
enum CMD_GETCAPABILITIES = 0x00000084;
enum CMD_GET_INTERRUPT_EVENT = 0x00000085;
enum CMD_SETGSDNAME = 0x00000086;
enum CMD_SETSCANMODE = 0x00000087;
enum CMD_SETSTIDEVICEHKEY = 0x00000088;
enum CMD_GETSUPPORTEDFILEFORMATS = 0x0000008a;
enum CMD_GETSUPPORTEDMEMORYFORMATS = 0x0000008b;
enum CMD_SETFORMAT = 0x0000008c;
enum SUPPORT_COLOR = 0x00000001;
enum SUPPORT_BW = 0x00000002;
enum SUPPORT_GRAYSCALE = 0x00000004;
enum MCRO_ERROR_GENERAL_ERROR = 0x00000000;
enum MCRO_STATUS_OK = 0x00000001;
enum MCRO_ERROR_PAPER_JAM = 0x00000002;
enum MCRO_ERROR_PAPER_PROBLEM = 0x00000003;
enum MCRO_ERROR_PAPER_EMPTY = 0x00000004;
enum MCRO_ERROR_OFFLINE = 0x00000005;
enum MCRO_ERROR_USER_INTERVENTION = 0x00000006;
enum WIA_ORDER_RGB = 0x00000000;
enum WIA_ORDER_BGR = 0x00000001;
enum WiaItemTypeTwainCapabilityPassThrough = 0x00020000;
enum ESC_TWAIN_CAPABILITY = 0x000007d1;
enum ESC_TWAIN_PRIVATE_SUPPORTED_CAPS = 0x000007d2;
enum WIAU_DEBUG_TSTR = "S";
enum g_dwDebugFlags = 0x00000000;
enum WIA_WSD_MANUFACTURER = 0x00009802;
enum WIA_WSD_MANUFACTURER_STR = "Device manufacturer";
enum WIA_WSD_MANUFACTURER_URL = 0x00009803;
enum WIA_WSD_MANUFACTURER_URL_STR = "Manufacurer URL";
enum WIA_WSD_MODEL_NAME = 0x00009804;
enum WIA_WSD_MODEL_NAME_STR = "Model name";
enum WIA_WSD_MODEL_NUMBER = 0x00009805;
enum WIA_WSD_MODEL_NUMBER_STR = "Model number";
enum WIA_WSD_MODEL_URL = 0x00009806;
enum WIA_WSD_MODEL_URL_STR = "Model URL";
enum WIA_WSD_PRESENTATION_URL = 0x00009807;
enum WIA_WSD_PRESENTATION_URL_STR = "Presentation URL";
enum WIA_WSD_FRIENDLY_NAME = 0x00009808;
enum WIA_WSD_FRIENDLY_NAME_STR = "Friendly name";
enum WIA_WSD_SERIAL_NUMBER = 0x00009809;
enum WIA_WSD_SERIAL_NUMBER_STR = "Serial number";
enum WIA_WSD_SCAN_AVAILABLE_ITEM = 0x0000980a;
enum WIA_WSD_SCAN_AVAILABLE_ITEM_STR = "Scan Available Item";
struct WIA_DITHER_PATTERN_DATA
{
    int lSize;
    BSTR bstrPatternName;
    int lPatternWidth;
    int lPatternLength;
    int cbPattern;
    ubyte* pbPattern;
}
struct WIA_PROPID_TO_NAME
{
    uint propid;
    PWSTR pszName;
}
struct WIA_FORMAT_INFO
{
    GUID guidFormatID;
    int lTymed;
}
struct WIA_RAW_HEADER
{
    uint Tag;
    uint Version;
    uint HeaderSize;
    uint XRes;
    uint YRes;
    uint XExtent;
    uint YExtent;
    uint BytesPerLine;
    uint BitsPerPixel;
    uint ChannelsPerPixel;
    uint DataType;
    ubyte[8] BitsPerChannel;
    uint Compression;
    uint PhotometricInterp;
    uint LineOrder;
    uint RawDataOffset;
    uint RawDataSize;
    uint PaletteOffset;
    uint PaletteSize;
}
struct WIA_BARCODE_INFO
{
    uint Size;
    uint Type;
    uint Page;
    uint Confidence;
    uint XOffset;
    uint YOffset;
    uint Rotation;
    uint Length;
    wchar[1] Text;
}
struct WIA_BARCODES
{
    uint Tag;
    uint Version;
    uint Size;
    uint Count;
    WIA_BARCODE_INFO[1] Barcodes;
}
struct WIA_PATCH_CODE_INFO
{
    uint Type;
}
struct WIA_PATCH_CODES
{
    uint Tag;
    uint Version;
    uint Size;
    uint Count;
    WIA_PATCH_CODE_INFO[1] PatchCodes;
}
struct WIA_MICR_INFO
{
    uint Size;
    uint Page;
    uint Length;
    wchar[1] Text;
}
struct WIA_MICR
{
    uint Tag;
    uint Version;
    uint Size;
    wchar Placeholder;
    ushort Reserved;
    uint Count;
    WIA_MICR_INFO[1] Micr;
}
enum IID_IWiaDevMgr = GUID(0x5eb2502a, 0x8cf1, 0x11d1, [0xbf, 0x92, 0x0, 0x60, 0x8, 0x1e, 0xd8, 0x11]);
interface IWiaDevMgr : IUnknown
{
    HRESULT EnumDeviceInfo(int, IEnumWIA_DEV_INFO*);
    HRESULT CreateDevice(BSTR, IWiaItem*);
    HRESULT SelectDeviceDlg(HWND, int, int, BSTR*, IWiaItem*);
    HRESULT SelectDeviceDlgID(HWND, int, int, BSTR*);
    HRESULT GetImageDlg(HWND, int, int, int, IWiaItem, BSTR, GUID*);
    HRESULT RegisterEventCallbackProgram(int, BSTR, const(GUID)*, BSTR, BSTR, BSTR, BSTR);
    HRESULT RegisterEventCallbackInterface(int, BSTR, const(GUID)*, IWiaEventCallback, IUnknown*);
    HRESULT RegisterEventCallbackCLSID(int, BSTR, const(GUID)*, const(GUID)*, BSTR, BSTR, BSTR);
    HRESULT AddDeviceDlg(HWND, int);
}
enum IID_IEnumWIA_DEV_INFO = GUID(0x5e38b83c, 0x8cf1, 0x11d1, [0xbf, 0x92, 0x0, 0x60, 0x8, 0x1e, 0xd8, 0x11]);
interface IEnumWIA_DEV_INFO : IUnknown
{
    HRESULT Next(uint, IWiaPropertyStorage*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumWIA_DEV_INFO*);
    HRESULT GetCount(uint*);
}
enum IID_IWiaEventCallback = GUID(0xae6287b0, 0x84, 0x11d2, [0x97, 0x3b, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0x2e]);
interface IWiaEventCallback : IUnknown
{
    HRESULT ImageEventCallback(const(GUID)*, BSTR, BSTR, BSTR, uint, BSTR, uint*, uint);
}
struct WIA_DATA_CALLBACK_HEADER
{
    int lSize;
    GUID guidFormatID;
    int lBufferSize;
    int lPageCount;
}
enum IID_IWiaDataCallback = GUID(0xa558a866, 0xa5b0, 0x11d2, [0xa0, 0x8f, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
interface IWiaDataCallback : IUnknown
{
    HRESULT BandedDataCallback(int, int, int, int, int, int, int, ubyte*);
}
struct WIA_DATA_TRANSFER_INFO
{
    uint ulSize;
    uint ulSection;
    uint ulBufferSize;
    BOOL bDoubleBuffer;
    uint ulReserved1;
    uint ulReserved2;
    uint ulReserved3;
}
struct WIA_EXTENDED_TRANSFER_INFO
{
    uint ulSize;
    uint ulMinBufferSize;
    uint ulOptimalBufferSize;
    uint ulMaxBufferSize;
    uint ulNumBuffers;
}
enum IID_IWiaDataTransfer = GUID(0xa6cef998, 0xa5b0, 0x11d2, [0xa0, 0x8f, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
interface IWiaDataTransfer : IUnknown
{
    HRESULT idtGetData(STGMEDIUM*, IWiaDataCallback);
    HRESULT idtGetBandedData(WIA_DATA_TRANSFER_INFO*, IWiaDataCallback);
    HRESULT idtQueryGetData(WIA_FORMAT_INFO*);
    HRESULT idtEnumWIA_FORMAT_INFO(IEnumWIA_FORMAT_INFO*);
    HRESULT idtGetExtendedTransferInfo(WIA_EXTENDED_TRANSFER_INFO*);
}
enum IID_IWiaItem = GUID(0x4db1ad10, 0x3391, 0x11d2, [0x9a, 0x33, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
interface IWiaItem : IUnknown
{
    HRESULT GetItemType(int*);
    HRESULT AnalyzeItem(int);
    HRESULT EnumChildItems(IEnumWiaItem*);
    HRESULT DeleteItem(int);
    HRESULT CreateChildItem(int, BSTR, BSTR, IWiaItem*);
    HRESULT EnumRegisterEventInfo(int, const(GUID)*, IEnumWIA_DEV_CAPS*);
    HRESULT FindItemByName(int, BSTR, IWiaItem*);
    HRESULT DeviceDlg(HWND, int, int, int*, IWiaItem**);
    HRESULT DeviceCommand(int, const(GUID)*, IWiaItem*);
    HRESULT GetRootItem(IWiaItem*);
    HRESULT EnumDeviceCapabilities(int, IEnumWIA_DEV_CAPS*);
    HRESULT DumpItemData(BSTR*);
    HRESULT DumpDrvItemData(BSTR*);
    HRESULT DumpTreeItemData(BSTR*);
    HRESULT Diagnostic(uint, ubyte*);
}
enum IID_IWiaPropertyStorage = GUID(0x98b5e8a0, 0x29cc, 0x491a, [0xaa, 0xc0, 0xe6, 0xdb, 0x4f, 0xdc, 0xce, 0xb6]);
interface IWiaPropertyStorage : IUnknown
{
    HRESULT ReadMultiple(uint, const(PROPSPEC)*, PROPVARIANT*);
    HRESULT WriteMultiple(uint, const(PROPSPEC)*, const(PROPVARIANT)*, uint);
    HRESULT DeleteMultiple(uint, const(PROPSPEC)*);
    HRESULT ReadPropertyNames(uint, const(uint)*, PWSTR*);
    HRESULT WritePropertyNames(uint, const(uint)*, const(wchar)**);
    HRESULT DeletePropertyNames(uint, const(uint)*);
    HRESULT Commit(uint);
    HRESULT Revert();
    HRESULT Enum(IEnumSTATPROPSTG*);
    HRESULT SetTimes(const(FILETIME)*, const(FILETIME)*, const(FILETIME)*);
    HRESULT SetClass(const(GUID)*);
    HRESULT Stat(STATPROPSETSTG*);
    HRESULT GetPropertyAttributes(uint, PROPSPEC*, uint*, PROPVARIANT*);
    HRESULT GetCount(uint*);
    HRESULT GetPropertyStream(GUID*, IStream*);
    HRESULT SetPropertyStream(GUID*, IStream);
}
enum IID_IEnumWiaItem = GUID(0x5e8383fc, 0x3391, 0x11d2, [0x9a, 0x33, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
interface IEnumWiaItem : IUnknown
{
    HRESULT Next(uint, IWiaItem*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumWiaItem*);
    HRESULT GetCount(uint*);
}
struct WIA_DEV_CAP
{
    GUID guid;
    uint ulFlags;
    BSTR bstrName;
    BSTR bstrDescription;
    BSTR bstrIcon;
    BSTR bstrCommandline;
}
enum IID_IEnumWIA_DEV_CAPS = GUID(0x1fcc4287, 0xaca6, 0x11d2, [0xa0, 0x93, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
interface IEnumWIA_DEV_CAPS : IUnknown
{
    HRESULT Next(uint, WIA_DEV_CAP*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumWIA_DEV_CAPS*);
    HRESULT GetCount(uint*);
}
enum IID_IEnumWIA_FORMAT_INFO = GUID(0x81befc5b, 0x656d, 0x44f1, [0xb2, 0x4c, 0xd4, 0x1d, 0x51, 0xb4, 0xdc, 0x81]);
interface IEnumWIA_FORMAT_INFO : IUnknown
{
    HRESULT Next(uint, WIA_FORMAT_INFO*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumWIA_FORMAT_INFO*);
    HRESULT GetCount(uint*);
}
enum IID_IWiaLog = GUID(0xa00c10b6, 0x82a1, 0x452f, [0x8b, 0x6c, 0x86, 0x6, 0x2a, 0xad, 0x68, 0x90]);
interface IWiaLog : IUnknown
{
    HRESULT InitializeLog(int);
    HRESULT hResult(HRESULT);
    HRESULT Log(int, int, int, BSTR);
}
enum IID_IWiaLogEx = GUID(0xaf1f22ac, 0x7a40, 0x4787, [0xb4, 0x21, 0xae, 0xb4, 0x7a, 0x1f, 0xbd, 0xb]);
interface IWiaLogEx : IUnknown
{
    HRESULT InitializeLogEx(ubyte*);
    HRESULT hResult(HRESULT);
    HRESULT Log(int, int, int, BSTR);
    HRESULT hResultEx(int, HRESULT);
    HRESULT LogEx(int, int, int, int, BSTR);
}
enum IID_IWiaNotifyDevMgr = GUID(0x70681ea0, 0xe7bf, 0x4291, [0x9f, 0xb1, 0x4e, 0x88, 0x13, 0xa3, 0xf7, 0x8e]);
interface IWiaNotifyDevMgr : IUnknown
{
    HRESULT NewDeviceArrival();
}
enum IID_IWiaItemExtras = GUID(0x6291ef2c, 0x36ef, 0x4532, [0x87, 0x6a, 0x8e, 0x13, 0x25, 0x93, 0x77, 0x8d]);
interface IWiaItemExtras : IUnknown
{
    HRESULT GetExtendedErrorInfo(BSTR*);
    HRESULT Escape(uint, ubyte*, uint, ubyte*, uint, uint*);
    HRESULT CancelPendingIO();
}
enum IID_IWiaAppErrorHandler = GUID(0x6c16186c, 0xd0a6, 0x400c, [0x80, 0xf4, 0xd2, 0x69, 0x86, 0xa0, 0xe7, 0x34]);
interface IWiaAppErrorHandler : IUnknown
{
    HRESULT GetWindow(HWND*);
    HRESULT ReportStatus(int, IWiaItem2, HRESULT, int);
}
enum IID_IWiaErrorHandler = GUID(0xe4a51b1, 0xbc1f, 0x443d, [0xa8, 0x35, 0x72, 0xe8, 0x90, 0x75, 0x9e, 0xf3]);
interface IWiaErrorHandler : IUnknown
{
    HRESULT ReportStatus(int, HWND, IWiaItem2, HRESULT, int);
    HRESULT GetStatusDescription(int, IWiaItem2, HRESULT, BSTR*);
}
enum IID_IWiaTransfer = GUID(0xc39d6942, 0x2f4e, 0x4d04, [0x92, 0xfe, 0x4e, 0xf4, 0xd3, 0xa1, 0xde, 0x5a]);
interface IWiaTransfer : IUnknown
{
    HRESULT Download(int, IWiaTransferCallback);
    HRESULT Upload(int, IStream, IWiaTransferCallback);
    HRESULT Cancel();
    HRESULT EnumWIA_FORMAT_INFO(IEnumWIA_FORMAT_INFO*);
}
struct WiaTransferParams
{
    int lMessage;
    int lPercentComplete;
    ulong ulTransferredBytes;
    HRESULT hrErrorStatus;
}
enum IID_IWiaTransferCallback = GUID(0x27d4eaaf, 0x28a6, 0x4ca5, [0x9a, 0xab, 0xe6, 0x78, 0x16, 0x8b, 0x95, 0x27]);
interface IWiaTransferCallback : IUnknown
{
    HRESULT TransferCallback(int, WiaTransferParams*);
    HRESULT GetNextStream(int, BSTR, BSTR, IStream*);
}
enum IID_IWiaSegmentationFilter = GUID(0xec46a697, 0xac04, 0x4447, [0x8f, 0x65, 0xff, 0x63, 0xd5, 0x15, 0x4b, 0x21]);
interface IWiaSegmentationFilter : IUnknown
{
    HRESULT DetectRegions(int, IStream, IWiaItem2);
}
enum IID_IWiaImageFilter = GUID(0xa8a79ffa, 0x450b, 0x41f1, [0x8f, 0x87, 0x84, 0x9c, 0xcd, 0x94, 0xeb, 0xf6]);
interface IWiaImageFilter : IUnknown
{
    HRESULT InitializeFilter(IWiaItem2, IWiaTransferCallback);
    HRESULT SetNewCallback(IWiaTransferCallback);
    HRESULT FilterPreviewImage(int, IWiaItem2, RECT, IStream);
    HRESULT ApplyProperties(IWiaPropertyStorage);
}
enum IID_IWiaPreview = GUID(0x95c2b4fd, 0x33f2, 0x4d86, [0xad, 0x40, 0x94, 0x31, 0xf0, 0xdf, 0x8, 0xf7]);
interface IWiaPreview : IUnknown
{
    HRESULT GetNewPreview(int, IWiaItem2, IWiaTransferCallback);
    HRESULT UpdatePreview(int, IWiaItem2, IWiaTransferCallback);
    HRESULT DetectRegions(int);
    HRESULT Clear();
}
enum IID_IEnumWiaItem2 = GUID(0x59970af4, 0xcd0d, 0x44d9, [0xab, 0x24, 0x52, 0x29, 0x56, 0x30, 0xe5, 0x82]);
interface IEnumWiaItem2 : IUnknown
{
    HRESULT Next(uint, IWiaItem2*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumWiaItem2*);
    HRESULT GetCount(uint*);
}
enum IID_IWiaItem2 = GUID(0x6cba0075, 0x1287, 0x407d, [0x9b, 0x77, 0xcf, 0xe, 0x3, 0x4, 0x35, 0xcc]);
interface IWiaItem2 : IUnknown
{
    HRESULT CreateChildItem(int, int, BSTR, IWiaItem2*);
    HRESULT DeleteItem(int);
    HRESULT EnumChildItems(const(GUID)*, IEnumWiaItem2*);
    HRESULT FindItemByName(int, BSTR, IWiaItem2*);
    HRESULT GetItemCategory(GUID*);
    HRESULT GetItemType(int*);
    HRESULT DeviceDlg(int, HWND, BSTR, BSTR, int*, BSTR**, IWiaItem2*);
    HRESULT DeviceCommand(int, const(GUID)*, IWiaItem2*);
    HRESULT EnumDeviceCapabilities(int, IEnumWIA_DEV_CAPS*);
    HRESULT CheckExtension(int, BSTR, const(GUID)*, BOOL*);
    HRESULT GetExtension(int, BSTR, const(GUID)*, void**);
    HRESULT GetParentItem(IWiaItem2*);
    HRESULT GetRootItem(IWiaItem2*);
    HRESULT GetPreviewComponent(int, IWiaPreview*);
    HRESULT EnumRegisterEventInfo(int, const(GUID)*, IEnumWIA_DEV_CAPS*);
    HRESULT Diagnostic(uint, ubyte*);
}
enum IID_IWiaDevMgr2 = GUID(0x79c07cf1, 0xcbdd, 0x41ee, [0x8e, 0xc3, 0xf0, 0x0, 0x80, 0xca, 0xda, 0x7a]);
interface IWiaDevMgr2 : IUnknown
{
    HRESULT EnumDeviceInfo(int, IEnumWIA_DEV_INFO*);
    HRESULT CreateDevice(int, BSTR, IWiaItem2*);
    HRESULT SelectDeviceDlg(HWND, int, int, BSTR*, IWiaItem2*);
    HRESULT SelectDeviceDlgID(HWND, int, int, BSTR*);
    HRESULT RegisterEventCallbackInterface(int, BSTR, const(GUID)*, IWiaEventCallback, IUnknown*);
    HRESULT RegisterEventCallbackProgram(int, BSTR, const(GUID)*, BSTR, BSTR, BSTR, BSTR, BSTR);
    HRESULT RegisterEventCallbackCLSID(int, BSTR, const(GUID)*, const(GUID)*, BSTR, BSTR, BSTR);
    HRESULT GetImageDlg(int, BSTR, HWND, BSTR, BSTR, int*, BSTR**, IWiaItem2*);
}
enum CLSID_WiaDevMgr = GUID(0xa1f4e726, 0x8cf1, 0x11d1, [0xbf, 0x92, 0x0, 0x60, 0x8, 0x1e, 0xd8, 0x11]);
struct WiaDevMgr
{
}
enum CLSID_WiaDevMgr2 = GUID(0xb6c292bc, 0x7c88, 0x41ee, [0x8b, 0x54, 0x8e, 0xc9, 0x26, 0x17, 0xe5, 0x99]);
struct WiaDevMgr2
{
}
enum CLSID_WiaLog = GUID(0xa1e75357, 0x881a, 0x419e, [0x83, 0xe2, 0xbb, 0x16, 0xdb, 0x19, 0x7c, 0x68]);
struct WiaLog
{
}
struct MINIDRV_TRANSFER_CONTEXT
{
    int lSize;
    int lWidthInPixels;
    int lLines;
    int lDepth;
    int lXRes;
    int lYRes;
    int lCompression;
    GUID guidFormatID;
    int tymed;
    long hFile;
    int cbOffset;
    int lBufferSize;
    int lActiveBuffer;
    int lNumBuffers;
    ubyte* pBaseBuffer;
    ubyte* pTransferBuffer;
    BOOL bTransferDataCB;
    BOOL bClassDrvAllocBuf;
    long lClientAddress;
    IWiaMiniDrvCallBack pIWiaMiniDrvCallBack;
    int lImageSize;
    int lHeaderSize;
    int lItemSize;
    int cbWidthInBytes;
    int lPage;
    int lCurIfdOffset;
    int lPrevIfdOffset;
}
struct WIA_DEV_CAP_DRV
{
    GUID* guid;
    uint ulFlags;
    PWSTR wszName;
    PWSTR wszDescription;
    PWSTR wszIcon;
}
enum IID_IWiaMiniDrv = GUID(0xd8cdee14, 0x3c6c, 0x11d2, [0x9a, 0x35, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
interface IWiaMiniDrv : IUnknown
{
    HRESULT drvInitializeWia(ubyte*, int, BSTR, BSTR, IUnknown, IUnknown, IWiaDrvItem*, IUnknown*, int*);
    HRESULT drvAcquireItemData(ubyte*, int, MINIDRV_TRANSFER_CONTEXT*, int*);
    HRESULT drvInitItemProperties(ubyte*, int, int*);
    HRESULT drvValidateItemProperties(ubyte*, int, uint, const(PROPSPEC)*, int*);
    HRESULT drvWriteItemProperties(ubyte*, int, MINIDRV_TRANSFER_CONTEXT*, int*);
    HRESULT drvReadItemProperties(ubyte*, int, uint, const(PROPSPEC)*, int*);
    HRESULT drvLockWiaDevice(ubyte*, int, int*);
    HRESULT drvUnLockWiaDevice(ubyte*, int, int*);
    HRESULT drvAnalyzeItem(ubyte*, int, int*);
    HRESULT drvGetDeviceErrorStr(int, int, PWSTR*, int*);
    HRESULT drvDeviceCommand(ubyte*, int, const(GUID)*, IWiaDrvItem*, int*);
    HRESULT drvGetCapabilities(ubyte*, int, int*, WIA_DEV_CAP_DRV**, int*);
    HRESULT drvDeleteItem(ubyte*, int, int*);
    HRESULT drvFreeDrvItemContext(int, ubyte*, int*);
    HRESULT drvGetWiaFormatInfo(ubyte*, int, int*, WIA_FORMAT_INFO**, int*);
    HRESULT drvNotifyPnpEvent(const(GUID)*, BSTR, uint);
    HRESULT drvUnInitializeWia(ubyte*);
}
enum IID_IWiaMiniDrvCallBack = GUID(0x33a57d5a, 0x3de8, 0x11d2, [0x9a, 0x36, 0x0, 0xc0, 0x4f, 0xa3, 0x61, 0x45]);
interface IWiaMiniDrvCallBack : IUnknown
{
    HRESULT MiniDrvCallback(int, int, int, int, int, MINIDRV_TRANSFER_CONTEXT*, int);
}
enum IID_IWiaMiniDrvTransferCallback = GUID(0xa9d2ee89, 0x2ce5, 0x4ff0, [0x8a, 0xdb, 0xc9, 0x61, 0xd1, 0xd7, 0x74, 0xca]);
interface IWiaMiniDrvTransferCallback : IUnknown
{
    HRESULT GetNextStream(int, BSTR, BSTR, IStream*);
    HRESULT SendMessage(int, WiaTransferParams*);
}
enum IID_IWiaDrvItem = GUID(0x1f02b5c5, 0xb00c, 0x11d2, [0xa0, 0x94, 0x0, 0xc0, 0x4f, 0x72, 0xdc, 0x3c]);
interface IWiaDrvItem : IUnknown
{
    HRESULT GetItemFlags(int*);
    HRESULT GetDeviceSpecContext(ubyte**);
    HRESULT GetFullItemName(BSTR*);
    HRESULT GetItemName(BSTR*);
    HRESULT AddItemToFolder(IWiaDrvItem);
    HRESULT UnlinkItemTree(int);
    HRESULT RemoveItemFromFolder(int);
    HRESULT FindItemByName(int, BSTR, IWiaDrvItem*);
    HRESULT FindChildItemByName(BSTR, IWiaDrvItem*);
    HRESULT GetParentItem(IWiaDrvItem*);
    HRESULT GetFirstChildItem(IWiaDrvItem*);
    HRESULT GetNextSiblingItem(IWiaDrvItem*);
    HRESULT DumpItemData(BSTR*);
}
struct WIA_PROPERTY_INFO
{
    uint lAccessFlags;
    VARENUM vt;
    union _ValidVal_e__Union
    {
        struct _Range_e__Struct
        {
            int Min;
            int Nom;
            int Max;
            int Inc;
        }
        struct _RangeFloat_e__Struct
        {
            double Min;
            double Nom;
            double Max;
            double Inc;
        }
        struct _List_e__Struct
        {
            int cNumList;
            int Nom;
            ubyte* pList;
        }
        struct _ListFloat_e__Struct
        {
            int cNumList;
            double Nom;
            ubyte* pList;
        }
        struct _ListGuid_e__Struct
        {
            int cNumList;
            GUID Nom;
            GUID* pList;
        }
        struct _ListBStr_e__Struct
        {
            int cNumList;
            BSTR Nom;
            BSTR* pList;
        }
        struct _Flag_e__Struct
        {
            int Nom;
            int ValidBits;
        }
        struct _None_e__Struct
        {
            int Dummy;
        }
    }
}
struct WIA_PROPERTY_CONTEXT
{
    uint cProps;
    uint* pProps;
    BOOL* pChanged;
}
struct WIAS_CHANGED_VALUE_INFO
{
    BOOL bChanged;
    int vt;
    union _Old_e__Union
    {
        int lVal;
        float fltVal;
        BSTR bstrVal;
        GUID guidVal;
    }
    union _Current_e__Union
    {
        int lVal;
        float fltVal;
        BSTR bstrVal;
        GUID guidVal;
    }
}
struct WIAS_DOWN_SAMPLE_INFO
{
    uint ulOriginalWidth;
    uint ulOriginalHeight;
    uint ulBitsPerPixel;
    uint ulXRes;
    uint ulYRes;
    uint ulDownSampledWidth;
    uint ulDownSampledHeight;
    uint ulActualSize;
    uint ulDestBufSize;
    uint ulSrcBufSize;
    ubyte* pSrcBuffer;
    ubyte* pDestBuffer;
}
struct WIAS_ENDORSER_VALUE
{
    PWSTR wszTokenName;
    PWSTR wszValue;
}
struct WIAS_ENDORSER_INFO
{
    uint ulPageCount;
    uint ulNumEndorserValues;
    WIAS_ENDORSER_VALUE* pEndorserValues;
}
alias WIAVIDEO_STATE = int;
enum : int
{
    WIAVIDEO_NO_VIDEO         = 0x00000001,
    WIAVIDEO_CREATING_VIDEO   = 0x00000002,
    WIAVIDEO_VIDEO_CREATED    = 0x00000003,
    WIAVIDEO_VIDEO_PLAYING    = 0x00000004,
    WIAVIDEO_VIDEO_PAUSED     = 0x00000005,
    WIAVIDEO_DESTROYING_VIDEO = 0x00000006,
}

enum IID_IWiaVideo = GUID(0xd52920aa, 0xdb88, 0x41f0, [0x94, 0x6c, 0xe0, 0xd, 0xc0, 0xa1, 0x9c, 0xfa]);
interface IWiaVideo : IUnknown
{
    HRESULT get_PreviewVisible(BOOL*);
    HRESULT put_PreviewVisible(BOOL);
    HRESULT get_ImagesDirectory(BSTR*);
    HRESULT put_ImagesDirectory(BSTR);
    HRESULT CreateVideoByWiaDevID(BSTR, HWND, BOOL, BOOL);
    HRESULT CreateVideoByDevNum(uint, HWND, BOOL, BOOL);
    HRESULT CreateVideoByName(BSTR, HWND, BOOL, BOOL);
    HRESULT DestroyVideo();
    HRESULT Play();
    HRESULT Pause();
    HRESULT TakePicture(BSTR*);
    HRESULT ResizeVideo(BOOL);
    HRESULT GetCurrentState(WIAVIDEO_STATE*);
}
enum CLSID_WiaVideo = GUID(0x3908c3cd, 0x4478, 0x4536, [0xaf, 0x2f, 0x10, 0xc2, 0x5d, 0x4e, 0xf8, 0x9a]);
struct WiaVideo
{
}
struct DEVICEDIALOGDATA2
{
    uint cbSize;
    IWiaItem2 pIWiaItemRoot;
    uint dwFlags;
    HWND hwndParent;
    BSTR bstrFolderName;
    BSTR bstrFilename;
    int lNumFiles;
    BSTR* pbstrFilePaths;
    IWiaItem2 pWiaItem;
}
enum IID_IWiaUIExtension2 = GUID(0x305600d7, 0x5088, 0x46d7, [0x9a, 0x15, 0xb7, 0x7b, 0x9, 0xcd, 0xba, 0x7a]);
interface IWiaUIExtension2 : IUnknown
{
    HRESULT DeviceDialog(DEVICEDIALOGDATA2*);
    HRESULT GetDeviceIcon(BSTR, HICON*, uint);
}
struct DEVICEDIALOGDATA
{
    uint cbSize;
    HWND hwndParent;
    IWiaItem pIWiaItemRoot;
    uint dwFlags;
    int lIntent;
    int lItemCount;
    IWiaItem* ppWiaItems;
}
enum IID_IWiaUIExtension = GUID(0xda319113, 0x50ee, 0x4c80, [0xb4, 0x60, 0x57, 0xd0, 0x5, 0xd4, 0x4a, 0x2c]);
interface IWiaUIExtension : IUnknown
{
    HRESULT DeviceDialog(DEVICEDIALOGDATA*);
    HRESULT GetDeviceIcon(BSTR, HICON*, uint);
    HRESULT GetDeviceBitmapLogo(BSTR, HBITMAP*, uint, uint);
}
alias DeviceDialogFunction = HRESULT function(DEVICEDIALOGDATA*);
struct RANGEVALUE
{
    int lMin;
    int lMax;
    int lStep;
}
struct SCANWINDOW
{
    int xPos;
    int yPos;
    int xExtent;
    int yExtent;
}
struct SCANINFO
{
    int ADF;
    int TPA;
    int Endorser;
    int OpticalXResolution;
    int OpticalYResolution;
    int BedWidth;
    int BedHeight;
    RANGEVALUE IntensityRange;
    RANGEVALUE ContrastRange;
    int SupportedCompressionType;
    int SupportedDataTypes;
    int WidthPixels;
    int WidthBytes;
    int Lines;
    int DataType;
    int PixelBits;
    int Intensity;
    int Contrast;
    int Xresolution;
    int Yresolution;
    SCANWINDOW Window;
    int DitherPattern;
    int Negative;
    int Mirror;
    int AutoBack;
    int ColorDitherPattern;
    int ToneMap;
    int Compression;
    int RawDataFormat;
    int RawPixelOrder;
    int bNeedDataAlignment;
    int DelayBetweenRead;
    int MaxBufferSize;
    HANDLE[16] DeviceIOHandles;
    int[4] lReserved;
    void* pMicroDriverContext;
}
struct VAL
{
    int lVal;
    double dblVal;
    GUID* pGuid;
    SCANINFO* pScanInfo;
    HGLOBAL handle;
    ushort** ppButtonNames;
    HANDLE* pHandle;
    int lReserved;
    CHAR[255] szVal;
}
struct TWAIN_CAPABILITY
{
    int lSize;
    int lMSG;
    int lCapID;
    int lConType;
    int lRC;
    int lCC;
    int lDataSize;
    ubyte[1] Data;
}
