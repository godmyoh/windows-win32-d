module windows.win32.devices.portabledevices;

import windows.win32.guid : GUID;
import windows.win32.devices.properties : DEVPROPKEY, DEVPROPTYPE;
import windows.win32.foundation : BOOL, BSTR, HRESULT, PWSTR;
import windows.win32.system.com : IDispatch, IStream, IUnknown;
import windows.win32.system.com.structuredstorage : PROPVARIANT;
import windows.win32.ui.shell.propertiessystem : IPropertyStore, PROPERTYKEY;

version (Windows):
extern (Windows):

HRESULT DMProcessConfigXMLFiltered(const(wchar)*, const(wchar)**, uint, BSTR*);
enum DEVPKEY_MTPBTH_IsConnected = DEVPROPKEY(GUID(3927062522, 22685, 17522, [132, 228, 10, 190, 54, 253, 98, 239]), 2);
enum GUID_DEVINTERFACE_WPD = GUID(0x6ac27878, 0xa6fa, 0x4155, [0xba, 0x85, 0xf9, 0x8f, 0x49, 0x1d, 0x4f, 0x33]);
enum GUID_DEVINTERFACE_WPD_PRIVATE = GUID(0xba0c718f, 0x4ded, 0x49b7, [0xbd, 0xd3, 0xfa, 0xbe, 0x28, 0x66, 0x12, 0x11]);
enum GUID_DEVINTERFACE_WPD_SERVICE = GUID(0x9ef44f80, 0x3d64, 0x4246, [0xa6, 0xaa, 0x20, 0x6f, 0x32, 0x8d, 0x1e, 0xdc]);
enum WPD_CONTROL_FUNCTION_GENERIC_MESSAGE = 0x00000042;
enum IOCTL_WPD_MESSAGE_READWRITE_ACCESS = 0x0040c108;
enum IOCTL_WPD_MESSAGE_READ_ACCESS = 0x00404108;
enum WPD_DEVICE_OBJECT_ID = "DEVICE";
enum PORTABLE_DEVICE_TYPE = "PortableDeviceType";
enum PORTABLE_DEVICE_ICON = "Icons";
enum PORTABLE_DEVICE_NAMESPACE_TIMEOUT = "PortableDeviceNameSpaceTimeout";
enum PORTABLE_DEVICE_NAMESPACE_EXCLUDE_FROM_SHELL = "PortableDeviceNameSpaceExcludeFromShell";
enum PORTABLE_DEVICE_NAMESPACE_THUMBNAIL_CONTENT_TYPES = "PortableDeviceNameSpaceThumbnailContentTypes";
enum PORTABLE_DEVICE_IS_MASS_STORAGE = "PortableDeviceIsMassStorage";
enum PORTABLE_DEVICE_DRM_SCHEME_WMDRM10_PD = "WMDRM10-PD";
enum PORTABLE_DEVICE_DRM_SCHEME_PDDRM = "PDDRM";
enum FACILITY_WPD = 0x0000002a;
enum E_WPD_DEVICE_ALREADY_OPENED = 0xffffffff802a0001;
enum E_WPD_DEVICE_NOT_OPEN = 0xffffffff802a0002;
enum E_WPD_OBJECT_ALREADY_ATTACHED_TO_DEVICE = 0xffffffff802a0003;
enum E_WPD_OBJECT_NOT_ATTACHED_TO_DEVICE = 0xffffffff802a0004;
enum E_WPD_OBJECT_NOT_COMMITED = 0xffffffff802a0005;
enum E_WPD_DEVICE_IS_HUNG = 0xffffffff802a0006;
enum E_WPD_SMS_INVALID_RECIPIENT = 0xffffffff802a0064;
enum E_WPD_SMS_INVALID_MESSAGE_BODY = 0xffffffff802a0065;
enum E_WPD_SMS_SERVICE_UNAVAILABLE = 0xffffffff802a0066;
enum E_WPD_SERVICE_ALREADY_OPENED = 0xffffffff802a00c8;
enum E_WPD_SERVICE_NOT_OPEN = 0xffffffff802a00c9;
enum E_WPD_OBJECT_ALREADY_ATTACHED_TO_SERVICE = 0xffffffff802a00ca;
enum E_WPD_OBJECT_NOT_ATTACHED_TO_SERVICE = 0xffffffff802a00cb;
enum E_WPD_SERVICE_BAD_PARAMETER_ORDER = 0xffffffff802a00cc;
enum WPD_EVENT_NOTIFICATION = GUID(0x2ba2e40a, 0x6b4c, 0x4295, [0xbb, 0x43, 0x26, 0x32, 0x2b, 0x99, 0xae, 0xb2]);
enum WPD_EVENT_OBJECT_ADDED = GUID(0xa726da95, 0xe207, 0x4b02, [0x8d, 0x44, 0xbe, 0xf2, 0xe8, 0x6c, 0xbf, 0xfc]);
enum WPD_EVENT_OBJECT_REMOVED = GUID(0xbe82ab88, 0xa52c, 0x4823, [0x96, 0xe5, 0xd0, 0x27, 0x26, 0x71, 0xfc, 0x38]);
enum WPD_EVENT_OBJECT_UPDATED = GUID(0x1445a759, 0x2e01, 0x485d, [0x9f, 0x27, 0xff, 0x7, 0xda, 0xe6, 0x97, 0xab]);
enum WPD_EVENT_DEVICE_RESET = GUID(0x7755cf53, 0xc1ed, 0x44f3, [0xb5, 0xa2, 0x45, 0x1e, 0x2c, 0x37, 0x6b, 0x27]);
enum WPD_EVENT_DEVICE_CAPABILITIES_UPDATED = GUID(0x36885aa1, 0xcd54, 0x4daa, [0xb3, 0xd0, 0xaf, 0xb3, 0xe0, 0x3f, 0x59, 0x99]);
enum WPD_EVENT_STORAGE_FORMAT = GUID(0x3782616b, 0x22bc, 0x4474, [0xa2, 0x51, 0x30, 0x70, 0xf8, 0xd3, 0x88, 0x57]);
enum WPD_EVENT_OBJECT_TRANSFER_REQUESTED = GUID(0x8d16a0a1, 0xf2c6, 0x41da, [0x8f, 0x19, 0x5e, 0x53, 0x72, 0x1a, 0xdb, 0xf2]);
enum WPD_EVENT_DEVICE_REMOVED = GUID(0xe4cbca1b, 0x6918, 0x48b9, [0x85, 0xee, 0x2, 0xbe, 0x7c, 0x85, 0xa, 0xf9]);
enum WPD_EVENT_SERVICE_METHOD_COMPLETE = GUID(0x8a33f5f8, 0xacc, 0x4d9b, [0x9c, 0xc4, 0x11, 0x2d, 0x35, 0x3b, 0x86, 0xca]);
enum WPD_CONTENT_TYPE_FUNCTIONAL_OBJECT = GUID(0x99ed0160, 0x17ff, 0x4c44, [0x9d, 0x98, 0x1d, 0x7a, 0x6f, 0x94, 0x19, 0x21]);
enum WPD_CONTENT_TYPE_FOLDER = GUID(0x27e2e392, 0xa111, 0x48e0, [0xab, 0xc, 0xe1, 0x77, 0x5, 0xa0, 0x5f, 0x85]);
enum WPD_CONTENT_TYPE_IMAGE = GUID(0xef2107d5, 0xa52a, 0x4243, [0xa2, 0x6b, 0x62, 0xd4, 0x17, 0x6d, 0x76, 0x3]);
enum WPD_CONTENT_TYPE_DOCUMENT = GUID(0x680adf52, 0x950a, 0x4041, [0x9b, 0x41, 0x65, 0xe3, 0x93, 0x64, 0x81, 0x55]);
enum WPD_CONTENT_TYPE_CONTACT = GUID(0xeaba8313, 0x4525, 0x4707, [0x9f, 0xe, 0x87, 0xc6, 0x80, 0x8e, 0x94, 0x35]);
enum WPD_CONTENT_TYPE_CONTACT_GROUP = GUID(0x346b8932, 0x4c36, 0x40d8, [0x94, 0x15, 0x18, 0x28, 0x29, 0x1f, 0x9d, 0xe9]);
enum WPD_CONTENT_TYPE_AUDIO = GUID(0x4ad2c85e, 0x5e2d, 0x45e5, [0x88, 0x64, 0x4f, 0x22, 0x9e, 0x3c, 0x6c, 0xf0]);
enum WPD_CONTENT_TYPE_VIDEO = GUID(0x9261b03c, 0x3d78, 0x4519, [0x85, 0xe3, 0x2, 0xc5, 0xe1, 0xf5, 0xb, 0xb9]);
enum WPD_CONTENT_TYPE_TELEVISION = GUID(0x60a169cf, 0xf2ae, 0x4e21, [0x93, 0x75, 0x96, 0x77, 0xf1, 0x1c, 0x1c, 0x6e]);
enum WPD_CONTENT_TYPE_PLAYLIST = GUID(0x1a33f7e4, 0xaf13, 0x48f5, [0x99, 0x4e, 0x77, 0x36, 0x9d, 0xfe, 0x4, 0xa3]);
enum WPD_CONTENT_TYPE_MIXED_CONTENT_ALBUM = GUID(0xf0c3ac, 0xa593, 0x49ac, [0x92, 0x19, 0x24, 0xab, 0xca, 0x5a, 0x25, 0x63]);
enum WPD_CONTENT_TYPE_AUDIO_ALBUM = GUID(0xaa18737e, 0x5009, 0x48fa, [0xae, 0x21, 0x85, 0xf2, 0x43, 0x83, 0xb4, 0xe6]);
enum WPD_CONTENT_TYPE_IMAGE_ALBUM = GUID(0x75793148, 0x15f5, 0x4a30, [0xa8, 0x13, 0x54, 0xed, 0x8a, 0x37, 0xe2, 0x26]);
enum WPD_CONTENT_TYPE_VIDEO_ALBUM = GUID(0x12b0db7, 0xd4c1, 0x45d6, [0xb0, 0x81, 0x94, 0xb8, 0x77, 0x79, 0x61, 0x4f]);
enum WPD_CONTENT_TYPE_MEMO = GUID(0x9cd20ecf, 0x3b50, 0x414f, [0xa6, 0x41, 0xe4, 0x73, 0xff, 0xe4, 0x57, 0x51]);
enum WPD_CONTENT_TYPE_EMAIL = GUID(0x8038044a, 0x7e51, 0x4f8f, [0x88, 0x3d, 0x1d, 0x6, 0x23, 0xd1, 0x45, 0x33]);
enum WPD_CONTENT_TYPE_APPOINTMENT = GUID(0xfed060e, 0x8793, 0x4b1e, [0x90, 0xc9, 0x48, 0xac, 0x38, 0x9a, 0xc6, 0x31]);
enum WPD_CONTENT_TYPE_TASK = GUID(0x63252f2c, 0x887f, 0x4cb6, [0xb1, 0xac, 0xd2, 0x98, 0x55, 0xdc, 0xef, 0x6c]);
enum WPD_CONTENT_TYPE_PROGRAM = GUID(0xd269f96a, 0x247c, 0x4bff, [0x98, 0xfb, 0x97, 0xf3, 0xc4, 0x92, 0x20, 0xe6]);
enum WPD_CONTENT_TYPE_GENERIC_FILE = GUID(0x85e0a6, 0x8d34, 0x45d7, [0xbc, 0x5c, 0x44, 0x7e, 0x59, 0xc7, 0x3d, 0x48]);
enum WPD_CONTENT_TYPE_CALENDAR = GUID(0xa1fd5967, 0x6023, 0x49a0, [0x9d, 0xf1, 0xf8, 0x6, 0xb, 0xe7, 0x51, 0xb0]);
enum WPD_CONTENT_TYPE_GENERIC_MESSAGE = GUID(0xe80eaaf8, 0xb2db, 0x4133, [0xb6, 0x7e, 0x1b, 0xef, 0x4b, 0x4a, 0x6e, 0x5f]);
enum WPD_CONTENT_TYPE_NETWORK_ASSOCIATION = GUID(0x31da7ee, 0x18c8, 0x4205, [0x84, 0x7e, 0x89, 0xa1, 0x12, 0x61, 0xd0, 0xf3]);
enum WPD_CONTENT_TYPE_CERTIFICATE = GUID(0xdc3876e8, 0xa948, 0x4060, [0x90, 0x50, 0xcb, 0xd7, 0x7e, 0x8a, 0x3d, 0x87]);
enum WPD_CONTENT_TYPE_WIRELESS_PROFILE = GUID(0xbac070a, 0x9f5f, 0x4da4, [0xa8, 0xf6, 0x3d, 0xe4, 0x4d, 0x68, 0xfd, 0x6c]);
enum WPD_CONTENT_TYPE_MEDIA_CAST = GUID(0x5e88b3cc, 0x3e65, 0x4e62, [0xbf, 0xff, 0x22, 0x94, 0x95, 0x25, 0x3a, 0xb0]);
enum WPD_CONTENT_TYPE_SECTION = GUID(0x821089f5, 0x1d91, 0x4dc9, [0xbe, 0x3c, 0xbb, 0xb1, 0xb3, 0x5b, 0x18, 0xce]);
enum WPD_CONTENT_TYPE_UNSPECIFIED = GUID(0x28d8d31e, 0x249c, 0x454e, [0xaa, 0xbc, 0x34, 0x88, 0x31, 0x68, 0xe6, 0x34]);
enum WPD_CONTENT_TYPE_ALL = GUID(0x80e170d2, 0x1055, 0x4a3e, [0xb9, 0x52, 0x82, 0xcc, 0x4f, 0x8a, 0x86, 0x89]);
enum WPD_FUNCTIONAL_CATEGORY_DEVICE = GUID(0x8ea466b, 0xe3a4, 0x4336, [0xa1, 0xf3, 0xa4, 0x4d, 0x2b, 0x5c, 0x43, 0x8c]);
enum WPD_FUNCTIONAL_CATEGORY_STORAGE = GUID(0x23f05bbc, 0x15de, 0x4c2a, [0xa5, 0x5b, 0xa9, 0xaf, 0x5c, 0xe4, 0x12, 0xef]);
enum WPD_FUNCTIONAL_CATEGORY_STILL_IMAGE_CAPTURE = GUID(0x613ca327, 0xab93, 0x4900, [0xb4, 0xfa, 0x89, 0x5b, 0xb5, 0x87, 0x4b, 0x79]);
enum WPD_FUNCTIONAL_CATEGORY_AUDIO_CAPTURE = GUID(0x3f2a1919, 0xc7c2, 0x4a00, [0x85, 0x5d, 0xf5, 0x7c, 0xf0, 0x6d, 0xeb, 0xbb]);
enum WPD_FUNCTIONAL_CATEGORY_VIDEO_CAPTURE = GUID(0xe23e5f6b, 0x7243, 0x43aa, [0x8d, 0xf1, 0xe, 0xb3, 0xd9, 0x68, 0xa9, 0x18]);
enum WPD_FUNCTIONAL_CATEGORY_SMS = GUID(0x44a0b1, 0xc1e9, 0x4afd, [0xb3, 0x58, 0xa6, 0x2c, 0x61, 0x17, 0xc9, 0xcf]);
enum WPD_FUNCTIONAL_CATEGORY_RENDERING_INFORMATION = GUID(0x8600ba4, 0xa7ba, 0x4a01, [0xab, 0xe, 0x0, 0x65, 0xd0, 0xa3, 0x56, 0xd3]);
enum WPD_FUNCTIONAL_CATEGORY_NETWORK_CONFIGURATION = GUID(0x48f4db72, 0x7c6a, 0x4ab0, [0x9e, 0x1a, 0x47, 0xe, 0x3c, 0xdb, 0xf2, 0x6a]);
enum WPD_FUNCTIONAL_CATEGORY_ALL = GUID(0x2d8a6512, 0xa74c, 0x448e, [0xba, 0x8a, 0xf4, 0xac, 0x7, 0xc4, 0x93, 0x99]);
enum WPD_OBJECT_FORMAT_ICON = GUID(0x77232ed, 0x102c, 0x4638, [0x9c, 0x22, 0x83, 0xf1, 0x42, 0xbf, 0xc8, 0x22]);
enum WPD_OBJECT_FORMAT_M4A = GUID(0x30aba7ac, 0x6ffd, 0x4c23, [0xa3, 0x59, 0x3e, 0x9b, 0x52, 0xf3, 0xf1, 0xc8]);
enum WPD_OBJECT_FORMAT_NETWORK_ASSOCIATION = GUID(0xb1020000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_X509V3CERTIFICATE = GUID(0xb1030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MICROSOFT_WFC = GUID(0xb1040000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_3GPA = GUID(0xe5172730, 0xf971, 0x41ef, [0xa1, 0xb, 0x22, 0x71, 0xa0, 0x1, 0x9d, 0x7a]);
enum WPD_OBJECT_FORMAT_3G2A = GUID(0x1a11202d, 0x8759, 0x4e34, [0xba, 0x5e, 0xb1, 0x21, 0x10, 0x87, 0xee, 0xe4]);
enum WPD_OBJECT_FORMAT_ALL = GUID(0xc1f62eb2, 0x4bb3, 0x479c, [0x9c, 0xfa, 0x5, 0xb5, 0xf3, 0xa5, 0x7b, 0x22]);
enum WPD_CATEGORY_NULL = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);
enum WPD_PROPERTY_NULL = PROPERTYKEY(GUID(0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0]), 0);
enum WPD_OBJECT_PROPERTIES_V1 = GUID(0xef6b490d, 0x5cd8, 0x437a, [0xaf, 0xfc, 0xda, 0x8b, 0x60, 0xee, 0x4a, 0x3c]);
enum WPD_OBJECT_CONTENT_TYPE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 7);
enum WPD_OBJECT_REFERENCES = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 14);
enum WPD_OBJECT_CONTAINER_FUNCTIONAL_OBJECT_ID = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 23);
enum WPD_OBJECT_GENERATE_THUMBNAIL_FROM_RESOURCE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 24);
enum WPD_OBJECT_HINT_LOCATION_DISPLAY_NAME = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 25);
enum WPD_OBJECT_PROPERTIES_V2 = GUID(0x373cd3d, 0x4a46, 0x40d7, [0xb4, 0xd8, 0x73, 0xe8, 0xda, 0x74, 0xe7, 0x75]);
enum WPD_OBJECT_SUPPORTED_UNITS = PROPERTYKEY(GUID(57920829, 19014, 16599, [180, 216, 115, 232, 218, 116, 231, 117]), 2);
enum WPD_FUNCTIONAL_OBJECT_PROPERTIES_V1 = GUID(0x8f052d93, 0xabca, 0x4fc5, [0xa5, 0xac, 0xb0, 0x1d, 0xf4, 0xdb, 0xe5, 0x98]);
enum WPD_FUNCTIONAL_OBJECT_CATEGORY = PROPERTYKEY(GUID(2399481235, 43978, 20421, [165, 172, 176, 29, 244, 219, 229, 152]), 2);
enum WPD_STORAGE_OBJECT_PROPERTIES_V1 = GUID(0x1a3057a, 0x74d6, 0x4e80, [0xbe, 0xa7, 0xdc, 0x4c, 0x21, 0x2c, 0xe5, 0xa]);
enum WPD_STORAGE_TYPE = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 2);
enum WPD_STORAGE_FILE_SYSTEM_TYPE = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 3);
enum WPD_STORAGE_CAPACITY = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 4);
enum WPD_STORAGE_FREE_SPACE_IN_BYTES = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 5);
enum WPD_STORAGE_FREE_SPACE_IN_OBJECTS = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 6);
enum WPD_STORAGE_DESCRIPTION = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 7);
enum WPD_STORAGE_SERIAL_NUMBER = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 8);
enum WPD_STORAGE_MAX_OBJECT_SIZE = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 9);
enum WPD_STORAGE_CAPACITY_IN_OBJECTS = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 10);
enum WPD_STORAGE_ACCESS_CAPABILITY = PROPERTYKEY(GUID(27460986, 29910, 20096, [190, 167, 220, 76, 33, 44, 229, 10]), 11);
enum WPD_NETWORK_ASSOCIATION_PROPERTIES_V1 = GUID(0xe4c93c1f, 0xb203, 0x43f1, [0xa1, 0x0, 0x5a, 0x7, 0xd1, 0x1b, 0x2, 0x74]);
enum WPD_NETWORK_ASSOCIATION_HOST_NETWORK_IDENTIFIERS = PROPERTYKEY(GUID(3838393375, 45571, 17393, [161, 0, 90, 7, 209, 27, 2, 116]), 2);
enum WPD_NETWORK_ASSOCIATION_X509V3SEQUENCE = PROPERTYKEY(GUID(3838393375, 45571, 17393, [161, 0, 90, 7, 209, 27, 2, 116]), 3);
enum WPD_STILL_IMAGE_CAPTURE_OBJECT_PROPERTIES_V1 = GUID(0x58c571ec, 0x1bcb, 0x42a7, [0x8a, 0xc5, 0xbb, 0x29, 0x15, 0x73, 0xa2, 0x60]);
enum WPD_STILL_IMAGE_CAPTURE_RESOLUTION = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 2);
enum WPD_STILL_IMAGE_CAPTURE_FORMAT = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 3);
enum WPD_STILL_IMAGE_COMPRESSION_SETTING = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 4);
enum WPD_STILL_IMAGE_WHITE_BALANCE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 5);
enum WPD_STILL_IMAGE_RGB_GAIN = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 6);
enum WPD_STILL_IMAGE_FNUMBER = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 7);
enum WPD_STILL_IMAGE_FOCAL_LENGTH = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 8);
enum WPD_STILL_IMAGE_FOCUS_DISTANCE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 9);
enum WPD_STILL_IMAGE_FOCUS_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 10);
enum WPD_STILL_IMAGE_EXPOSURE_METERING_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 11);
enum WPD_STILL_IMAGE_FLASH_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 12);
enum WPD_STILL_IMAGE_EXPOSURE_TIME = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 13);
enum WPD_STILL_IMAGE_EXPOSURE_PROGRAM_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 14);
enum WPD_STILL_IMAGE_EXPOSURE_INDEX = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 15);
enum WPD_STILL_IMAGE_EXPOSURE_BIAS_COMPENSATION = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 16);
enum WPD_STILL_IMAGE_CAPTURE_DELAY = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 17);
enum WPD_STILL_IMAGE_CAPTURE_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 18);
enum WPD_STILL_IMAGE_CONTRAST = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 19);
enum WPD_STILL_IMAGE_SHARPNESS = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 20);
enum WPD_STILL_IMAGE_DIGITAL_ZOOM = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 21);
enum WPD_STILL_IMAGE_EFFECT_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 22);
enum WPD_STILL_IMAGE_BURST_NUMBER = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 23);
enum WPD_STILL_IMAGE_BURST_INTERVAL = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 24);
enum WPD_STILL_IMAGE_TIMELAPSE_NUMBER = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 25);
enum WPD_STILL_IMAGE_TIMELAPSE_INTERVAL = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 26);
enum WPD_STILL_IMAGE_FOCUS_METERING_MODE = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 27);
enum WPD_STILL_IMAGE_UPLOAD_URL = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 28);
enum WPD_STILL_IMAGE_ARTIST = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 29);
enum WPD_STILL_IMAGE_CAMERA_MODEL = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 30);
enum WPD_STILL_IMAGE_CAMERA_MANUFACTURER = PROPERTYKEY(GUID(1489334764, 7115, 17063, [138, 197, 187, 41, 21, 115, 162, 96]), 31);
enum WPD_RENDERING_INFORMATION_OBJECT_PROPERTIES_V1 = GUID(0xc53d039f, 0xee23, 0x4a31, [0x85, 0x90, 0x76, 0x39, 0x87, 0x98, 0x70, 0xb4]);
enum WPD_RENDERING_INFORMATION_PROFILES = PROPERTYKEY(GUID(3309110175, 60963, 18993, [133, 144, 118, 57, 135, 152, 112, 180]), 2);
enum WPD_RENDERING_INFORMATION_PROFILE_ENTRY_TYPE = PROPERTYKEY(GUID(3309110175, 60963, 18993, [133, 144, 118, 57, 135, 152, 112, 180]), 3);
enum WPD_RENDERING_INFORMATION_PROFILE_ENTRY_CREATABLE_RESOURCES = PROPERTYKEY(GUID(3309110175, 60963, 18993, [133, 144, 118, 57, 135, 152, 112, 180]), 4);
enum WPD_CLIENT_INFORMATION_PROPERTIES_V1 = GUID(0x204d9f0c, 0x2292, 0x4080, [0x9f, 0x42, 0x40, 0x66, 0x4e, 0x70, 0xf8, 0x59]);
enum WPD_CLIENT_NAME = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 2);
enum WPD_CLIENT_MAJOR_VERSION = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 3);
enum WPD_CLIENT_MINOR_VERSION = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 4);
enum WPD_CLIENT_REVISION = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 5);
enum WPD_CLIENT_WMDRM_APPLICATION_PRIVATE_KEY = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 6);
enum WPD_CLIENT_WMDRM_APPLICATION_CERTIFICATE = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 7);
enum WPD_CLIENT_SECURITY_QUALITY_OF_SERVICE = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 8);
enum WPD_CLIENT_DESIRED_ACCESS = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 9);
enum WPD_CLIENT_SHARE_MODE = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 10);
enum WPD_CLIENT_EVENT_COOKIE = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 11);
enum WPD_CLIENT_MINIMUM_RESULTS_BUFFER_SIZE = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 12);
enum WPD_CLIENT_MANUAL_CLOSE_ON_DISCONNECT = PROPERTYKEY(GUID(541957900, 8850, 16512, [159, 66, 64, 102, 78, 112, 248, 89]), 13);
enum WPD_PROPERTY_ATTRIBUTES_V1 = GUID(0xab7943d8, 0x6332, 0x445f, [0xa0, 0xd, 0x8d, 0x5e, 0xf1, 0xe9, 0x6f, 0x37]);
enum WPD_PROPERTY_ATTRIBUTE_FORM = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 2);
enum WPD_PROPERTY_ATTRIBUTE_CAN_READ = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 3);
enum WPD_PROPERTY_ATTRIBUTE_CAN_WRITE = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 4);
enum WPD_PROPERTY_ATTRIBUTE_CAN_DELETE = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 5);
enum WPD_PROPERTY_ATTRIBUTE_DEFAULT_VALUE = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 6);
enum WPD_PROPERTY_ATTRIBUTE_FAST_PROPERTY = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 7);
enum WPD_PROPERTY_ATTRIBUTE_RANGE_MIN = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 8);
enum WPD_PROPERTY_ATTRIBUTE_RANGE_MAX = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 9);
enum WPD_PROPERTY_ATTRIBUTE_RANGE_STEP = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 10);
enum WPD_PROPERTY_ATTRIBUTE_ENUMERATION_ELEMENTS = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 11);
enum WPD_PROPERTY_ATTRIBUTE_REGULAR_EXPRESSION = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 12);
enum WPD_PROPERTY_ATTRIBUTE_MAX_SIZE = PROPERTYKEY(GUID(2876851160, 25394, 17503, [160, 13, 141, 94, 241, 233, 111, 55]), 13);
enum WPD_PROPERTY_ATTRIBUTES_V2 = GUID(0x5d9da160, 0x74ae, 0x43cc, [0x85, 0xa9, 0xfe, 0x55, 0x5a, 0x80, 0x79, 0x8e]);
enum WPD_PROPERTY_ATTRIBUTE_NAME = PROPERTYKEY(GUID(1570611552, 29870, 17356, [133, 169, 254, 85, 90, 128, 121, 142]), 2);
enum WPD_PROPERTY_ATTRIBUTE_VARTYPE = PROPERTYKEY(GUID(1570611552, 29870, 17356, [133, 169, 254, 85, 90, 128, 121, 142]), 3);
enum WPD_CLASS_EXTENSION_OPTIONS_V1 = GUID(0x6309ffef, 0xa87c, 0x4ca7, [0x84, 0x34, 0x79, 0x75, 0x76, 0xe4, 0xa, 0x96]);
enum WPD_CLASS_EXTENSION_OPTIONS_SUPPORTED_CONTENT_TYPES = PROPERTYKEY(GUID(1661599727, 43132, 19623, [132, 52, 121, 117, 118, 228, 10, 150]), 2);
enum WPD_CLASS_EXTENSION_OPTIONS_DONT_REGISTER_WPD_DEVICE_INTERFACE = PROPERTYKEY(GUID(1661599727, 43132, 19623, [132, 52, 121, 117, 118, 228, 10, 150]), 3);
enum WPD_CLASS_EXTENSION_OPTIONS_REGISTER_WPD_PRIVATE_DEVICE_INTERFACE = PROPERTYKEY(GUID(1661599727, 43132, 19623, [132, 52, 121, 117, 118, 228, 10, 150]), 4);
enum WPD_CLASS_EXTENSION_OPTIONS_V2 = GUID(0x3e3595da, 0x4d71, 0x49fe, [0xa0, 0xb4, 0xd4, 0x40, 0x6c, 0x3a, 0xe9, 0x3f]);
enum WPD_CLASS_EXTENSION_OPTIONS_MULTITRANSPORT_MODE = PROPERTYKEY(GUID(1043699162, 19825, 18942, [160, 180, 212, 64, 108, 58, 233, 63]), 2);
enum WPD_CLASS_EXTENSION_OPTIONS_DEVICE_IDENTIFICATION_VALUES = PROPERTYKEY(GUID(1043699162, 19825, 18942, [160, 180, 212, 64, 108, 58, 233, 63]), 3);
enum WPD_CLASS_EXTENSION_OPTIONS_TRANSPORT_BANDWIDTH = PROPERTYKEY(GUID(1043699162, 19825, 18942, [160, 180, 212, 64, 108, 58, 233, 63]), 4);
enum WPD_CLASS_EXTENSION_OPTIONS_V3 = GUID(0x65c160f8, 0x1367, 0x4ce2, [0x93, 0x9d, 0x83, 0x10, 0x83, 0x9f, 0xd, 0x30]);
enum WPD_CLASS_EXTENSION_OPTIONS_SILENCE_AUTOPLAY = PROPERTYKEY(GUID(1707172088, 4967, 19682, [147, 157, 131, 16, 131, 159, 13, 48]), 2);
enum WPD_RESOURCE_ATTRIBUTES_V1 = GUID(0x1eb6f604, 0x9278, 0x429f, [0x93, 0xcc, 0x5b, 0xb8, 0xc0, 0x66, 0x56, 0xb6]);
enum WPD_RESOURCE_ATTRIBUTE_TOTAL_SIZE = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 2);
enum WPD_RESOURCE_ATTRIBUTE_CAN_READ = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 3);
enum WPD_RESOURCE_ATTRIBUTE_CAN_WRITE = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 4);
enum WPD_RESOURCE_ATTRIBUTE_CAN_DELETE = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 5);
enum WPD_RESOURCE_ATTRIBUTE_OPTIMAL_READ_BUFFER_SIZE = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 6);
enum WPD_RESOURCE_ATTRIBUTE_OPTIMAL_WRITE_BUFFER_SIZE = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 7);
enum WPD_RESOURCE_ATTRIBUTE_FORMAT = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 8);
enum WPD_RESOURCE_ATTRIBUTE_RESOURCE_KEY = PROPERTYKEY(GUID(515307012, 37496, 17055, [147, 204, 91, 184, 192, 102, 86, 182]), 9);
enum WPD_DEVICE_PROPERTIES_V1 = GUID(0x26d4979a, 0xe643, 0x4626, [0x9e, 0x2b, 0x73, 0x6d, 0xc0, 0xc9, 0x2f, 0xdc]);
enum WPD_DEVICE_SYNC_PARTNER = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 2);
enum WPD_DEVICE_FIRMWARE_VERSION = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 3);
enum WPD_DEVICE_POWER_LEVEL = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 4);
enum WPD_DEVICE_POWER_SOURCE = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 5);
enum WPD_DEVICE_PROTOCOL = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 6);
enum WPD_DEVICE_MANUFACTURER = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 7);
enum WPD_DEVICE_MODEL = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 8);
enum WPD_DEVICE_SERIAL_NUMBER = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 9);
enum WPD_DEVICE_SUPPORTS_NON_CONSUMABLE = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 10);
enum WPD_DEVICE_DATETIME = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 11);
enum WPD_DEVICE_FRIENDLY_NAME = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 12);
enum WPD_DEVICE_SUPPORTED_DRM_SCHEMES = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 13);
enum WPD_DEVICE_SUPPORTED_FORMATS_ARE_ORDERED = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 14);
enum WPD_DEVICE_TYPE = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 15);
enum WPD_DEVICE_NETWORK_IDENTIFIER = PROPERTYKEY(GUID(651466650, 58947, 17958, [158, 43, 115, 109, 192, 201, 47, 220]), 16);
enum WPD_DEVICE_PROPERTIES_V2 = GUID(0x463dd662, 0x7fc4, 0x4291, [0x91, 0x1c, 0x7f, 0x4c, 0x9c, 0xca, 0x97, 0x99]);
enum WPD_DEVICE_FUNCTIONAL_UNIQUE_ID = PROPERTYKEY(GUID(1178457698, 32708, 17041, [145, 28, 127, 76, 156, 202, 151, 153]), 2);
enum WPD_DEVICE_MODEL_UNIQUE_ID = PROPERTYKEY(GUID(1178457698, 32708, 17041, [145, 28, 127, 76, 156, 202, 151, 153]), 3);
enum WPD_DEVICE_TRANSPORT = PROPERTYKEY(GUID(1178457698, 32708, 17041, [145, 28, 127, 76, 156, 202, 151, 153]), 4);
enum WPD_DEVICE_USE_DEVICE_STAGE = PROPERTYKEY(GUID(1178457698, 32708, 17041, [145, 28, 127, 76, 156, 202, 151, 153]), 5);
enum WPD_DEVICE_PROPERTIES_V3 = GUID(0x6c2b878c, 0xc2ec, 0x490d, [0xb4, 0x25, 0xd7, 0xa7, 0x5e, 0x23, 0xe5, 0xed]);
enum WPD_DEVICE_EDP_IDENTITY = PROPERTYKEY(GUID(1814792076, 49900, 18701, [180, 37, 215, 167, 94, 35, 229, 237]), 1);
enum WPD_SERVICE_PROPERTIES_V1 = GUID(0x7510698a, 0xcb54, 0x481c, [0xb8, 0xdb, 0xd, 0x75, 0xc9, 0x3f, 0x1c, 0x6]);
enum WPD_SERVICE_VERSION = PROPERTYKEY(GUID(1964009866, 52052, 18460, [184, 219, 13, 117, 201, 63, 28, 6]), 2);
enum WPD_EVENT_PROPERTIES_V1 = GUID(0x15ab1953, 0xf817, 0x4fef, [0xa9, 0x21, 0x56, 0x76, 0xe8, 0x38, 0xf6, 0xe0]);
enum WPD_EVENT_PARAMETER_PNP_DEVICE_ID = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 2);
enum WPD_EVENT_PARAMETER_EVENT_ID = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 3);
enum WPD_EVENT_PARAMETER_OPERATION_STATE = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 4);
enum WPD_EVENT_PARAMETER_OPERATION_PROGRESS = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 5);
enum WPD_EVENT_PARAMETER_OBJECT_PARENT_PERSISTENT_UNIQUE_ID = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 6);
enum WPD_EVENT_PARAMETER_OBJECT_CREATION_COOKIE = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 7);
enum WPD_EVENT_PARAMETER_CHILD_HIERARCHY_CHANGED = PROPERTYKEY(GUID(363534675, 63511, 20463, [169, 33, 86, 118, 232, 56, 246, 224]), 8);
enum WPD_EVENT_PROPERTIES_V2 = GUID(0x52807b8a, 0x4914, 0x4323, [0x9b, 0x9a, 0x74, 0xf6, 0x54, 0xb2, 0xb8, 0x46]);
enum WPD_EVENT_PARAMETER_SERVICE_METHOD_CONTEXT = PROPERTYKEY(GUID(1384151946, 18708, 17187, [155, 154, 116, 246, 84, 178, 184, 70]), 2);
enum WPD_EVENT_OPTIONS_V1 = GUID(0xb3d8dad7, 0xa361, 0x4b83, [0x8a, 0x48, 0x5b, 0x2, 0xce, 0x10, 0x71, 0x3b]);
enum WPD_EVENT_OPTION_IS_BROADCAST_EVENT = PROPERTYKEY(GUID(3017333463, 41825, 19331, [138, 72, 91, 2, 206, 16, 113, 59]), 2);
enum WPD_EVENT_OPTION_IS_AUTOPLAY_EVENT = PROPERTYKEY(GUID(3017333463, 41825, 19331, [138, 72, 91, 2, 206, 16, 113, 59]), 3);
enum WPD_EVENT_ATTRIBUTES_V1 = GUID(0x10c96578, 0x2e81, 0x4111, [0xad, 0xde, 0xe0, 0x8c, 0xa6, 0x13, 0x8f, 0x6d]);
enum WPD_EVENT_ATTRIBUTE_NAME = PROPERTYKEY(GUID(281634168, 11905, 16657, [173, 222, 224, 140, 166, 19, 143, 109]), 2);
enum WPD_EVENT_ATTRIBUTE_PARAMETERS = PROPERTYKEY(GUID(281634168, 11905, 16657, [173, 222, 224, 140, 166, 19, 143, 109]), 3);
enum WPD_EVENT_ATTRIBUTE_OPTIONS = PROPERTYKEY(GUID(281634168, 11905, 16657, [173, 222, 224, 140, 166, 19, 143, 109]), 4);
enum WPD_API_OPTIONS_V1 = GUID(0x10e54a3e, 0x52d, 0x4777, [0xa1, 0x3c, 0xde, 0x76, 0x14, 0xbe, 0x2b, 0xc4]);
enum WPD_API_OPTION_USE_CLEAR_DATA_STREAM = PROPERTYKEY(GUID(283462206, 1325, 18295, [161, 60, 222, 118, 20, 190, 43, 196]), 2);
enum WPD_API_OPTION_IOCTL_ACCESS = PROPERTYKEY(GUID(283462206, 1325, 18295, [161, 60, 222, 118, 20, 190, 43, 196]), 3);
enum WPD_FORMAT_ATTRIBUTES_V1 = GUID(0xa0a02000, 0xbcaf, 0x4be8, [0xb3, 0xf5, 0x23, 0x3f, 0x23, 0x1c, 0xf5, 0x8f]);
enum WPD_FORMAT_ATTRIBUTE_NAME = PROPERTYKEY(GUID(2694848512, 48303, 19432, [179, 245, 35, 63, 35, 28, 245, 143]), 2);
enum WPD_FORMAT_ATTRIBUTE_MIMETYPE = PROPERTYKEY(GUID(2694848512, 48303, 19432, [179, 245, 35, 63, 35, 28, 245, 143]), 3);
enum WPD_METHOD_ATTRIBUTES_V1 = GUID(0xf17a5071, 0xf039, 0x44af, [0x8e, 0xfe, 0x43, 0x2c, 0xf3, 0x2e, 0x43, 0x2a]);
enum WPD_METHOD_ATTRIBUTE_NAME = PROPERTYKEY(GUID(4051325041, 61497, 17583, [142, 254, 67, 44, 243, 46, 67, 42]), 2);
enum WPD_METHOD_ATTRIBUTE_ASSOCIATED_FORMAT = PROPERTYKEY(GUID(4051325041, 61497, 17583, [142, 254, 67, 44, 243, 46, 67, 42]), 3);
enum WPD_METHOD_ATTRIBUTE_ACCESS = PROPERTYKEY(GUID(4051325041, 61497, 17583, [142, 254, 67, 44, 243, 46, 67, 42]), 4);
enum WPD_METHOD_ATTRIBUTE_PARAMETERS = PROPERTYKEY(GUID(4051325041, 61497, 17583, [142, 254, 67, 44, 243, 46, 67, 42]), 5);
enum WPD_PARAMETER_ATTRIBUTES_V1 = GUID(0xe6864dd7, 0xf325, 0x45ea, [0xa1, 0xd5, 0x97, 0xcf, 0x73, 0xb6, 0xca, 0x58]);
enum WPD_PARAMETER_ATTRIBUTE_ORDER = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 2);
enum WPD_PARAMETER_ATTRIBUTE_USAGE = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 3);
enum WPD_PARAMETER_ATTRIBUTE_FORM = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 4);
enum WPD_PARAMETER_ATTRIBUTE_DEFAULT_VALUE = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 5);
enum WPD_PARAMETER_ATTRIBUTE_RANGE_MIN = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 6);
enum WPD_PARAMETER_ATTRIBUTE_RANGE_MAX = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 7);
enum WPD_PARAMETER_ATTRIBUTE_RANGE_STEP = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 8);
enum WPD_PARAMETER_ATTRIBUTE_ENUMERATION_ELEMENTS = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 9);
enum WPD_PARAMETER_ATTRIBUTE_REGULAR_EXPRESSION = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 10);
enum WPD_PARAMETER_ATTRIBUTE_MAX_SIZE = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 11);
enum WPD_PARAMETER_ATTRIBUTE_VARTYPE = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 12);
enum WPD_PARAMETER_ATTRIBUTE_NAME = PROPERTYKEY(GUID(3867561431, 62245, 17898, [161, 213, 151, 207, 115, 182, 202, 88]), 13);
enum WPD_CATEGORY_COMMON = GUID(0xf0422a9c, 0x5dc8, 0x4440, [0xb5, 0xbd, 0x5d, 0xf2, 0x88, 0x35, 0x65, 0x8a]);
enum WPD_COMMAND_COMMON_RESET_DEVICE = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 2);
enum WPD_COMMAND_COMMON_GET_OBJECT_IDS_FROM_PERSISTENT_UNIQUE_IDS = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 3);
enum WPD_COMMAND_COMMON_SAVE_CLIENT_INFORMATION = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 4);
enum WPD_PROPERTY_COMMON_COMMAND_CATEGORY = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1001);
enum WPD_PROPERTY_COMMON_COMMAND_ID = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1002);
enum WPD_PROPERTY_COMMON_HRESULT = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1003);
enum WPD_PROPERTY_COMMON_DRIVER_ERROR_CODE = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1004);
enum WPD_PROPERTY_COMMON_COMMAND_TARGET = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1006);
enum WPD_PROPERTY_COMMON_PERSISTENT_UNIQUE_IDS = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1007);
enum WPD_PROPERTY_COMMON_OBJECT_IDS = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1008);
enum WPD_PROPERTY_COMMON_CLIENT_INFORMATION = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1009);
enum WPD_PROPERTY_COMMON_CLIENT_INFORMATION_CONTEXT = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1010);
enum WPD_PROPERTY_COMMON_ACTIVITY_ID = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 1011);
enum WPD_OPTION_VALID_OBJECT_IDS = PROPERTYKEY(GUID(4030868124, 24008, 17472, [181, 189, 93, 242, 136, 53, 101, 138]), 5001);
enum WPD_CATEGORY_OBJECT_ENUMERATION = GUID(0xb7474e91, 0xe7f8, 0x4ad9, [0xb4, 0x0, 0xad, 0x1a, 0x4b, 0x58, 0xee, 0xec]);
enum WPD_COMMAND_OBJECT_ENUMERATION_START_FIND = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 2);
enum WPD_COMMAND_OBJECT_ENUMERATION_FIND_NEXT = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 3);
enum WPD_COMMAND_OBJECT_ENUMERATION_END_FIND = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 4);
enum WPD_PROPERTY_OBJECT_ENUMERATION_PARENT_ID = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 1001);
enum WPD_PROPERTY_OBJECT_ENUMERATION_FILTER = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 1002);
enum WPD_PROPERTY_OBJECT_ENUMERATION_OBJECT_IDS = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 1003);
enum WPD_PROPERTY_OBJECT_ENUMERATION_CONTEXT = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 1004);
enum WPD_PROPERTY_OBJECT_ENUMERATION_NUM_OBJECTS_REQUESTED = PROPERTYKEY(GUID(3074903697, 59384, 19161, [180, 0, 173, 26, 75, 88, 238, 236]), 1005);
enum WPD_CATEGORY_OBJECT_PROPERTIES = GUID(0x9e5582e4, 0x814, 0x44e6, [0x98, 0x1a, 0xb2, 0x99, 0x8d, 0x58, 0x38, 0x4]);
enum WPD_COMMAND_OBJECT_PROPERTIES_GET_SUPPORTED = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 2);
enum WPD_COMMAND_OBJECT_PROPERTIES_GET_ATTRIBUTES = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 3);
enum WPD_COMMAND_OBJECT_PROPERTIES_GET = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 4);
enum WPD_COMMAND_OBJECT_PROPERTIES_SET = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 5);
enum WPD_COMMAND_OBJECT_PROPERTIES_GET_ALL = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 6);
enum WPD_COMMAND_OBJECT_PROPERTIES_DELETE = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 7);
enum WPD_PROPERTY_OBJECT_PROPERTIES_OBJECT_ID = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1001);
enum WPD_PROPERTY_OBJECT_PROPERTIES_PROPERTY_KEYS = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1002);
enum WPD_PROPERTY_OBJECT_PROPERTIES_PROPERTY_ATTRIBUTES = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1003);
enum WPD_PROPERTY_OBJECT_PROPERTIES_PROPERTY_VALUES = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1004);
enum WPD_PROPERTY_OBJECT_PROPERTIES_PROPERTY_WRITE_RESULTS = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1005);
enum WPD_PROPERTY_OBJECT_PROPERTIES_PROPERTY_DELETE_RESULTS = PROPERTYKEY(GUID(2656404196, 2068, 17638, [152, 26, 178, 153, 141, 88, 56, 4]), 1006);
enum WPD_CATEGORY_OBJECT_PROPERTIES_BULK = GUID(0x11c824dd, 0x4cd, 0x4e4e, [0x8c, 0x7b, 0xf6, 0xef, 0xb7, 0x94, 0xd8, 0x4e]);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_LIST_START = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 2);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_LIST_NEXT = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 3);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_LIST_END = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 4);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_FORMAT_START = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 5);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_FORMAT_NEXT = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 6);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_GET_VALUES_BY_OBJECT_FORMAT_END = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 7);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_SET_VALUES_BY_OBJECT_LIST_START = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 8);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_SET_VALUES_BY_OBJECT_LIST_NEXT = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 9);
enum WPD_COMMAND_OBJECT_PROPERTIES_BULK_SET_VALUES_BY_OBJECT_LIST_END = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 10);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_OBJECT_IDS = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1001);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_CONTEXT = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1002);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_VALUES = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1003);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_PROPERTY_KEYS = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1004);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_DEPTH = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1005);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_PARENT_OBJECT_ID = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1006);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_OBJECT_FORMAT = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1007);
enum WPD_PROPERTY_OBJECT_PROPERTIES_BULK_WRITE_RESULTS = PROPERTYKEY(GUID(298329309, 1229, 20046, [140, 123, 246, 239, 183, 148, 216, 78]), 1008);
enum WPD_CATEGORY_OBJECT_RESOURCES = GUID(0xb3a2b22d, 0xa595, 0x4108, [0xbe, 0xa, 0xfc, 0x3c, 0x96, 0x5f, 0x3d, 0x4a]);
enum WPD_COMMAND_OBJECT_RESOURCES_GET_SUPPORTED = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 2);
enum WPD_COMMAND_OBJECT_RESOURCES_GET_ATTRIBUTES = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 3);
enum WPD_COMMAND_OBJECT_RESOURCES_OPEN = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 4);
enum WPD_COMMAND_OBJECT_RESOURCES_READ = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 5);
enum WPD_COMMAND_OBJECT_RESOURCES_WRITE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 6);
enum WPD_COMMAND_OBJECT_RESOURCES_CLOSE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 7);
enum WPD_COMMAND_OBJECT_RESOURCES_DELETE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 8);
enum WPD_COMMAND_OBJECT_RESOURCES_CREATE_RESOURCE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 9);
enum WPD_COMMAND_OBJECT_RESOURCES_REVERT = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 10);
enum WPD_COMMAND_OBJECT_RESOURCES_SEEK = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 11);
enum WPD_COMMAND_OBJECT_RESOURCES_COMMIT = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 12);
enum WPD_COMMAND_OBJECT_RESOURCES_SEEK_IN_UNITS = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 13);
enum WPD_PROPERTY_OBJECT_RESOURCES_OBJECT_ID = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1001);
enum WPD_PROPERTY_OBJECT_RESOURCES_ACCESS_MODE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1002);
enum WPD_PROPERTY_OBJECT_RESOURCES_RESOURCE_KEYS = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1003);
enum WPD_PROPERTY_OBJECT_RESOURCES_RESOURCE_ATTRIBUTES = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1004);
enum WPD_PROPERTY_OBJECT_RESOURCES_CONTEXT = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1005);
enum WPD_PROPERTY_OBJECT_RESOURCES_NUM_BYTES_TO_READ = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1006);
enum WPD_PROPERTY_OBJECT_RESOURCES_NUM_BYTES_READ = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1007);
enum WPD_PROPERTY_OBJECT_RESOURCES_NUM_BYTES_TO_WRITE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1008);
enum WPD_PROPERTY_OBJECT_RESOURCES_NUM_BYTES_WRITTEN = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1009);
enum WPD_PROPERTY_OBJECT_RESOURCES_DATA = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1010);
enum WPD_PROPERTY_OBJECT_RESOURCES_OPTIMAL_TRANSFER_BUFFER_SIZE = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1011);
enum WPD_PROPERTY_OBJECT_RESOURCES_SEEK_OFFSET = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1012);
enum WPD_PROPERTY_OBJECT_RESOURCES_SEEK_ORIGIN_FLAG = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1013);
enum WPD_PROPERTY_OBJECT_RESOURCES_POSITION_FROM_START = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1014);
enum WPD_PROPERTY_OBJECT_RESOURCES_SUPPORTS_UNITS = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1015);
enum WPD_PROPERTY_OBJECT_RESOURCES_STREAM_UNITS = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 1016);
enum WPD_OPTION_OBJECT_RESOURCES_SEEK_ON_READ_SUPPORTED = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 5001);
enum WPD_OPTION_OBJECT_RESOURCES_SEEK_ON_WRITE_SUPPORTED = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 5002);
enum WPD_OPTION_OBJECT_RESOURCES_NO_INPUT_BUFFER_ON_READ = PROPERTYKEY(GUID(3013784109, 42389, 16648, [190, 10, 252, 60, 150, 95, 61, 74]), 5003);
enum WPD_CATEGORY_OBJECT_MANAGEMENT = GUID(0xef1e43dd, 0xa9ed, 0x4341, [0x8b, 0xcc, 0x18, 0x61, 0x92, 0xae, 0xa0, 0x89]);
enum WPD_COMMAND_OBJECT_MANAGEMENT_CREATE_OBJECT_WITH_PROPERTIES_ONLY = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 2);
enum WPD_COMMAND_OBJECT_MANAGEMENT_CREATE_OBJECT_WITH_PROPERTIES_AND_DATA = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 3);
enum WPD_COMMAND_OBJECT_MANAGEMENT_WRITE_OBJECT_DATA = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 4);
enum WPD_COMMAND_OBJECT_MANAGEMENT_COMMIT_OBJECT = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 5);
enum WPD_COMMAND_OBJECT_MANAGEMENT_REVERT_OBJECT = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 6);
enum WPD_COMMAND_OBJECT_MANAGEMENT_DELETE_OBJECTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 7);
enum WPD_COMMAND_OBJECT_MANAGEMENT_MOVE_OBJECTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 8);
enum WPD_COMMAND_OBJECT_MANAGEMENT_COPY_OBJECTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 9);
enum WPD_COMMAND_OBJECT_MANAGEMENT_UPDATE_OBJECT_WITH_PROPERTIES_AND_DATA = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 10);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_CREATION_PROPERTIES = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1001);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_CONTEXT = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1002);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_NUM_BYTES_TO_WRITE = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1003);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_NUM_BYTES_WRITTEN = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1004);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_DATA = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1005);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_OBJECT_ID = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1006);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_DELETE_OPTIONS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1007);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_OPTIMAL_TRANSFER_BUFFER_SIZE = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1008);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_OBJECT_IDS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1009);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_DELETE_RESULTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1010);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_DESTINATION_FOLDER_OBJECT_ID = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1011);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_MOVE_RESULTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1012);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_COPY_RESULTS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1013);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_UPDATE_PROPERTIES = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1014);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_PROPERTY_KEYS = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1015);
enum WPD_PROPERTY_OBJECT_MANAGEMENT_OBJECT_FORMAT = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 1016);
enum WPD_OPTION_OBJECT_MANAGEMENT_RECURSIVE_DELETE_SUPPORTED = PROPERTYKEY(GUID(4011738077, 43501, 17217, [139, 204, 24, 97, 146, 174, 160, 137]), 5001);
enum WPD_CATEGORY_CAPABILITIES = GUID(0xcabec78, 0x6b74, 0x41c6, [0x92, 0x16, 0x26, 0x39, 0xd1, 0xfc, 0xe3, 0x56]);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_COMMANDS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 2);
enum WPD_COMMAND_CAPABILITIES_GET_COMMAND_OPTIONS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 3);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_FUNCTIONAL_CATEGORIES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 4);
enum WPD_COMMAND_CAPABILITIES_GET_FUNCTIONAL_OBJECTS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 5);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_CONTENT_TYPES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 6);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_FORMATS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 7);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_FORMAT_PROPERTIES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 8);
enum WPD_COMMAND_CAPABILITIES_GET_FIXED_PROPERTY_ATTRIBUTES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 9);
enum WPD_COMMAND_CAPABILITIES_GET_SUPPORTED_EVENTS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 10);
enum WPD_COMMAND_CAPABILITIES_GET_EVENT_OPTIONS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 11);
enum WPD_PROPERTY_CAPABILITIES_SUPPORTED_COMMANDS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1001);
enum WPD_PROPERTY_CAPABILITIES_COMMAND = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1002);
enum WPD_PROPERTY_CAPABILITIES_COMMAND_OPTIONS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1003);
enum WPD_PROPERTY_CAPABILITIES_FUNCTIONAL_CATEGORIES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1004);
enum WPD_PROPERTY_CAPABILITIES_FUNCTIONAL_CATEGORY = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1005);
enum WPD_PROPERTY_CAPABILITIES_FUNCTIONAL_OBJECTS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1006);
enum WPD_PROPERTY_CAPABILITIES_CONTENT_TYPES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1007);
enum WPD_PROPERTY_CAPABILITIES_CONTENT_TYPE = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1008);
enum WPD_PROPERTY_CAPABILITIES_FORMATS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1009);
enum WPD_PROPERTY_CAPABILITIES_FORMAT = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1010);
enum WPD_PROPERTY_CAPABILITIES_PROPERTY_KEYS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1011);
enum WPD_PROPERTY_CAPABILITIES_PROPERTY_ATTRIBUTES = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1012);
enum WPD_PROPERTY_CAPABILITIES_SUPPORTED_EVENTS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1013);
enum WPD_PROPERTY_CAPABILITIES_EVENT = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1014);
enum WPD_PROPERTY_CAPABILITIES_EVENT_OPTIONS = PROPERTYKEY(GUID(212593784, 27508, 16838, [146, 22, 38, 57, 209, 252, 227, 86]), 1015);
enum WPD_CATEGORY_STORAGE = GUID(0xd8f907a6, 0x34cc, 0x45fa, [0x97, 0xfb, 0xd0, 0x7, 0xfa, 0x47, 0xec, 0x94]);
enum WPD_COMMAND_STORAGE_FORMAT = PROPERTYKEY(GUID(3640199078, 13516, 17914, [151, 251, 208, 7, 250, 71, 236, 148]), 2);
enum WPD_COMMAND_STORAGE_EJECT = PROPERTYKEY(GUID(3640199078, 13516, 17914, [151, 251, 208, 7, 250, 71, 236, 148]), 4);
enum WPD_PROPERTY_STORAGE_OBJECT_ID = PROPERTYKEY(GUID(3640199078, 13516, 17914, [151, 251, 208, 7, 250, 71, 236, 148]), 1001);
enum WPD_PROPERTY_STORAGE_DESTINATION_OBJECT_ID = PROPERTYKEY(GUID(3640199078, 13516, 17914, [151, 251, 208, 7, 250, 71, 236, 148]), 1002);
enum WPD_CATEGORY_SMS = GUID(0xafc25d66, 0xfe0d, 0x4114, [0x90, 0x97, 0x97, 0xc, 0x93, 0xe9, 0x20, 0xd1]);
enum WPD_COMMAND_SMS_SEND = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 2);
enum WPD_PROPERTY_SMS_RECIPIENT = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 1001);
enum WPD_PROPERTY_SMS_MESSAGE_TYPE = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 1002);
enum WPD_PROPERTY_SMS_TEXT_MESSAGE = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 1003);
enum WPD_PROPERTY_SMS_BINARY_MESSAGE = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 1004);
enum WPD_OPTION_SMS_BINARY_MESSAGE_SUPPORTED = PROPERTYKEY(GUID(2948750694, 65037, 16660, [144, 151, 151, 12, 147, 233, 32, 209]), 5001);
enum WPD_CATEGORY_STILL_IMAGE_CAPTURE = GUID(0x4fcd6982, 0x22a2, 0x4b05, [0xa4, 0x8b, 0x62, 0xd3, 0x8b, 0xf2, 0x7b, 0x32]);
enum WPD_COMMAND_STILL_IMAGE_CAPTURE_INITIATE = PROPERTYKEY(GUID(1338861954, 8866, 19205, [164, 139, 98, 211, 139, 242, 123, 50]), 2);
enum WPD_CATEGORY_MEDIA_CAPTURE = GUID(0x59b433ba, 0xfe44, 0x4d8d, [0x80, 0x8c, 0x6b, 0xcb, 0x9b, 0xf, 0x15, 0xe8]);
enum WPD_COMMAND_MEDIA_CAPTURE_START = PROPERTYKEY(GUID(1504981946, 65092, 19853, [128, 140, 107, 203, 155, 15, 21, 232]), 2);
enum WPD_COMMAND_MEDIA_CAPTURE_STOP = PROPERTYKEY(GUID(1504981946, 65092, 19853, [128, 140, 107, 203, 155, 15, 21, 232]), 3);
enum WPD_COMMAND_MEDIA_CAPTURE_PAUSE = PROPERTYKEY(GUID(1504981946, 65092, 19853, [128, 140, 107, 203, 155, 15, 21, 232]), 4);
enum WPD_CATEGORY_DEVICE_HINTS = GUID(0xd5fb92b, 0xcb46, 0x4c4f, [0x83, 0x43, 0xb, 0xc3, 0xd3, 0xf1, 0x7c, 0x84]);
enum WPD_COMMAND_DEVICE_HINTS_GET_CONTENT_LOCATION = PROPERTYKEY(GUID(224377131, 52038, 19535, [131, 67, 11, 195, 211, 241, 124, 132]), 2);
enum WPD_PROPERTY_DEVICE_HINTS_CONTENT_TYPE = PROPERTYKEY(GUID(224377131, 52038, 19535, [131, 67, 11, 195, 211, 241, 124, 132]), 1001);
enum WPD_PROPERTY_DEVICE_HINTS_CONTENT_LOCATIONS = PROPERTYKEY(GUID(224377131, 52038, 19535, [131, 67, 11, 195, 211, 241, 124, 132]), 1002);
enum WPD_CLASS_EXTENSION_V1 = GUID(0x33fb0d11, 0x64a3, 0x4fac, [0xb4, 0xc7, 0x3d, 0xfe, 0xaa, 0x99, 0xb0, 0x51]);
enum WPD_COMMAND_CLASS_EXTENSION_WRITE_DEVICE_INFORMATION = PROPERTYKEY(GUID(872090897, 25763, 20396, [180, 199, 61, 254, 170, 153, 176, 81]), 2);
enum WPD_PROPERTY_CLASS_EXTENSION_DEVICE_INFORMATION_VALUES = PROPERTYKEY(GUID(872090897, 25763, 20396, [180, 199, 61, 254, 170, 153, 176, 81]), 1001);
enum WPD_PROPERTY_CLASS_EXTENSION_DEVICE_INFORMATION_WRITE_RESULTS = PROPERTYKEY(GUID(872090897, 25763, 20396, [180, 199, 61, 254, 170, 153, 176, 81]), 1002);
enum WPD_CLASS_EXTENSION_V2 = GUID(0x7f0779b5, 0xfa2b, 0x4766, [0x9c, 0xb2, 0xf7, 0x3b, 0xa3, 0xb, 0x67, 0x58]);
enum WPD_COMMAND_CLASS_EXTENSION_REGISTER_SERVICE_INTERFACES = PROPERTYKEY(GUID(2131196341, 64043, 18278, [156, 178, 247, 59, 163, 11, 103, 88]), 2);
enum WPD_COMMAND_CLASS_EXTENSION_UNREGISTER_SERVICE_INTERFACES = PROPERTYKEY(GUID(2131196341, 64043, 18278, [156, 178, 247, 59, 163, 11, 103, 88]), 3);
enum WPD_PROPERTY_CLASS_EXTENSION_SERVICE_OBJECT_ID = PROPERTYKEY(GUID(2131196341, 64043, 18278, [156, 178, 247, 59, 163, 11, 103, 88]), 1001);
enum WPD_PROPERTY_CLASS_EXTENSION_SERVICE_INTERFACES = PROPERTYKEY(GUID(2131196341, 64043, 18278, [156, 178, 247, 59, 163, 11, 103, 88]), 1002);
enum WPD_PROPERTY_CLASS_EXTENSION_SERVICE_REGISTRATION_RESULTS = PROPERTYKEY(GUID(2131196341, 64043, 18278, [156, 178, 247, 59, 163, 11, 103, 88]), 1003);
enum WPD_CATEGORY_NETWORK_CONFIGURATION = GUID(0x78f9c6fc, 0x79b8, 0x473c, [0x90, 0x60, 0x6b, 0xd2, 0x3d, 0xd0, 0x72, 0xc4]);
enum WPD_COMMAND_GENERATE_KEYPAIR = PROPERTYKEY(GUID(2029635324, 31160, 18236, [144, 96, 107, 210, 61, 208, 114, 196]), 2);
enum WPD_COMMAND_COMMIT_KEYPAIR = PROPERTYKEY(GUID(2029635324, 31160, 18236, [144, 96, 107, 210, 61, 208, 114, 196]), 3);
enum WPD_COMMAND_PROCESS_WIRELESS_PROFILE = PROPERTYKEY(GUID(2029635324, 31160, 18236, [144, 96, 107, 210, 61, 208, 114, 196]), 4);
enum WPD_PROPERTY_PUBLIC_KEY = PROPERTYKEY(GUID(2029635324, 31160, 18236, [144, 96, 107, 210, 61, 208, 114, 196]), 1001);
enum WPD_CATEGORY_SERVICE_COMMON = GUID(0x322f071d, 0x36ef, 0x477f, [0xb4, 0xb5, 0x6f, 0x52, 0xd7, 0x34, 0xba, 0xee]);
enum WPD_COMMAND_SERVICE_COMMON_GET_SERVICE_OBJECT_ID = PROPERTYKEY(GUID(841942813, 14063, 18303, [180, 181, 111, 82, 215, 52, 186, 238]), 2);
enum WPD_PROPERTY_SERVICE_OBJECT_ID = PROPERTYKEY(GUID(841942813, 14063, 18303, [180, 181, 111, 82, 215, 52, 186, 238]), 1001);
enum WPD_CATEGORY_SERVICE_CAPABILITIES = GUID(0x24457e74, 0x2e9f, 0x44f9, [0x8c, 0x57, 0x1d, 0x1b, 0xcb, 0x17, 0xb, 0x89]);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_METHODS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 2);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_METHODS_BY_FORMAT = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 3);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_METHOD_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 4);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_METHOD_PARAMETER_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 5);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_FORMATS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 6);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_FORMAT_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 7);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_FORMAT_PROPERTIES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 8);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_FORMAT_PROPERTY_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 9);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_EVENTS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 10);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_EVENT_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 11);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_EVENT_PARAMETER_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 12);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_INHERITED_SERVICES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 13);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_FORMAT_RENDERING_PROFILES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 14);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_SUPPORTED_COMMANDS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 15);
enum WPD_COMMAND_SERVICE_CAPABILITIES_GET_COMMAND_OPTIONS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 16);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_SUPPORTED_METHODS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1001);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_FORMAT = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1002);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_METHOD = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1003);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_METHOD_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1004);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_PARAMETER = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1005);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_PARAMETER_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1006);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_FORMATS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1007);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_FORMAT_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1008);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_PROPERTY_KEYS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1009);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_PROPERTY_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1010);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_SUPPORTED_EVENTS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1011);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_EVENT = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1012);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_EVENT_ATTRIBUTES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1013);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_INHERITANCE_TYPE = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1014);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_INHERITED_SERVICES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1015);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_RENDERING_PROFILES = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1016);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_SUPPORTED_COMMANDS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1017);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_COMMAND = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1018);
enum WPD_PROPERTY_SERVICE_CAPABILITIES_COMMAND_OPTIONS = PROPERTYKEY(GUID(608534132, 11935, 17657, [140, 87, 29, 27, 203, 23, 11, 137]), 1019);
enum WPD_CATEGORY_SERVICE_METHODS = GUID(0x2d521ca8, 0xc1b0, 0x4268, [0xa3, 0x42, 0xcf, 0x19, 0x32, 0x15, 0x69, 0xbc]);
enum WPD_COMMAND_SERVICE_METHODS_START_INVOKE = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 2);
enum WPD_COMMAND_SERVICE_METHODS_CANCEL_INVOKE = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 3);
enum WPD_COMMAND_SERVICE_METHODS_END_INVOKE = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 4);
enum WPD_PROPERTY_SERVICE_METHOD = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 1001);
enum WPD_PROPERTY_SERVICE_METHOD_PARAMETER_VALUES = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 1002);
enum WPD_PROPERTY_SERVICE_METHOD_RESULT_VALUES = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 1003);
enum WPD_PROPERTY_SERVICE_METHOD_CONTEXT = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 1004);
enum WPD_PROPERTY_SERVICE_METHOD_HRESULT = PROPERTYKEY(GUID(760356008, 49584, 17000, [163, 66, 207, 25, 50, 21, 105, 188]), 1005);
enum WPD_RESOURCE_DEFAULT = PROPERTYKEY(GUID(3894311358, 13552, 16831, [181, 63, 241, 160, 106, 232, 120, 66]), 0);
enum WPD_RESOURCE_CONTACT_PHOTO = PROPERTYKEY(GUID(743270403, 33002, 17792, [175, 154, 91, 225, 162, 62, 221, 203]), 0);
enum WPD_RESOURCE_THUMBNAIL = PROPERTYKEY(GUID(3351513018, 39162, 18101, [153, 96, 35, 254, 193, 36, 207, 222]), 0);
enum WPD_RESOURCE_ICON = PROPERTYKEY(GUID(4053139160, 43560, 20195, [177, 83, 225, 130, 221, 94, 220, 57]), 0);
enum WPD_RESOURCE_AUDIO_CLIP = PROPERTYKEY(GUID(1002518914, 34225, 18656, [149, 166, 141, 58, 208, 107, 225, 23]), 0);
enum WPD_RESOURCE_ALBUM_ART = PROPERTYKEY(GUID(4029326164, 8960, 20013, [161, 185, 59, 103, 48, 247, 250, 33]), 0);
enum WPD_RESOURCE_GENERIC = PROPERTYKEY(GUID(3115971861, 47728, 17991, [148, 220, 250, 73, 37, 233, 90, 7]), 0);
enum WPD_RESOURCE_VIDEO_CLIP = PROPERTYKEY(GUID(3043421762, 25448, 17040, [134, 98, 112, 24, 47, 183, 159, 32]), 0);
enum WPD_RESOURCE_BRANDING_ART = PROPERTYKEY(GUID(3056841134, 27823, 19079, [149, 137, 34, 222, 214, 221, 88, 153]), 0);
enum WPD_OBJECT_FORMAT_PROPERTIES_ONLY = GUID(0x30010000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_UNSPECIFIED = GUID(0x30000000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_SCRIPT = GUID(0x30020000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_EXECUTABLE = GUID(0x30030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_TEXT = GUID(0x30040000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_HTML = GUID(0x30050000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_DPOF = GUID(0x30060000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AIFF = GUID(0x30070000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WAVE = GUID(0x30080000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MP3 = GUID(0x30090000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AVI = GUID(0x300a0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MPEG = GUID(0x300b0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ASF = GUID(0x300c0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_EXIF = GUID(0x38010000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_TIFFEP = GUID(0x38020000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_FLASHPIX = GUID(0x38030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_BMP = GUID(0x38040000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_CIFF = GUID(0x38050000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_GIF = GUID(0x38070000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_JFIF = GUID(0x38080000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_PCD = GUID(0x38090000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_PICT = GUID(0x380a0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_PNG = GUID(0x380b0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_TIFF = GUID(0x380d0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_TIFFIT = GUID(0x380e0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_JP2 = GUID(0x380f0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_JPX = GUID(0x38100000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WBMP = GUID(0xb8030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_JPEGXR = GUID(0xb8040000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WINDOWSIMAGEFORMAT = GUID(0xb8810000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WMA = GUID(0xb9010000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WMV = GUID(0xb9810000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_WPLPLAYLIST = GUID(0xba100000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_M3UPLAYLIST = GUID(0xba110000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MPLPLAYLIST = GUID(0xba120000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ASXPLAYLIST = GUID(0xba130000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_PLSPLAYLIST = GUID(0xba140000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ABSTRACT_CONTACT_GROUP = GUID(0xba060000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ABSTRACT_MEDIA_CAST = GUID(0xba0b0000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_VCALENDAR1 = GUID(0xbe020000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ICALENDAR = GUID(0xbe030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ABSTRACT_CONTACT = GUID(0xbb810000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_VCARD2 = GUID(0xbb820000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_VCARD3 = GUID(0xbb830000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_XML = GUID(0xba820000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AAC = GUID(0xb9030000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AUDIBLE = GUID(0xb9040000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_FLAC = GUID(0xb9060000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_QCELP = GUID(0xb9070000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AMR = GUID(0xb9080000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_OGG = GUID(0xb9020000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MP4 = GUID(0xb9820000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MP2 = GUID(0xb9830000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MICROSOFT_WORD = GUID(0xba830000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MHT_COMPILED_HTML = GUID(0xba840000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MICROSOFT_EXCEL = GUID(0xba850000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MICROSOFT_POWERPOINT = GUID(0xba860000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_3GP = GUID(0xb9840000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_3G2 = GUID(0xb9850000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_AVCHD = GUID(0xb9860000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_ATSCTS = GUID(0xb9870000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_DVBTS = GUID(0xb9880000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_FORMAT_MKV = GUID(0xb9900000, 0xae6c, 0x4804, [0x98, 0xba, 0xc5, 0x7b, 0x46, 0x96, 0x5f, 0xe7]);
enum WPD_OBJECT_ID = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 2);
enum WPD_OBJECT_PARENT_ID = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 3);
enum WPD_OBJECT_NAME = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 4);
enum WPD_OBJECT_PERSISTENT_UNIQUE_ID = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 5);
enum WPD_OBJECT_FORMAT = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 6);
enum WPD_OBJECT_ISHIDDEN = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 9);
enum WPD_OBJECT_ISSYSTEM = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 10);
enum WPD_OBJECT_SIZE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 11);
enum WPD_OBJECT_ORIGINAL_FILE_NAME = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 12);
enum WPD_OBJECT_NON_CONSUMABLE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 13);
enum WPD_OBJECT_KEYWORDS = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 15);
enum WPD_OBJECT_SYNC_ID = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 16);
enum WPD_OBJECT_IS_DRM_PROTECTED = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 17);
enum WPD_OBJECT_DATE_CREATED = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 18);
enum WPD_OBJECT_DATE_MODIFIED = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 19);
enum WPD_OBJECT_DATE_AUTHORED = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 20);
enum WPD_OBJECT_BACK_REFERENCES = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 21);
enum WPD_OBJECT_CAN_DELETE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 26);
enum WPD_OBJECT_LANGUAGE_LOCALE = PROPERTYKEY(GUID(4016785677, 23768, 17274, [175, 252, 218, 139, 96, 238, 74, 60]), 27);
enum WPD_FOLDER_OBJECT_PROPERTIES_V1 = GUID(0x7e9a7abf, 0xe568, 0x4b34, [0xaa, 0x2f, 0x13, 0xbb, 0x12, 0xab, 0x17, 0x7d]);
enum WPD_FOLDER_CONTENT_TYPES_ALLOWED = PROPERTYKEY(GUID(2124053183, 58728, 19252, [170, 47, 19, 187, 18, 171, 23, 125]), 2);
enum WPD_IMAGE_OBJECT_PROPERTIES_V1 = GUID(0x63d64908, 0x9fa1, 0x479f, [0x85, 0xba, 0x99, 0x52, 0x21, 0x64, 0x47, 0xdb]);
enum WPD_IMAGE_BITDEPTH = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 3);
enum WPD_IMAGE_CROPPED_STATUS = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 4);
enum WPD_IMAGE_COLOR_CORRECTED_STATUS = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 5);
enum WPD_IMAGE_FNUMBER = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 6);
enum WPD_IMAGE_EXPOSURE_TIME = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 7);
enum WPD_IMAGE_EXPOSURE_INDEX = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 8);
enum WPD_IMAGE_HORIZONTAL_RESOLUTION = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 9);
enum WPD_IMAGE_VERTICAL_RESOLUTION = PROPERTYKEY(GUID(1674987784, 40865, 18335, [133, 186, 153, 82, 33, 100, 71, 219]), 10);
enum WPD_DOCUMENT_OBJECT_PROPERTIES_V1 = GUID(0xb110203, 0xeb95, 0x4f02, [0x93, 0xe0, 0x97, 0xc6, 0x31, 0x49, 0x3a, 0xd5]);
enum WPD_MEDIA_PROPERTIES_V1 = GUID(0x2ed8ba05, 0xad3, 0x42dc, [0xb0, 0xd0, 0xbc, 0x95, 0xac, 0x39, 0x6a, 0xc8]);
enum WPD_MEDIA_TOTAL_BITRATE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 2);
enum WPD_MEDIA_BITRATE_TYPE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 3);
enum WPD_MEDIA_COPYRIGHT = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 4);
enum WPD_MEDIA_SUBSCRIPTION_CONTENT_ID = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 5);
enum WPD_MEDIA_USE_COUNT = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 6);
enum WPD_MEDIA_SKIP_COUNT = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 7);
enum WPD_MEDIA_LAST_ACCESSED_TIME = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 8);
enum WPD_MEDIA_PARENTAL_RATING = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 9);
enum WPD_MEDIA_META_GENRE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 10);
enum WPD_MEDIA_COMPOSER = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 11);
enum WPD_MEDIA_EFFECTIVE_RATING = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 12);
enum WPD_MEDIA_SUB_TITLE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 13);
enum WPD_MEDIA_RELEASE_DATE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 14);
enum WPD_MEDIA_SAMPLE_RATE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 15);
enum WPD_MEDIA_STAR_RATING = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 16);
enum WPD_MEDIA_USER_EFFECTIVE_RATING = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 17);
enum WPD_MEDIA_TITLE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 18);
enum WPD_MEDIA_DURATION = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 19);
enum WPD_MEDIA_BUY_NOW = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 20);
enum WPD_MEDIA_ENCODING_PROFILE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 21);
enum WPD_MEDIA_WIDTH = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 22);
enum WPD_MEDIA_HEIGHT = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 23);
enum WPD_MEDIA_ARTIST = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 24);
enum WPD_MEDIA_ALBUM_ARTIST = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 25);
enum WPD_MEDIA_OWNER = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 26);
enum WPD_MEDIA_MANAGING_EDITOR = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 27);
enum WPD_MEDIA_WEBMASTER = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 28);
enum WPD_MEDIA_SOURCE_URL = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 29);
enum WPD_MEDIA_DESTINATION_URL = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 30);
enum WPD_MEDIA_DESCRIPTION = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 31);
enum WPD_MEDIA_GENRE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 32);
enum WPD_MEDIA_TIME_BOOKMARK = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 33);
enum WPD_MEDIA_OBJECT_BOOKMARK = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 34);
enum WPD_MEDIA_LAST_BUILD_DATE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 35);
enum WPD_MEDIA_BYTE_BOOKMARK = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 36);
enum WPD_MEDIA_TIME_TO_LIVE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 37);
enum WPD_MEDIA_GUID = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 38);
enum WPD_MEDIA_SUB_DESCRIPTION = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 39);
enum WPD_MEDIA_AUDIO_ENCODING_PROFILE = PROPERTYKEY(GUID(785955333, 2771, 17116, [176, 208, 188, 149, 172, 57, 106, 200]), 49);
enum WPD_CONTACT_OBJECT_PROPERTIES_V1 = GUID(0xfbd4fdab, 0x987d, 0x4777, [0xb3, 0xf9, 0x72, 0x61, 0x85, 0xa9, 0x31, 0x2b]);
enum WPD_CONTACT_DISPLAY_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 2);
enum WPD_CONTACT_FIRST_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 3);
enum WPD_CONTACT_MIDDLE_NAMES = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 4);
enum WPD_CONTACT_LAST_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 5);
enum WPD_CONTACT_PREFIX = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 6);
enum WPD_CONTACT_SUFFIX = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 7);
enum WPD_CONTACT_PHONETIC_FIRST_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 8);
enum WPD_CONTACT_PHONETIC_LAST_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 9);
enum WPD_CONTACT_PERSONAL_FULL_POSTAL_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 10);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_LINE1 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 11);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_LINE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 12);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_CITY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 13);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_REGION = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 14);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_POSTAL_CODE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 15);
enum WPD_CONTACT_PERSONAL_POSTAL_ADDRESS_COUNTRY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 16);
enum WPD_CONTACT_BUSINESS_FULL_POSTAL_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 17);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_LINE1 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 18);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_LINE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 19);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_CITY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 20);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_REGION = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 21);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_POSTAL_CODE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 22);
enum WPD_CONTACT_BUSINESS_POSTAL_ADDRESS_COUNTRY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 23);
enum WPD_CONTACT_OTHER_FULL_POSTAL_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 24);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_LINE1 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 25);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_LINE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 26);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_CITY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 27);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_REGION = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 28);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_POSTAL_CODE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 29);
enum WPD_CONTACT_OTHER_POSTAL_ADDRESS_POSTAL_COUNTRY = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 30);
enum WPD_CONTACT_PRIMARY_EMAIL_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 31);
enum WPD_CONTACT_PERSONAL_EMAIL = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 32);
enum WPD_CONTACT_PERSONAL_EMAIL2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 33);
enum WPD_CONTACT_BUSINESS_EMAIL = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 34);
enum WPD_CONTACT_BUSINESS_EMAIL2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 35);
enum WPD_CONTACT_OTHER_EMAILS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 36);
enum WPD_CONTACT_PRIMARY_PHONE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 37);
enum WPD_CONTACT_PERSONAL_PHONE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 38);
enum WPD_CONTACT_PERSONAL_PHONE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 39);
enum WPD_CONTACT_BUSINESS_PHONE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 40);
enum WPD_CONTACT_BUSINESS_PHONE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 41);
enum WPD_CONTACT_MOBILE_PHONE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 42);
enum WPD_CONTACT_MOBILE_PHONE2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 43);
enum WPD_CONTACT_PERSONAL_FAX = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 44);
enum WPD_CONTACT_BUSINESS_FAX = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 45);
enum WPD_CONTACT_PAGER = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 46);
enum WPD_CONTACT_OTHER_PHONES = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 47);
enum WPD_CONTACT_PRIMARY_WEB_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 48);
enum WPD_CONTACT_PERSONAL_WEB_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 49);
enum WPD_CONTACT_BUSINESS_WEB_ADDRESS = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 50);
enum WPD_CONTACT_INSTANT_MESSENGER = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 51);
enum WPD_CONTACT_INSTANT_MESSENGER2 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 52);
enum WPD_CONTACT_INSTANT_MESSENGER3 = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 53);
enum WPD_CONTACT_COMPANY_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 54);
enum WPD_CONTACT_PHONETIC_COMPANY_NAME = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 55);
enum WPD_CONTACT_ROLE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 56);
enum WPD_CONTACT_BIRTHDATE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 57);
enum WPD_CONTACT_PRIMARY_FAX = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 58);
enum WPD_CONTACT_SPOUSE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 59);
enum WPD_CONTACT_CHILDREN = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 60);
enum WPD_CONTACT_ASSISTANT = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 61);
enum WPD_CONTACT_ANNIVERSARY_DATE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 62);
enum WPD_CONTACT_RINGTONE = PROPERTYKEY(GUID(4225039787, 39037, 18295, [179, 249, 114, 97, 133, 169, 49, 43]), 63);
enum WPD_MUSIC_OBJECT_PROPERTIES_V1 = GUID(0xb324f56a, 0xdc5d, 0x46e5, [0xb6, 0xdf, 0xd2, 0xea, 0x41, 0x48, 0x88, 0xc6]);
enum WPD_MUSIC_ALBUM = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 3);
enum WPD_MUSIC_TRACK = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 4);
enum WPD_MUSIC_LYRICS = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 6);
enum WPD_MUSIC_MOOD = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 8);
enum WPD_AUDIO_BITRATE = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 9);
enum WPD_AUDIO_CHANNEL_COUNT = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 10);
enum WPD_AUDIO_FORMAT_CODE = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 11);
enum WPD_AUDIO_BIT_DEPTH = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 12);
enum WPD_AUDIO_BLOCK_ALIGNMENT = PROPERTYKEY(GUID(3005543786, 56413, 18149, [182, 223, 210, 234, 65, 72, 136, 198]), 13);
enum WPD_VIDEO_OBJECT_PROPERTIES_V1 = GUID(0x346f2163, 0xf998, 0x4146, [0x8b, 0x1, 0xd1, 0x9b, 0x4c, 0x0, 0xde, 0x9a]);
enum WPD_VIDEO_AUTHOR = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 2);
enum WPD_VIDEO_RECORDEDTV_STATION_NAME = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 4);
enum WPD_VIDEO_RECORDEDTV_CHANNEL_NUMBER = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 5);
enum WPD_VIDEO_RECORDEDTV_REPEAT = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 7);
enum WPD_VIDEO_BUFFER_SIZE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 8);
enum WPD_VIDEO_CREDITS = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 9);
enum WPD_VIDEO_KEY_FRAME_DISTANCE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 10);
enum WPD_VIDEO_QUALITY_SETTING = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 11);
enum WPD_VIDEO_SCAN_TYPE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 12);
enum WPD_VIDEO_BITRATE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 13);
enum WPD_VIDEO_FOURCC_CODE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 14);
enum WPD_VIDEO_FRAMERATE = PROPERTYKEY(GUID(879698275, 63896, 16710, [139, 1, 209, 155, 76, 0, 222, 154]), 15);
enum WPD_COMMON_INFORMATION_OBJECT_PROPERTIES_V1 = GUID(0xb28ae94b, 0x5a4, 0x4e8e, [0xbe, 0x1, 0x72, 0xcc, 0x7e, 0x9, 0x9d, 0x8f]);
enum WPD_COMMON_INFORMATION_SUBJECT = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 2);
enum WPD_COMMON_INFORMATION_BODY_TEXT = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 3);
enum WPD_COMMON_INFORMATION_PRIORITY = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 4);
enum WPD_COMMON_INFORMATION_START_DATETIME = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 5);
enum WPD_COMMON_INFORMATION_END_DATETIME = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 6);
enum WPD_COMMON_INFORMATION_NOTES = PROPERTYKEY(GUID(2995448139, 1444, 20110, [190, 1, 114, 204, 126, 9, 157, 143]), 7);
enum WPD_MEMO_OBJECT_PROPERTIES_V1 = GUID(0x5ffbfc7b, 0x7483, 0x41ad, [0xaf, 0xb9, 0xda, 0x3f, 0x4e, 0x59, 0x2b, 0x8d]);
enum WPD_EMAIL_OBJECT_PROPERTIES_V1 = GUID(0x41f8f65a, 0x5484, 0x4782, [0xb1, 0x3d, 0x47, 0x40, 0xdd, 0x7c, 0x37, 0xc5]);
enum WPD_EMAIL_TO_LINE = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 2);
enum WPD_EMAIL_CC_LINE = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 3);
enum WPD_EMAIL_BCC_LINE = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 4);
enum WPD_EMAIL_HAS_BEEN_READ = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 7);
enum WPD_EMAIL_RECEIVED_TIME = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 8);
enum WPD_EMAIL_HAS_ATTACHMENTS = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 9);
enum WPD_EMAIL_SENDER_ADDRESS = PROPERTYKEY(GUID(1106835034, 21636, 18306, [177, 61, 71, 64, 221, 124, 55, 197]), 10);
enum WPD_APPOINTMENT_OBJECT_PROPERTIES_V1 = GUID(0xf99efd03, 0x431d, 0x40d8, [0xa1, 0xc9, 0x4e, 0x22, 0xd, 0x9c, 0x88, 0xd3]);
enum WPD_APPOINTMENT_LOCATION = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 3);
enum WPD_APPOINTMENT_TYPE = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 7);
enum WPD_APPOINTMENT_REQUIRED_ATTENDEES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 8);
enum WPD_APPOINTMENT_OPTIONAL_ATTENDEES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 9);
enum WPD_APPOINTMENT_ACCEPTED_ATTENDEES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 10);
enum WPD_APPOINTMENT_RESOURCES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 11);
enum WPD_APPOINTMENT_TENTATIVE_ATTENDEES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 12);
enum WPD_APPOINTMENT_DECLINED_ATTENDEES = PROPERTYKEY(GUID(4187946243, 17181, 16600, [161, 201, 78, 34, 13, 156, 136, 211]), 13);
enum WPD_TASK_OBJECT_PROPERTIES_V1 = GUID(0xe354e95e, 0xd8a0, 0x4637, [0xa0, 0x3a, 0xc, 0xb2, 0x68, 0x38, 0xdb, 0xc7]);
enum WPD_TASK_STATUS = PROPERTYKEY(GUID(3813992798, 55456, 17975, [160, 58, 12, 178, 104, 56, 219, 199]), 6);
enum WPD_TASK_PERCENT_COMPLETE = PROPERTYKEY(GUID(3813992798, 55456, 17975, [160, 58, 12, 178, 104, 56, 219, 199]), 8);
enum WPD_TASK_REMINDER_DATE = PROPERTYKEY(GUID(3813992798, 55456, 17975, [160, 58, 12, 178, 104, 56, 219, 199]), 10);
enum WPD_TASK_OWNER = PROPERTYKEY(GUID(3813992798, 55456, 17975, [160, 58, 12, 178, 104, 56, 219, 199]), 11);
enum WPD_SMS_OBJECT_PROPERTIES_V1 = GUID(0x7e1074cc, 0x50ff, 0x4dd1, [0xa7, 0x42, 0x53, 0xbe, 0x6f, 0x9, 0x3a, 0xd]);
enum WPD_SMS_PROVIDER = PROPERTYKEY(GUID(2115007692, 20735, 19921, [167, 66, 83, 190, 111, 9, 58, 13]), 2);
enum WPD_SMS_TIMEOUT = PROPERTYKEY(GUID(2115007692, 20735, 19921, [167, 66, 83, 190, 111, 9, 58, 13]), 3);
enum WPD_SMS_MAX_PAYLOAD = PROPERTYKEY(GUID(2115007692, 20735, 19921, [167, 66, 83, 190, 111, 9, 58, 13]), 4);
enum WPD_SMS_ENCODING = PROPERTYKEY(GUID(2115007692, 20735, 19921, [167, 66, 83, 190, 111, 9, 58, 13]), 5);
enum WPD_SECTION_OBJECT_PROPERTIES_V1 = GUID(0x516afd2b, 0xc64e, 0x44f0, [0x98, 0xdc, 0xbe, 0xe1, 0xc8, 0x8f, 0x7d, 0x66]);
enum WPD_SECTION_DATA_OFFSET = PROPERTYKEY(GUID(1365966123, 50766, 17648, [152, 220, 190, 225, 200, 143, 125, 102]), 2);
enum WPD_SECTION_DATA_LENGTH = PROPERTYKEY(GUID(1365966123, 50766, 17648, [152, 220, 190, 225, 200, 143, 125, 102]), 3);
enum WPD_SECTION_DATA_UNITS = PROPERTYKEY(GUID(1365966123, 50766, 17648, [152, 220, 190, 225, 200, 143, 125, 102]), 4);
enum WPD_SECTION_DATA_REFERENCED_OBJECT_RESOURCE = PROPERTYKEY(GUID(1365966123, 50766, 17648, [152, 220, 190, 225, 200, 143, 125, 102]), 5);
enum NAME_Undefined = "Undefined";
enum NAME_Association = "Association";
enum NAME_DeviceScript = "DeviceScript";
enum NAME_DeviceExecutable = "DeviceExecutable";
enum NAME_TextDocument = "TextDocument";
enum NAME_HTMLDocument = "HTMLDocument";
enum NAME_DPOFDocument = "DPOFDocument";
enum NAME_AIFFFile = "AIFFFile";
enum NAME_WAVFile = "WAVFile";
enum NAME_MP3File = "MP3File";
enum NAME_AVIFile = "AVIFile";
enum NAME_MPEGFile = "MPEGFile";
enum NAME_ASFFile = "ASFFile";
enum NAME_UnknownImage = "UnknownImage";
enum NAME_EXIFImage = "EXIFImage";
enum NAME_TIFFEPImage = "TIFFEPImage";
enum NAME_FlashPixImage = "FlashPixImage";
enum NAME_BMPImage = "BMPImage";
enum NAME_CIFFImage = "CIFFImage";
enum NAME_GIFImage = "GIFImage";
enum NAME_JFIFImage = "JFIFImage";
enum NAME_PCDImage = "PCDImage";
enum NAME_PICTImage = "PICTImage";
enum NAME_PNGImage = "PNGImage";
enum NAME_TIFFImage = "TIFFImage";
enum NAME_TIFFITImage = "TIFFITImage";
enum NAME_JP2Image = "JP2Image";
enum NAME_JPXImage = "JPXImage";
enum NAME_FirmwareFile = "FirmwareFile";
enum NAME_WBMPImage = "WBMPImage";
enum NAME_JPEGXRImage = "JPEGXRImage";
enum NAME_HDPhotoImage = "HDPhotoImage";
enum NAME_UndefinedAudio = "UndefinedAudio";
enum NAME_WMAFile = "WMAFile";
enum NAME_OGGFile = "OGGFile";
enum NAME_AACFile = "AACFile";
enum NAME_AudibleFile = "AudibleFile";
enum NAME_FLACFile = "FLACFile";
enum NAME_QCELPFile = "QCELPFile";
enum NAME_AMRFile = "AMRFile";
enum NAME_UndefinedVideo = "UndefinedVideo";
enum NAME_WMVFile = "WMVFile";
enum NAME_MPEG4File = "MPEG4File";
enum NAME_MPEG2File = "MPEG2File";
enum NAME_3GPPFile = "3GPPFile";
enum NAME_3GPP2File = "3GPP2File";
enum NAME_AVCHDFile = "AVCHDFile";
enum NAME_ATSCTSFile = "ATSCTSFile";
enum NAME_DVBTSFile = "DVBTSFile";
enum NAME_UndefinedCollection = "UndefinedCollection";
enum NAME_AbstractMultimediaAlbum = "AbstractMultimediaAlbum";
enum NAME_AbstractImageAlbum = "AbstractImageAlbum";
enum NAME_AbstractAudioAlbum = "AbstractAudioAlbum";
enum NAME_AbstractVideoAlbum = "AbstractVideoAlbum";
enum NAME_AbstractAudioVideoAlbum = "AbstractAudioVideoAlbum";
enum NAME_AbstractChapteredProduction = "AbstractChapteredProduction";
enum NAME_AbstractAudioPlaylist = "AbstractAudioPlaylist";
enum NAME_AbstractVideoPlaylist = "AbstractVideoPlaylist";
enum NAME_AbstractMediacast = "AbstractMediacast";
enum NAME_WPLPlaylist = "WPLPlaylist";
enum NAME_M3UPlaylist = "M3UPlaylist";
enum NAME_MPLPlaylist = "MPLPlaylist";
enum NAME_ASXPlaylist = "ASXPlaylist";
enum NAME_PSLPlaylist = "PSLPlaylist";
enum NAME_UndefinedDocument = "UndefinedDocument";
enum NAME_AbstractDocument = "AbstractDocument";
enum NAME_XMLDocument = "XMLDocument";
enum NAME_WordDocument = "WordDocument";
enum NAME_MHTDocument = "MHTDocument";
enum NAME_ExcelDocument = "ExcelDocument";
enum NAME_PowerPointDocument = "PowerPointDocument";
enum NAME_GenericObj_ObjectID = "ObjectID";
enum NAME_GenericObj_ReferenceParentID = "ReferenceParentID";
enum NAME_GenericObj_StorageID = "StorageID";
enum NAME_GenericObj_ObjectFormat = "ObjectFormat";
enum NAME_GenericObj_ProtectionStatus = "ProtectionStatus";
enum NAME_GenericObj_ObjectSize = "ObjectSize";
enum NAME_GenericObj_AssociationType = "AssociationType";
enum NAME_GenericObj_AssociationDesc = "AssociationDesc";
enum NAME_GenericObj_ObjectFileName = "ObjectFileName";
enum NAME_GenericObj_DateCreated = "DateCreated";
enum NAME_GenericObj_DateModified = "DateModified";
enum NAME_GenericObj_Keywords = "Keywords";
enum NAME_GenericObj_ParentID = "ParentID";
enum NAME_GenericObj_AllowedFolderContents = "AllowedFolderContents";
enum NAME_GenericObj_Hidden = "Hidden";
enum NAME_GenericObj_SystemObject = "SystemObject";
enum NAME_GenericObj_PersistentUID = "PersistentUID";
enum NAME_GenericObj_SyncID = "SyncID";
enum NAME_GenericObj_PropertyBag = "PropertyBag";
enum NAME_GenericObj_Name = "Name";
enum NAME_MediaObj_Artist = "Artist";
enum NAME_GenericObj_DateAuthored = "DateAuthored";
enum NAME_GenericObj_Description = "Description";
enum NAME_GenericObj_LanguageLocale = "LanguageLocale";
enum NAME_GenericObj_Copyright = "Copyright";
enum NAME_VideoObj_Source = "Source";
enum NAME_MediaObj_GeographicOrigin = "GeographicOrigin";
enum NAME_GenericObj_DateAdded = "DateAdded";
enum NAME_GenericObj_NonConsumable = "NonConsumable";
enum NAME_GenericObj_Corrupt = "Corrupt";
enum NAME_MediaObj_Width = "Width";
enum NAME_MediaObj_Height = "Height";
enum NAME_MediaObj_Duration = "Duration";
enum NAME_MediaObj_UserRating = "UserRating";
enum NAME_MediaObj_Track = "Track";
enum NAME_MediaObj_Genre = "Genre";
enum NAME_MediaObj_Credits = "Credits";
enum NAME_AudioObj_Lyrics = "Lyrics";
enum NAME_MediaObj_SubscriptionContentID = "SubscriptionContentID";
enum NAME_MediaObj_Producer = "Producer";
enum NAME_MediaObj_UseCount = "UseCount";
enum NAME_MediaObj_SkipCount = "SkipCount";
enum NAME_GenericObj_DateAccessed = "DateAccessed";
enum NAME_MediaObj_ParentalRating = "ParentalRating";
enum NAME_MediaObj_MediaType = "MediaType";
enum NAME_MediaObj_Composer = "Composer";
enum NAME_MediaObj_EffectiveRating = "EffectiveRating";
enum NAME_MediaObj_Subtitle = "Subtitle";
enum NAME_MediaObj_DateOriginalRelease = "DateOriginalRelease";
enum NAME_MediaObj_AlbumName = "AlbumName";
enum NAME_MediaObj_AlbumArtist = "AlbumArtist";
enum NAME_MediaObj_Mood = "Mood";
enum NAME_GenericObj_DRMStatus = "DRMStatus";
enum NAME_GenericObj_SubDescription = "SubDescription";
enum NAME_ImageObj_IsCropped = "IsCropped";
enum NAME_ImageObj_IsColorCorrected = "IsColorCorrected";
enum NAME_ImageObj_ImageBitDepth = "ImageBitDepth";
enum NAME_ImageObj_Aperature = "Aperature";
enum NAME_ImageObj_Exposure = "Exposure";
enum NAME_ImageObj_ISOSpeed = "ISOSpeed";
enum NAME_MediaObj_Owner = "Owner";
enum NAME_MediaObj_Editor = "Editor";
enum NAME_MediaObj_WebMaster = "WebMaster";
enum NAME_MediaObj_URLSource = "URLSource";
enum NAME_MediaObj_URLLink = "URLLink";
enum NAME_MediaObj_BookmarkTime = "BookmarkTime";
enum NAME_MediaObj_BookmarkObject = "BookmarkObject";
enum NAME_MediaObj_BookmarkByte = "BookmarkByte";
enum NAME_GenericObj_DateRevised = "DateRevised";
enum NAME_GenericObj_TimeToLive = "TimeToLive";
enum NAME_MediaObj_MediaUID = "MediaUID";
enum NAME_MediaObj_TotalBitRate = "TotalBitRate";
enum NAME_MediaObj_BitRateType = "BitRateType";
enum NAME_MediaObj_SampleRate = "SampleRate";
enum NAME_AudioObj_Channels = "Channels";
enum NAME_AudioObj_AudioBitDepth = "AudioBitDepth";
enum NAME_AudioObj_AudioBlockAlignment = "AudioBlockAlignment";
enum NAME_VideoObj_ScanType = "ScanType";
enum NAME_AudioObj_AudioFormatCode = "AudioFormatCode";
enum NAME_AudioObj_AudioBitRate = "AudioBitRate";
enum NAME_VideoObj_VideoFormatCode = "VideoFormatCode";
enum NAME_VideoObj_VideoBitRate = "VideoBitRate";
enum NAME_VideoObj_VideoFrameRate = "VideoFrameRate";
enum NAME_VideoObj_KeyFrameDistance = "KeyFrameDistance";
enum NAME_MediaObj_BufferSize = "BufferSize";
enum NAME_MediaObj_EncodingQuality = "EncodingQuality";
enum NAME_MediaObj_EncodingProfile = "EncodingProfile";
enum NAME_MediaObj_AudioEncodingProfile = "AudioEncodingProfile";
enum DEVSVC_SERVICEINFO_VERSION = 0x00000064;
enum DEVSVCTYPE_DEFAULT = 0x00000000;
enum DEVSVCTYPE_ABSTRACT = 0x00000001;
enum NAME_Services_ServiceDisplayName = "ServiceDisplayName";
enum NAME_Services_ServiceIcon = "ServiceIcon";
enum NAME_Services_ServiceLocale = "ServiceLocale";
enum NAME_CalendarSvc = "Calendar";
enum TYPE_CalendarSvc = 0x00000000;
enum NAME_CalendarSvc_SyncWindowStart = "SyncWindowStart";
enum NAME_CalendarSvc_SyncWindowEnd = "SyncWindowEnd";
enum NAME_AbstractActivity = "AbstractActivity";
enum NAME_AbstractActivityOccurrence = "AbstractActivityOccurrence";
enum NAME_VCalendar1Activity = "VCalendar1";
enum NAME_ICalendarActivity = "ICalendar";
enum NAME_CalendarObj_Location = "Location";
enum NAME_CalendarObj_Accepted = "Accepted";
enum NAME_CalendarObj_Tentative = "Tentative";
enum NAME_CalendarObj_Declined = "Declined";
enum NAME_CalendarObj_TimeZone = "TimeZone";
enum NAME_CalendarObj_ReminderOffset = "ReminderOffset";
enum NAME_CalendarObj_BusyStatus = "BusyStatus";
enum ENUM_CalendarObj_BusyStatusFree = 0x00000000;
enum ENUM_CalendarObj_BusyStatusBusy = 0x00000001;
enum ENUM_CalendarObj_BusyStatusOutOfOffice = 0x00000002;
enum ENUM_CalendarObj_BusyStatusTentative = 0x00000003;
enum NAME_CalendarObj_PatternStartTime = "PatternStartTime";
enum NAME_CalendarObj_PatternDuration = "PatternDuration";
enum NAME_CalendarObj_BeginDateTime = "BeginDateTime";
enum NAME_CalendarObj_EndDateTime = "EndDateTime";
enum NAME_HintsSvc = "Hints";
enum TYPE_HintsSvc = 0x00000000;
enum NAME_MessageSvc = "Message";
enum TYPE_MessageSvc = 0x00000000;
enum NAME_AbstractMessage = "AbstractMessage";
enum NAME_AbstractMessageFolder = "AbstractMessageFolder";
enum NAME_MessageObj_Subject = "Subject";
enum NAME_MessageObj_Body = "Body";
enum NAME_MessageObj_Priority = "Priority";
enum ENUM_MessageObj_PriorityHighest = 0x00000002;
enum ENUM_MessageObj_PriorityNormal = 0x00000001;
enum ENUM_MessageObj_PriorityLowest = 0x00000000;
enum NAME_MessageObj_Category = "Category";
enum NAME_MessageObj_Sender = "Sender";
enum NAME_MessageObj_To = "To";
enum NAME_MessageObj_CC = "CC";
enum NAME_MessageObj_BCC = "BCC";
enum NAME_MessageObj_Read = "Read";
enum ENUM_MessageObj_ReadFalse = 0x00000000;
enum ENUM_MessageObj_ReadTrue = 0x000000ff;
enum NAME_MessageObj_ReceivedTime = "ReceivedTime";
enum NAME_MessageObj_PatternOriginalDateTime = "PatternOriginalDateTime";
enum NAME_MessageObj_PatternType = "PatternType";
enum ENUM_MessageObj_PatternTypeDaily = 0x00000001;
enum ENUM_MessageObj_PatternTypeWeekly = 0x00000002;
enum ENUM_MessageObj_PatternTypeMonthly = 0x00000003;
enum ENUM_MessageObj_PatternTypeYearly = 0x00000004;
enum NAME_MessageObj_PatternValidStartDate = "PatternValidStartDate";
enum NAME_MessageObj_PatternValidEndDate = "PatternValidEndDate";
enum NAME_MessageObj_PatternPeriod = "PatternPeriod";
enum NAME_MessageObj_PatternDayOfWeek = "PatternDayOfWeek";
enum FLAG_MessageObj_DayOfWeekNone = 0x00000000;
enum FLAG_MessageObj_DayOfWeekSunday = 0x00000001;
enum FLAG_MessageObj_DayOfWeekMonday = 0x00000002;
enum FLAG_MessageObj_DayOfWeekTuesday = 0x00000004;
enum FLAG_MessageObj_DayOfWeekWednesday = 0x00000008;
enum FLAG_MessageObj_DayOfWeekThursday = 0x00000010;
enum FLAG_MessageObj_DayOfWeekFriday = 0x00000020;
enum FLAG_MessageObj_DayOfWeekSaturday = 0x00000040;
enum NAME_MessageObj_PatternDayOfMonth = "PatternDayOfMonth";
enum RANGEMIN_MessageObj_PatternDayOfMonth = 0x00000001;
enum RANGEMAX_MessageObj_PatternDayOfMonth = 0x0000001f;
enum RANGESTEP_MessageObj_PatternDayOfMonth = 0x00000001;
enum NAME_MessageObj_PatternMonthOfYear = "PatternMonthOfYear";
enum RANGEMIN_MessageObj_PatternMonthOfYear = 0x00000001;
enum RANGEMAX_MessageObj_PatternMonthOfYear = 0x0000000c;
enum RANGESTEP_MessageObj_PatternMonthOfYear = 0x00000001;
enum NAME_MessageObj_PatternInstance = "PatternInstance";
enum ENUM_MessageObj_PatternInstanceNone = 0x00000000;
enum ENUM_MessageObj_PatternInstanceFirst = 0x00000001;
enum ENUM_MessageObj_PatternInstanceSecond = 0x00000002;
enum ENUM_MessageObj_PatternInstanceThird = 0x00000003;
enum ENUM_MessageObj_PatternInstanceFourth = 0x00000004;
enum ENUM_MessageObj_PatternInstanceLast = 0x00000005;
enum NAME_MessageObj_PatternDeleteDates = "PatternDeleteDates";
enum NAME_DeviceMetadataSvc = "Metadata";
enum TYPE_DeviceMetadataSvc = 0x00000000;
enum NAME_DeviceMetadataCAB = "DeviceMetadataCAB";
enum NAME_DeviceMetadataObj_ContentID = "ContentID";
enum NAME_DeviceMetadataObj_DefaultCAB = "DefaultCAB";
enum ENUM_DeviceMetadataObj_DefaultCABFalse = 0x00000000;
enum ENUM_DeviceMetadataObj_DefaultCABTrue = 0x00000001;
enum NAME_NotesSvc = "Notes";
enum TYPE_NotesSvc = 0x00000000;
enum NAME_AbstractNote = "AbstractNote";
enum NAME_StatusSvc = "Status";
enum TYPE_StatusSvc = 0x00000000;
enum NAME_StatusSvc_SignalStrength = "SignalStrength";
enum RANGEMIN_StatusSvc_SignalStrength = 0x00000000;
enum RANGEMAX_StatusSvc_SignalStrength = 0x00000004;
enum RANGESTEP_StatusSvc_SignalStrength = 0x00000001;
enum NAME_StatusSvc_TextMessages = "TextMessages";
enum RANGEMAX_StatusSvc_TextMessages = 0x000000ff;
enum NAME_StatusSvc_NewPictures = "NewPictures";
enum RANGEMAX_StatusSvc_NewPictures = 0x0000ffff;
enum NAME_StatusSvc_MissedCalls = "MissedCalls";
enum RANGEMAX_StatusSvc_MissedCalls = 0x000000ff;
enum NAME_StatusSvc_VoiceMail = "VoiceMail";
enum RANGEMAX_StatusSvc_VoiceMail = 0x000000ff;
enum NAME_StatusSvc_NetworkName = "NetworkName";
enum NAME_StatusSvc_NetworkType = "NetworkType";
enum NAME_StatusSvc_Roaming = "Roaming";
enum ENUM_StatusSvc_RoamingInactive = 0x00000000;
enum ENUM_StatusSvc_RoamingActive = 0x00000001;
enum ENUM_StatusSvc_RoamingUnknown = 0x00000002;
enum NAME_StatusSvc_BatteryLife = "BatteryLife";
enum RANGEMIN_StatusSvc_BatteryLife = 0x00000000;
enum RANGEMAX_StatusSvc_BatteryLife = 0x00000064;
enum RANGESTEP_StatusSvc_BatteryLife = 0x00000001;
enum NAME_StatusSvc_ChargingState = "ChargingState";
enum ENUM_StatusSvc_ChargingInactive = 0x00000000;
enum ENUM_StatusSvc_ChargingActive = 0x00000001;
enum ENUM_StatusSvc_ChargingUnknown = 0x00000002;
enum NAME_StatusSvc_StorageCapacity = "StorageCapacity";
enum NAME_StatusSvc_StorageFreeSpace = "StorageFreeSpace";
enum NAME_SyncSvc_SyncFormat = "SyncFormat";
enum NAME_SyncSvc_LocalOnlyDelete = "LocalOnlyDelete";
enum NAME_SyncSvc_FilterType = "FilterType";
enum SYNCSVC_FILTER_NONE = 0x00000000;
enum SYNCSVC_FILTER_CONTACTS_WITH_PHONE = 0x00000001;
enum SYNCSVC_FILTER_TASK_ACTIVE = 0x00000002;
enum SYNCSVC_FILTER_CALENDAR_WINDOW_WITH_RECURRENCE = 0x00000003;
enum NAME_SyncSvc_SyncObjectReferences = "SyncObjectReferences";
enum ENUM_SyncSvc_SyncObjectReferencesDisabled = 0x00000000;
enum ENUM_SyncSvc_SyncObjectReferencesEnabled = 0x000000ff;
enum NAME_SyncObj_LastAuthorProxyID = "LastAuthorProxyID";
enum NAME_SyncSvc_BeginSync = "BeginSync";
enum NAME_SyncSvc_EndSync = "EndSync";
enum NAME_TasksSvc = "Tasks";
enum TYPE_TasksSvc = 0x00000000;
enum NAME_TasksSvc_SyncActiveOnly = "FilterType";
enum NAME_AbstractTask = "AbstractTask";
enum NAME_TaskObj_ReminderDateTime = "ReminderDateTime";
enum NAME_TaskObj_Complete = "Complete";
enum ENUM_TaskObj_CompleteFalse = 0x00000000;
enum ENUM_TaskObj_CompleteTrue = 0x000000ff;
enum NAME_TaskObj_BeginDate = "BeginDate";
enum NAME_TaskObj_EndDate = "EndDate";
enum WPD_CATEGORY_MTP_EXT_VENDOR_OPERATIONS = GUID(0x4d545058, 0x1a2e, 0x4106, [0xa3, 0x57, 0x77, 0x1e, 0x8, 0x19, 0xfc, 0x56]);
enum WPD_COMMAND_MTP_EXT_GET_SUPPORTED_VENDOR_OPCODES = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 11);
enum WPD_COMMAND_MTP_EXT_EXECUTE_COMMAND_WITHOUT_DATA_PHASE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 12);
enum WPD_COMMAND_MTP_EXT_EXECUTE_COMMAND_WITH_DATA_TO_READ = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 13);
enum WPD_COMMAND_MTP_EXT_EXECUTE_COMMAND_WITH_DATA_TO_WRITE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 14);
enum WPD_COMMAND_MTP_EXT_READ_DATA = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 15);
enum WPD_COMMAND_MTP_EXT_WRITE_DATA = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 16);
enum WPD_COMMAND_MTP_EXT_END_DATA_TRANSFER = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 17);
enum WPD_COMMAND_MTP_EXT_GET_VENDOR_EXTENSION_DESCRIPTION = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 18);
enum WPD_PROPERTY_MTP_EXT_OPERATION_CODE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1001);
enum WPD_PROPERTY_MTP_EXT_OPERATION_PARAMS = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1002);
enum WPD_PROPERTY_MTP_EXT_RESPONSE_CODE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1003);
enum WPD_PROPERTY_MTP_EXT_RESPONSE_PARAMS = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1004);
enum WPD_PROPERTY_MTP_EXT_VENDOR_OPERATION_CODES = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1005);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_CONTEXT = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1006);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_TOTAL_DATA_SIZE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1007);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_NUM_BYTES_TO_READ = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1008);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_NUM_BYTES_READ = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1009);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_NUM_BYTES_TO_WRITE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1010);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_NUM_BYTES_WRITTEN = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1011);
enum WPD_PROPERTY_MTP_EXT_TRANSFER_DATA = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1012);
enum WPD_PROPERTY_MTP_EXT_OPTIMAL_TRANSFER_BUFFER_SIZE = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1013);
enum WPD_PROPERTY_MTP_EXT_VENDOR_EXTENSION_DESCRIPTION = PROPERTYKEY(GUID(1297371224, 6702, 16646, [163, 87, 119, 30, 8, 25, 252, 86]), 1014);
enum WPD_PROPERTIES_MTP_VENDOR_EXTENDED_OBJECT_PROPS = GUID(0x4d545058, 0x4fce, 0x4578, [0x95, 0xc8, 0x86, 0x98, 0xa9, 0xbc, 0xf, 0x49]);
enum WPD_PROPERTIES_MTP_VENDOR_EXTENDED_DEVICE_PROPS = GUID(0x4d545058, 0x8900, 0x40b3, [0x8f, 0x1d, 0xdc, 0x24, 0x6e, 0x1e, 0x83, 0x70]);
enum WPD_EVENT_MTP_VENDOR_EXTENDED_EVENTS = GUID(0x0, 0x5738, 0x4ff2, [0x84, 0x45, 0xbe, 0x31, 0x26, 0x69, 0x10, 0x59]);
enum WPD_PROPERTY_MTP_EXT_EVENT_PARAMS = PROPERTYKEY(GUID(1297371224, 61320, 20045, [149, 195, 79, 50, 127, 114, 138, 150]), 1011);
enum CLSID_WPD_NAMESPACE_EXTENSION = GUID(0x35786d3c, 0xb075, 0x49b9, [0x88, 0xdd, 0x2, 0x98, 0x76, 0xe1, 0x1c, 0x1]);
enum WPDNSE_OBJECT_PROPERTIES_V1 = GUID(0x34d71409, 0x4b47, 0x4d80, [0xaa, 0xac, 0x3a, 0x28, 0xa4, 0xa3, 0xb3, 0xe6]);
enum WPDNSE_OBJECT_HAS_CONTACT_PHOTO = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 2);
enum WPDNSE_OBJECT_HAS_THUMBNAIL = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 3);
enum WPDNSE_OBJECT_HAS_ICON = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 4);
enum WPDNSE_OBJECT_HAS_AUDIO_CLIP = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 5);
enum WPDNSE_OBJECT_HAS_ALBUM_ART = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 6);
enum WPDNSE_OBJECT_OPTIMAL_READ_BLOCK_SIZE = PROPERTYKEY(GUID(886510601, 19271, 19840, [170, 172, 58, 40, 164, 163, 179, 230]), 7);
enum WPDNSE_PROPSHEET_DEVICE_GENERAL = 0x00000001;
enum WPDNSE_PROPSHEET_STORAGE_GENERAL = 0x00000002;
enum WPDNSE_PROPSHEET_CONTENT_GENERAL = 0x00000004;
enum WPDNSE_PROPSHEET_CONTENT_REFERENCES = 0x00000008;
enum WPDNSE_PROPSHEET_CONTENT_RESOURCES = 0x00000010;
enum WPDNSE_PROPSHEET_CONTENT_DETAILS = 0x00000020;
enum STR_WPDNSE_FAST_ENUM = "WPDNSE Fast Enum";
enum STR_WPDNSE_SIMPLE_ITEM = "WPDNSE SimpleItem";
enum NAME_ContactsSvc = "Contacts";
enum TYPE_ContactsSvc = 0x00000000;
enum NAME_ContactSvc_SyncWithPhoneOnly = "FilterType";
enum NAME_AbstractContact = "AbstractContact";
enum NAME_VCard2Contact = "VCard2Contact";
enum NAME_VCard3Contact = "VCard3Contact";
enum NAME_AbstractContactGroup = "AbstractContactGroup";
enum NAME_ContactObj_GivenName = "GivenName";
enum NAME_ContactObj_MiddleNames = "MiddleNames";
enum NAME_ContactObj_FamilyName = "FamilyName";
enum NAME_ContactObj_Title = "Title";
enum NAME_ContactObj_Suffix = "Suffix";
enum NAME_ContactObj_PhoneticGivenName = "PhoneticGivenName";
enum NAME_ContactObj_PhoneticFamilyName = "PhoneticFamilyName";
enum NAME_ContactObj_PersonalAddressFull = "PersonalAddressFull";
enum NAME_ContactObj_PersonalAddressStreet = "PersonalAddressStreet";
enum NAME_ContactObj_PersonalAddressLine2 = "PersonalAddressLine2";
enum NAME_ContactObj_PersonalAddressCity = "PersonalAddressCity";
enum NAME_ContactObj_PersonalAddressRegion = "PersonalAddressRegion";
enum NAME_ContactObj_PersonalAddressPostalCode = "PersonalAddressPostalCode";
enum NAME_ContactObj_PersonalAddressCountry = "PersonalAddressCountry";
enum NAME_ContactObj_BusinessAddressFull = "BusinessAddressFull";
enum NAME_ContactObj_BusinessAddressStreet = "BusinessAddressStreet";
enum NAME_ContactObj_BusinessAddressLine2 = "BusinessAddressLine2";
enum NAME_ContactObj_BusinessAddressCity = "BusinessAddressCity";
enum NAME_ContactObj_BusinessAddressRegion = "BusinessAddressRegion";
enum NAME_ContactObj_BusinessAddressPostalCode = "BusinessAddressPostalCode";
enum NAME_ContactObj_BusinessAddressCountry = "BusinessAddressCountry";
enum NAME_ContactObj_OtherAddressFull = "OtherAddressFull";
enum NAME_ContactObj_OtherAddressStreet = "OtherAddressStreet";
enum NAME_ContactObj_OtherAddressLine2 = "OtherAddressLine2";
enum NAME_ContactObj_OtherAddressCity = "OtherAddressCity";
enum NAME_ContactObj_OtherAddressRegion = "OtherAddressRegion";
enum NAME_ContactObj_OtherAddressPostalCode = "OtherAddressPostalCode";
enum NAME_ContactObj_OtherAddressCountry = "OtherAddressCountry";
enum NAME_ContactObj_Email = "Email";
enum NAME_ContactObj_PersonalEmail = "PersonalEmail";
enum NAME_ContactObj_PersonalEmail2 = "PersonalEmail2";
enum NAME_ContactObj_BusinessEmail = "BusinessEmail";
enum NAME_ContactObj_BusinessEmail2 = "BusinessEmail2";
enum NAME_ContactObj_OtherEmail = "OtherEmail";
enum NAME_ContactObj_Phone = "Phone";
enum NAME_ContactObj_PersonalPhone = "PersonalPhone";
enum NAME_ContactObj_PersonalPhone2 = "PersonalPhone2";
enum NAME_ContactObj_BusinessPhone = "BusinessPhone";
enum NAME_ContactObj_BusinessPhone2 = "BusinessPhone2";
enum NAME_ContactObj_MobilePhone = "MobilePhone";
enum NAME_ContactObj_MobilePhone2 = "MobilePhone2";
enum NAME_ContactObj_PersonalFax = "PersonalFax";
enum NAME_ContactObj_BusinessFax = "BusinessFax";
enum NAME_ContactObj_Pager = "Pager";
enum NAME_ContactObj_OtherPhone = "OtherPhone";
enum NAME_ContactObj_WebAddress = "WebAddress";
enum NAME_ContactObj_PersonalWebAddress = "PersonalWebAddress";
enum NAME_ContactObj_BusinessWebAddress = "BusinessWebAddress";
enum NAME_ContactObj_IMAddress = "IMAddress";
enum NAME_ContactObj_IMAddress2 = "IMAddress2";
enum NAME_ContactObj_IMAddress3 = "IMAddress3";
enum NAME_ContactObj_Organization = "Organization";
enum NAME_ContactObj_PhoneticOrganization = "PhoneticOrganization";
enum NAME_ContactObj_Role = "Role";
enum NAME_ContactObj_Fax = "Fax";
enum NAME_ContactObj_Spouse = "Spouse";
enum NAME_ContactObj_Children = "Children";
enum NAME_ContactObj_Assistant = "Assistant";
enum NAME_ContactObj_Ringtone = "Ringtone";
enum NAME_ContactObj_Birthdate = "Birthdate";
enum NAME_ContactObj_AnniversaryDate = "AnniversaryDate";
enum NAME_RingtonesSvc = "Ringtones";
enum TYPE_RingtonesSvc = 0x00000000;
enum NAME_RingtonesSvc_DefaultRingtone = "DefaultRingtone";
enum NAME_AnchorSyncSvc = "AnchorSync";
enum TYPE_AnchorSyncSvc = 0x00000001;
enum NAME_AnchorSyncSvc_VersionProps = "AnchorVersionProps";
enum NAME_AnchorSyncSvc_ReplicaID = "AnchorReplicaID";
enum NAME_AnchorSyncSvc_KnowledgeObjectID = "AnchorKnowledgeObjectID";
enum NAME_AnchorSyncSvc_LastSyncProxyID = "AnchorLastSyncProxyID";
enum NAME_AnchorSyncSvc_CurrentAnchor = "AnchorCurrentAnchor";
enum NAME_AnchorSyncSvc_ProviderVersion = "AnchorProviderVersion";
enum NAME_AnchorSyncSvc_SyncFormat = "SyncFormat";
enum NAME_AnchorSyncSvc_LocalOnlyDelete = "LocalOnlyDelete";
enum NAME_AnchorSyncSvc_FilterType = "FilterType";
enum NAME_AnchorSyncKnowledge = "AnchorSyncKnowledge";
enum NAME_AnchorResults = "AnchorResults";
enum NAME_AnchorResults_AnchorState = "AnchorState";
enum ENUM_AnchorResults_AnchorStateNormal = 0x00000000;
enum ENUM_AnchorResults_AnchorStateInvalid = 0x00000001;
enum ENUM_AnchorResults_AnchorStateOld = 0x00000002;
enum NAME_AnchorResults_Anchor = "Anchor";
enum NAME_AnchorResults_ResultObjectID = "ResultObjectID";
enum NAME_AnchorSyncSvc_GetChangesSinceAnchor = "GetChangesSinceAnchor";
enum NAME_AnchorSyncSvc_BeginSync = "BeginSync";
enum NAME_AnchorSyncSvc_EndSync = "EndSync";
enum ENUM_AnchorResults_ItemStateInvalid = 0x00000000;
enum ENUM_AnchorResults_ItemStateDeleted = 0x00000001;
enum ENUM_AnchorResults_ItemStateCreated = 0x00000002;
enum ENUM_AnchorResults_ItemStateUpdated = 0x00000003;
enum ENUM_AnchorResults_ItemStateChanged = 0x00000004;
enum NAME_FullEnumSyncSvc = "FullEnumSync";
enum TYPE_FullEnumSyncSvc = 0x00000001;
enum NAME_FullEnumSyncSvc_VersionProps = "FullEnumVersionProps";
enum NAME_FullEnumSyncSvc_ReplicaID = "FullEnumReplicaID";
enum NAME_FullEnumSyncSvc_KnowledgeObjectID = "FullEnumKnowledgeObjectID";
enum NAME_FullEnumSyncSvc_LastSyncProxyID = "FullEnumLastSyncProxyID";
enum NAME_FullEnumSyncSvc_ProviderVersion = "FullEnumProviderVersion";
enum NAME_FullEnumSyncSvc_SyncFormat = "SyncFormat";
enum NAME_FullEnumSyncSvc_LocalOnlyDelete = "LocalOnlyDelete";
enum NAME_FullEnumSyncSvc_FilterType = "FilterType";
enum NAME_FullEnumSyncKnowledge = "FullEnumSyncKnowledge";
enum NAME_FullEnumSyncSvc_BeginSync = "BeginSync";
enum NAME_FullEnumSyncSvc_EndSync = "EndSync";
alias DELETE_OBJECT_OPTIONS = int;
enum : int
{
    PORTABLE_DEVICE_DELETE_NO_RECURSION   = 0x00000000,
    PORTABLE_DEVICE_DELETE_WITH_RECURSION = 0x00000001,
}

alias WPD_DEVICE_TYPES = int;
enum : int
{
    WPD_DEVICE_TYPE_GENERIC                      = 0x00000000,
    WPD_DEVICE_TYPE_CAMERA                       = 0x00000001,
    WPD_DEVICE_TYPE_MEDIA_PLAYER                 = 0x00000002,
    WPD_DEVICE_TYPE_PHONE                        = 0x00000003,
    WPD_DEVICE_TYPE_VIDEO                        = 0x00000004,
    WPD_DEVICE_TYPE_PERSONAL_INFORMATION_MANAGER = 0x00000005,
    WPD_DEVICE_TYPE_AUDIO_RECORDER               = 0x00000006,
}

alias WpdAttributeForm = int;
enum : int
{
    WPD_PROPERTY_ATTRIBUTE_FORM_UNSPECIFIED        = 0x00000000,
    WPD_PROPERTY_ATTRIBUTE_FORM_RANGE              = 0x00000001,
    WPD_PROPERTY_ATTRIBUTE_FORM_ENUMERATION        = 0x00000002,
    WPD_PROPERTY_ATTRIBUTE_FORM_REGULAR_EXPRESSION = 0x00000003,
    WPD_PROPERTY_ATTRIBUTE_FORM_OBJECT_IDENTIFIER  = 0x00000004,
}

alias WpdParameterAttributeForm = int;
enum : int
{
    WPD_PARAMETER_ATTRIBUTE_FORM_UNSPECIFIED        = 0x00000000,
    WPD_PARAMETER_ATTRIBUTE_FORM_RANGE              = 0x00000001,
    WPD_PARAMETER_ATTRIBUTE_FORM_ENUMERATION        = 0x00000002,
    WPD_PARAMETER_ATTRIBUTE_FORM_REGULAR_EXPRESSION = 0x00000003,
    WPD_PARAMETER_ATTRIBUTE_FORM_OBJECT_IDENTIFIER  = 0x00000004,
}

alias WPD_DEVICE_TRANSPORTS = int;
enum : int
{
    WPD_DEVICE_TRANSPORT_UNSPECIFIED = 0x00000000,
    WPD_DEVICE_TRANSPORT_USB         = 0x00000001,
    WPD_DEVICE_TRANSPORT_IP          = 0x00000002,
    WPD_DEVICE_TRANSPORT_BLUETOOTH   = 0x00000003,
}

alias WPD_STORAGE_TYPE_VALUES = int;
enum : int
{
    WPD_STORAGE_TYPE_UNDEFINED     = 0x00000000,
    WPD_STORAGE_TYPE_FIXED_ROM     = 0x00000001,
    WPD_STORAGE_TYPE_REMOVABLE_ROM = 0x00000002,
    WPD_STORAGE_TYPE_FIXED_RAM     = 0x00000003,
    WPD_STORAGE_TYPE_REMOVABLE_RAM = 0x00000004,
}

alias WPD_STORAGE_ACCESS_CAPABILITY_VALUES = int;
enum : int
{
    WPD_STORAGE_ACCESS_CAPABILITY_READWRITE                         = 0x00000000,
    WPD_STORAGE_ACCESS_CAPABILITY_READ_ONLY_WITHOUT_OBJECT_DELETION = 0x00000001,
    WPD_STORAGE_ACCESS_CAPABILITY_READ_ONLY_WITH_OBJECT_DELETION    = 0x00000002,
}

alias WPD_SMS_ENCODING_TYPES = int;
enum : int
{
    SMS_ENCODING_7_BIT  = 0x00000000,
    SMS_ENCODING_8_BIT  = 0x00000001,
    SMS_ENCODING_UTF_16 = 0x00000002,
}

alias SMS_MESSAGE_TYPES = int;
enum : int
{
    SMS_TEXT_MESSAGE   = 0x00000000,
    SMS_BINARY_MESSAGE = 0x00000001,
}

alias WPD_POWER_SOURCES = int;
enum : int
{
    WPD_POWER_SOURCE_BATTERY  = 0x00000000,
    WPD_POWER_SOURCE_EXTERNAL = 0x00000001,
}

alias WPD_WHITE_BALANCE_SETTINGS = int;
enum : int
{
    WPD_WHITE_BALANCE_UNDEFINED          = 0x00000000,
    WPD_WHITE_BALANCE_MANUAL             = 0x00000001,
    WPD_WHITE_BALANCE_AUTOMATIC          = 0x00000002,
    WPD_WHITE_BALANCE_ONE_PUSH_AUTOMATIC = 0x00000003,
    WPD_WHITE_BALANCE_DAYLIGHT           = 0x00000004,
    WPD_WHITE_BALANCE_FLORESCENT         = 0x00000005,
    WPD_WHITE_BALANCE_TUNGSTEN           = 0x00000006,
    WPD_WHITE_BALANCE_FLASH              = 0x00000007,
}

alias WPD_FOCUS_MODES = int;
enum : int
{
    WPD_FOCUS_UNDEFINED       = 0x00000000,
    WPD_FOCUS_MANUAL          = 0x00000001,
    WPD_FOCUS_AUTOMATIC       = 0x00000002,
    WPD_FOCUS_AUTOMATIC_MACRO = 0x00000003,
}

alias WPD_EXPOSURE_METERING_MODES = int;
enum : int
{
    WPD_EXPOSURE_METERING_MODE_UNDEFINED               = 0x00000000,
    WPD_EXPOSURE_METERING_MODE_AVERAGE                 = 0x00000001,
    WPD_EXPOSURE_METERING_MODE_CENTER_WEIGHTED_AVERAGE = 0x00000002,
    WPD_EXPOSURE_METERING_MODE_MULTI_SPOT              = 0x00000003,
    WPD_EXPOSURE_METERING_MODE_CENTER_SPOT             = 0x00000004,
}

alias WPD_FLASH_MODES = int;
enum : int
{
    WPD_FLASH_MODE_UNDEFINED     = 0x00000000,
    WPD_FLASH_MODE_AUTO          = 0x00000001,
    WPD_FLASH_MODE_OFF           = 0x00000002,
    WPD_FLASH_MODE_FILL          = 0x00000003,
    WPD_FLASH_MODE_RED_EYE_AUTO  = 0x00000004,
    WPD_FLASH_MODE_RED_EYE_FILL  = 0x00000005,
    WPD_FLASH_MODE_EXTERNAL_SYNC = 0x00000006,
}

alias WPD_EXPOSURE_PROGRAM_MODES = int;
enum : int
{
    WPD_EXPOSURE_PROGRAM_MODE_UNDEFINED         = 0x00000000,
    WPD_EXPOSURE_PROGRAM_MODE_MANUAL            = 0x00000001,
    WPD_EXPOSURE_PROGRAM_MODE_AUTO              = 0x00000002,
    WPD_EXPOSURE_PROGRAM_MODE_APERTURE_PRIORITY = 0x00000003,
    WPD_EXPOSURE_PROGRAM_MODE_SHUTTER_PRIORITY  = 0x00000004,
    WPD_EXPOSURE_PROGRAM_MODE_CREATIVE          = 0x00000005,
    WPD_EXPOSURE_PROGRAM_MODE_ACTION            = 0x00000006,
    WPD_EXPOSURE_PROGRAM_MODE_PORTRAIT          = 0x00000007,
}

alias WPD_CAPTURE_MODES = int;
enum : int
{
    WPD_CAPTURE_MODE_UNDEFINED = 0x00000000,
    WPD_CAPTURE_MODE_NORMAL    = 0x00000001,
    WPD_CAPTURE_MODE_BURST     = 0x00000002,
    WPD_CAPTURE_MODE_TIMELAPSE = 0x00000003,
}

alias WPD_EFFECT_MODES = int;
enum : int
{
    WPD_EFFECT_MODE_UNDEFINED       = 0x00000000,
    WPD_EFFECT_MODE_COLOR           = 0x00000001,
    WPD_EFFECT_MODE_BLACK_AND_WHITE = 0x00000002,
    WPD_EFFECT_MODE_SEPIA           = 0x00000003,
}

alias WPD_FOCUS_METERING_MODES = int;
enum : int
{
    WPD_FOCUS_METERING_MODE_UNDEFINED   = 0x00000000,
    WPD_FOCUS_METERING_MODE_CENTER_SPOT = 0x00000001,
    WPD_FOCUS_METERING_MODE_MULTI_SPOT  = 0x00000002,
}

alias WPD_BITRATE_TYPES = int;
enum : int
{
    WPD_BITRATE_TYPE_UNUSED   = 0x00000000,
    WPD_BITRATE_TYPE_DISCRETE = 0x00000001,
    WPD_BITRATE_TYPE_VARIABLE = 0x00000002,
    WPD_BITRATE_TYPE_FREE     = 0x00000003,
}

alias WPD_META_GENRES = int;
enum : int
{
    WPD_META_GENRE_UNUSED                           = 0x00000000,
    WPD_META_GENRE_GENERIC_MUSIC_AUDIO_FILE         = 0x00000001,
    WPD_META_GENRE_GENERIC_NON_MUSIC_AUDIO_FILE     = 0x00000011,
    WPD_META_GENRE_SPOKEN_WORD_AUDIO_BOOK_FILES     = 0x00000012,
    WPD_META_GENRE_SPOKEN_WORD_FILES_NON_AUDIO_BOOK = 0x00000013,
    WPD_META_GENRE_SPOKEN_WORD_NEWS                 = 0x00000014,
    WPD_META_GENRE_SPOKEN_WORD_TALK_SHOWS           = 0x00000015,
    WPD_META_GENRE_GENERIC_VIDEO_FILE               = 0x00000021,
    WPD_META_GENRE_NEWS_VIDEO_FILE                  = 0x00000022,
    WPD_META_GENRE_MUSIC_VIDEO_FILE                 = 0x00000023,
    WPD_META_GENRE_HOME_VIDEO_FILE                  = 0x00000024,
    WPD_META_GENRE_FEATURE_FILM_VIDEO_FILE          = 0x00000025,
    WPD_META_GENRE_TELEVISION_VIDEO_FILE            = 0x00000026,
    WPD_META_GENRE_TRAINING_EDUCATIONAL_VIDEO_FILE  = 0x00000027,
    WPD_META_GENRE_PHOTO_MONTAGE_VIDEO_FILE         = 0x00000028,
    WPD_META_GENRE_GENERIC_NON_AUDIO_NON_VIDEO      = 0x00000030,
    WPD_META_GENRE_AUDIO_PODCAST                    = 0x00000040,
    WPD_META_GENRE_VIDEO_PODCAST                    = 0x00000041,
    WPD_META_GENRE_MIXED_PODCAST                    = 0x00000042,
}

alias WPD_CROPPED_STATUS_VALUES = int;
enum : int
{
    WPD_CROPPED_STATUS_NOT_CROPPED           = 0x00000000,
    WPD_CROPPED_STATUS_CROPPED               = 0x00000001,
    WPD_CROPPED_STATUS_SHOULD_NOT_BE_CROPPED = 0x00000002,
}

alias WPD_COLOR_CORRECTED_STATUS_VALUES = int;
enum : int
{
    WPD_COLOR_CORRECTED_STATUS_NOT_CORRECTED           = 0x00000000,
    WPD_COLOR_CORRECTED_STATUS_CORRECTED               = 0x00000001,
    WPD_COLOR_CORRECTED_STATUS_SHOULD_NOT_BE_CORRECTED = 0x00000002,
}

alias WPD_VIDEO_SCAN_TYPES = int;
enum : int
{
    WPD_VIDEO_SCAN_TYPE_UNUSED                          = 0x00000000,
    WPD_VIDEO_SCAN_TYPE_PROGRESSIVE                     = 0x00000001,
    WPD_VIDEO_SCAN_TYPE_FIELD_INTERLEAVED_UPPER_FIRST   = 0x00000002,
    WPD_VIDEO_SCAN_TYPE_FIELD_INTERLEAVED_LOWER_FIRST   = 0x00000003,
    WPD_VIDEO_SCAN_TYPE_FIELD_SINGLE_UPPER_FIRST        = 0x00000004,
    WPD_VIDEO_SCAN_TYPE_FIELD_SINGLE_LOWER_FIRST        = 0x00000005,
    WPD_VIDEO_SCAN_TYPE_MIXED_INTERLACE                 = 0x00000006,
    WPD_VIDEO_SCAN_TYPE_MIXED_INTERLACE_AND_PROGRESSIVE = 0x00000007,
}

alias WPD_OPERATION_STATES = int;
enum : int
{
    WPD_OPERATION_STATE_UNSPECIFIED = 0x00000000,
    WPD_OPERATION_STATE_STARTED     = 0x00000001,
    WPD_OPERATION_STATE_RUNNING     = 0x00000002,
    WPD_OPERATION_STATE_PAUSED      = 0x00000003,
    WPD_OPERATION_STATE_CANCELLED   = 0x00000004,
    WPD_OPERATION_STATE_FINISHED    = 0x00000005,
    WPD_OPERATION_STATE_ABORTED     = 0x00000006,
}

alias WPD_SECTION_DATA_UNITS_VALUES = int;
enum : int
{
    WPD_SECTION_DATA_UNITS_BYTES        = 0x00000000,
    WPD_SECTION_DATA_UNITS_MILLISECONDS = 0x00000001,
}

alias WPD_RENDERING_INFORMATION_PROFILE_ENTRY_TYPES = int;
enum : int
{
    WPD_RENDERING_INFORMATION_PROFILE_ENTRY_TYPE_OBJECT   = 0x00000000,
    WPD_RENDERING_INFORMATION_PROFILE_ENTRY_TYPE_RESOURCE = 0x00000001,
}

alias WPD_COMMAND_ACCESS_TYPES = int;
enum : int
{
    WPD_COMMAND_ACCESS_READ                              = 0x00000001,
    WPD_COMMAND_ACCESS_READWRITE                         = 0x00000003,
    WPD_COMMAND_ACCESS_FROM_PROPERTY_WITH_STGM_ACCESS    = 0x00000004,
    WPD_COMMAND_ACCESS_FROM_PROPERTY_WITH_FILE_ACCESS    = 0x00000008,
    WPD_COMMAND_ACCESS_FROM_ATTRIBUTE_WITH_METHOD_ACCESS = 0x00000010,
}

alias WPD_SERVICE_INHERITANCE_TYPES = int;
enum : int
{
    WPD_SERVICE_INHERITANCE_IMPLEMENTATION = 0x00000000,
}

alias WPD_PARAMETER_USAGE_TYPES = int;
enum : int
{
    WPD_PARAMETER_USAGE_RETURN = 0x00000000,
    WPD_PARAMETER_USAGE_IN     = 0x00000001,
    WPD_PARAMETER_USAGE_OUT    = 0x00000002,
    WPD_PARAMETER_USAGE_INOUT  = 0x00000003,
}

struct WPD_COMMAND_ACCESS_LOOKUP_ENTRY
{
    PROPERTYKEY Command;
    uint AccessType;
    PROPERTYKEY AccessProperty;
}
alias WPD_STREAM_UNITS = int;
enum : int
{
    WPD_STREAM_UNITS_BYTES        = 0x00000000,
    WPD_STREAM_UNITS_FRAMES       = 0x00000001,
    WPD_STREAM_UNITS_ROWS         = 0x00000002,
    WPD_STREAM_UNITS_MILLISECONDS = 0x00000004,
    WPD_STREAM_UNITS_MICROSECONDS = 0x00000008,
}

enum IID_IWpdSerializer = GUID(0xb32f4002, 0xbb27, 0x45ff, [0xaf, 0x4f, 0x6, 0x63, 0x1c, 0x1e, 0x8d, 0xad]);
interface IWpdSerializer : IUnknown
{
    HRESULT GetIPortableDeviceValuesFromBuffer(ubyte*, uint, IPortableDeviceValues*);
    HRESULT WriteIPortableDeviceValuesToBuffer(uint, IPortableDeviceValues, ubyte*, uint*);
    HRESULT GetBufferFromIPortableDeviceValues(IPortableDeviceValues, ubyte**, uint*);
    HRESULT GetSerializedSize(IPortableDeviceValues, uint*);
}
enum IID_IPortableDeviceValues = GUID(0x6848f6f2, 0x3155, 0x4f86, [0xb6, 0xf5, 0x26, 0x3e, 0xee, 0xab, 0x31, 0x43]);
interface IPortableDeviceValues : IUnknown
{
    HRESULT GetCount(uint*);
    HRESULT GetAt(const(uint), PROPERTYKEY*, PROPVARIANT*);
    HRESULT SetValue(const(PROPERTYKEY)*, const(PROPVARIANT)*);
    HRESULT GetValue(const(PROPERTYKEY)*, PROPVARIANT*);
    HRESULT SetStringValue(const(PROPERTYKEY)*, const(wchar)*);
    HRESULT GetStringValue(const(PROPERTYKEY)*, PWSTR*);
    HRESULT SetUnsignedIntegerValue(const(PROPERTYKEY)*, const(uint));
    HRESULT GetUnsignedIntegerValue(const(PROPERTYKEY)*, uint*);
    HRESULT SetSignedIntegerValue(const(PROPERTYKEY)*, const(int));
    HRESULT GetSignedIntegerValue(const(PROPERTYKEY)*, int*);
    HRESULT SetUnsignedLargeIntegerValue(const(PROPERTYKEY)*, const(ulong));
    HRESULT GetUnsignedLargeIntegerValue(const(PROPERTYKEY)*, ulong*);
    HRESULT SetSignedLargeIntegerValue(const(PROPERTYKEY)*, const(long));
    HRESULT GetSignedLargeIntegerValue(const(PROPERTYKEY)*, long*);
    HRESULT SetFloatValue(const(PROPERTYKEY)*, const(float));
    HRESULT GetFloatValue(const(PROPERTYKEY)*, float*);
    HRESULT SetErrorValue(const(PROPERTYKEY)*, const(HRESULT));
    HRESULT GetErrorValue(const(PROPERTYKEY)*, HRESULT*);
    HRESULT SetKeyValue(const(PROPERTYKEY)*, const(PROPERTYKEY)*);
    HRESULT GetKeyValue(const(PROPERTYKEY)*, PROPERTYKEY*);
    HRESULT SetBoolValue(const(PROPERTYKEY)*, const(BOOL));
    HRESULT GetBoolValue(const(PROPERTYKEY)*, BOOL*);
    HRESULT SetIUnknownValue(const(PROPERTYKEY)*, IUnknown);
    HRESULT GetIUnknownValue(const(PROPERTYKEY)*, IUnknown*);
    HRESULT SetGuidValue(const(PROPERTYKEY)*, const(GUID)*);
    HRESULT GetGuidValue(const(PROPERTYKEY)*, GUID*);
    HRESULT SetBufferValue(const(PROPERTYKEY)*, ubyte*, uint);
    HRESULT GetBufferValue(const(PROPERTYKEY)*, ubyte**, uint*);
    HRESULT SetIPortableDeviceValuesValue(const(PROPERTYKEY)*, IPortableDeviceValues);
    HRESULT GetIPortableDeviceValuesValue(const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT SetIPortableDevicePropVariantCollectionValue(const(PROPERTYKEY)*, IPortableDevicePropVariantCollection);
    HRESULT GetIPortableDevicePropVariantCollectionValue(const(PROPERTYKEY)*, IPortableDevicePropVariantCollection*);
    HRESULT SetIPortableDeviceKeyCollectionValue(const(PROPERTYKEY)*, IPortableDeviceKeyCollection);
    HRESULT GetIPortableDeviceKeyCollectionValue(const(PROPERTYKEY)*, IPortableDeviceKeyCollection*);
    HRESULT SetIPortableDeviceValuesCollectionValue(const(PROPERTYKEY)*, IPortableDeviceValuesCollection);
    HRESULT GetIPortableDeviceValuesCollectionValue(const(PROPERTYKEY)*, IPortableDeviceValuesCollection*);
    HRESULT RemoveValue(const(PROPERTYKEY)*);
    HRESULT CopyValuesFromPropertyStore(IPropertyStore);
    HRESULT CopyValuesToPropertyStore(IPropertyStore);
    HRESULT Clear();
}
enum IID_IPortableDeviceKeyCollection = GUID(0xdada2357, 0xe0ad, 0x492e, [0x98, 0xdb, 0xdd, 0x61, 0xc5, 0x3b, 0xa3, 0x53]);
interface IPortableDeviceKeyCollection : IUnknown
{
    HRESULT GetCount(uint*);
    HRESULT GetAt(const(uint), PROPERTYKEY*);
    HRESULT Add(const(PROPERTYKEY)*);
    HRESULT Clear();
    HRESULT RemoveAt(const(uint));
}
enum IID_IPortableDevicePropVariantCollection = GUID(0x89b2e422, 0x4f1b, 0x4316, [0xbc, 0xef, 0xa4, 0x4a, 0xfe, 0xa8, 0x3e, 0xb3]);
interface IPortableDevicePropVariantCollection : IUnknown
{
    HRESULT GetCount(uint*);
    HRESULT GetAt(const(uint), PROPVARIANT*);
    HRESULT Add(const(PROPVARIANT)*);
    HRESULT GetType(ushort*);
    HRESULT ChangeType(const(ushort));
    HRESULT Clear();
    HRESULT RemoveAt(const(uint));
}
enum IID_IPortableDeviceValuesCollection = GUID(0x6e3f2d79, 0x4e07, 0x48c4, [0x82, 0x8, 0xd8, 0xc2, 0xe5, 0xaf, 0x4a, 0x99]);
interface IPortableDeviceValuesCollection : IUnknown
{
    HRESULT GetCount(uint*);
    HRESULT GetAt(const(uint), IPortableDeviceValues*);
    HRESULT Add(IPortableDeviceValues);
    HRESULT Clear();
    HRESULT RemoveAt(const(uint));
}
enum CLSID_WpdSerializer = GUID(0xb91a74b, 0xad7c, 0x4a9d, [0xb5, 0x63, 0x29, 0xee, 0xf9, 0x16, 0x71, 0x72]);
struct WpdSerializer
{
}
enum CLSID_PortableDeviceValues = GUID(0xc15d503, 0xd017, 0x47ce, [0x90, 0x16, 0x7b, 0x3f, 0x97, 0x87, 0x21, 0xcc]);
struct PortableDeviceValues
{
}
enum CLSID_PortableDeviceKeyCollection = GUID(0xde2d022d, 0x2480, 0x43be, [0x97, 0xf0, 0xd1, 0xfa, 0x2c, 0xf9, 0x8f, 0x4f]);
struct PortableDeviceKeyCollection
{
}
enum CLSID_PortableDevicePropVariantCollection = GUID(0x8a99e2f, 0x6d6d, 0x4b80, [0xaf, 0x5a, 0xba, 0xf2, 0xbc, 0xbe, 0x4c, 0xb9]);
struct PortableDevicePropVariantCollection
{
}
enum CLSID_PortableDeviceValuesCollection = GUID(0x3882134d, 0x14cf, 0x4220, [0x9c, 0xb4, 0x43, 0x5f, 0x86, 0xd8, 0x3f, 0x60]);
struct PortableDeviceValuesCollection
{
}
enum IID_IPortableDeviceManager = GUID(0xa1567595, 0x4c2f, 0x4574, [0xa6, 0xfa, 0xec, 0xef, 0x91, 0x7b, 0x9a, 0x40]);
interface IPortableDeviceManager : IUnknown
{
    HRESULT GetDevices(PWSTR*, uint*);
    HRESULT RefreshDeviceList();
    HRESULT GetDeviceFriendlyName(const(wchar)*, PWSTR, uint*);
    HRESULT GetDeviceDescription(const(wchar)*, PWSTR, uint*);
    HRESULT GetDeviceManufacturer(const(wchar)*, PWSTR, uint*);
    HRESULT GetDeviceProperty(const(wchar)*, const(wchar)*, ubyte*, uint*, uint*);
    HRESULT GetPrivateDevices(PWSTR*, uint*);
}
enum IID_IPortableDevice = GUID(0x625e2df8, 0x6392, 0x4cf0, [0x9a, 0xd1, 0x3c, 0xfa, 0x5f, 0x17, 0x77, 0x5c]);
interface IPortableDevice : IUnknown
{
    HRESULT Open(const(wchar)*, IPortableDeviceValues);
    HRESULT SendCommand(const(uint), IPortableDeviceValues, IPortableDeviceValues*);
    HRESULT Content(IPortableDeviceContent*);
    HRESULT Capabilities(IPortableDeviceCapabilities*);
    HRESULT Cancel();
    HRESULT Close();
    HRESULT Advise(const(uint), IPortableDeviceEventCallback, IPortableDeviceValues, PWSTR*);
    HRESULT Unadvise(const(wchar)*);
    HRESULT GetPnPDeviceID(PWSTR*);
}
enum IID_IPortableDeviceContent = GUID(0x6a96ed84, 0x7c73, 0x4480, [0x99, 0x38, 0xbf, 0x5a, 0xf4, 0x77, 0xd4, 0x26]);
interface IPortableDeviceContent : IUnknown
{
    HRESULT EnumObjects(const(uint), const(wchar)*, IPortableDeviceValues, IEnumPortableDeviceObjectIDs*);
    HRESULT Properties(IPortableDeviceProperties*);
    HRESULT Transfer(IPortableDeviceResources*);
    HRESULT CreateObjectWithPropertiesOnly(IPortableDeviceValues, PWSTR*);
    HRESULT CreateObjectWithPropertiesAndData(IPortableDeviceValues, IStream*, uint*, PWSTR*);
    HRESULT Delete(const(uint), IPortableDevicePropVariantCollection, IPortableDevicePropVariantCollection*);
    HRESULT GetObjectIDsFromPersistentUniqueIDs(IPortableDevicePropVariantCollection, IPortableDevicePropVariantCollection*);
    HRESULT Cancel();
    HRESULT Move(IPortableDevicePropVariantCollection, const(wchar)*, IPortableDevicePropVariantCollection*);
    HRESULT Copy(IPortableDevicePropVariantCollection, const(wchar)*, IPortableDevicePropVariantCollection*);
}
enum IID_IPortableDeviceContent2 = GUID(0x9b4add96, 0xf6bf, 0x4034, [0x87, 0x8, 0xec, 0xa7, 0x2b, 0xf1, 0x5, 0x54]);
interface IPortableDeviceContent2 : IPortableDeviceContent
{
    HRESULT UpdateObjectWithPropertiesAndData(const(wchar)*, IPortableDeviceValues, IStream*, uint*);
}
enum IID_IEnumPortableDeviceObjectIDs = GUID(0x10ece955, 0xcf41, 0x4728, [0xbf, 0xa0, 0x41, 0xee, 0xdf, 0x1b, 0xbf, 0x19]);
interface IEnumPortableDeviceObjectIDs : IUnknown
{
    HRESULT Next(uint, PWSTR*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumPortableDeviceObjectIDs*);
    HRESULT Cancel();
}
enum IID_IPortableDeviceProperties = GUID(0x7f6d695c, 0x3df, 0x4439, [0xa8, 0x9, 0x59, 0x26, 0x6b, 0xee, 0xe3, 0xa6]);
interface IPortableDeviceProperties : IUnknown
{
    HRESULT GetSupportedProperties(const(wchar)*, IPortableDeviceKeyCollection*);
    HRESULT GetPropertyAttributes(const(wchar)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetValues(const(wchar)*, IPortableDeviceKeyCollection, IPortableDeviceValues*);
    HRESULT SetValues(const(wchar)*, IPortableDeviceValues, IPortableDeviceValues*);
    HRESULT Delete(const(wchar)*, IPortableDeviceKeyCollection);
    HRESULT Cancel();
}
enum IID_IPortableDeviceResources = GUID(0xfd8878ac, 0xd841, 0x4d17, [0x89, 0x1c, 0xe6, 0x82, 0x9c, 0xdb, 0x69, 0x34]);
interface IPortableDeviceResources : IUnknown
{
    HRESULT GetSupportedResources(const(wchar)*, IPortableDeviceKeyCollection*);
    HRESULT GetResourceAttributes(const(wchar)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetStream(const(wchar)*, const(PROPERTYKEY)*, const(uint), uint*, IStream*);
    HRESULT Delete(const(wchar)*, IPortableDeviceKeyCollection);
    HRESULT Cancel();
    HRESULT CreateResource(IPortableDeviceValues, IStream*, uint*, PWSTR*);
}
enum IID_IPortableDeviceCapabilities = GUID(0x2c8c6dbf, 0xe3dc, 0x4061, [0xbe, 0xcc, 0x85, 0x42, 0xe8, 0x10, 0xd1, 0x26]);
interface IPortableDeviceCapabilities : IUnknown
{
    HRESULT GetSupportedCommands(IPortableDeviceKeyCollection*);
    HRESULT GetCommandOptions(const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetFunctionalCategories(IPortableDevicePropVariantCollection*);
    HRESULT GetFunctionalObjects(const(GUID)*, IPortableDevicePropVariantCollection*);
    HRESULT GetSupportedContentTypes(const(GUID)*, IPortableDevicePropVariantCollection*);
    HRESULT GetSupportedFormats(const(GUID)*, IPortableDevicePropVariantCollection*);
    HRESULT GetSupportedFormatProperties(const(GUID)*, IPortableDeviceKeyCollection*);
    HRESULT GetFixedPropertyAttributes(const(GUID)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT Cancel();
    HRESULT GetSupportedEvents(IPortableDevicePropVariantCollection*);
    HRESULT GetEventOptions(const(GUID)*, IPortableDeviceValues*);
}
enum IID_IPortableDeviceEventCallback = GUID(0xa8792a31, 0xf385, 0x493c, [0xa8, 0x93, 0x40, 0xf6, 0x4e, 0xb4, 0x5f, 0x6e]);
interface IPortableDeviceEventCallback : IUnknown
{
    HRESULT OnEvent(IPortableDeviceValues);
}
enum IID_IPortableDeviceDataStream = GUID(0x88e04db3, 0x1012, 0x4d64, [0x99, 0x96, 0xf7, 0x3, 0xa9, 0x50, 0xd3, 0xf4]);
interface IPortableDeviceDataStream : IStream
{
    HRESULT GetObjectID(PWSTR*);
    HRESULT Cancel();
}
enum IID_IPortableDeviceUnitsStream = GUID(0x5e98025f, 0xbfc4, 0x47a2, [0x9a, 0x5f, 0xbc, 0x90, 0xa, 0x50, 0x7c, 0x67]);
interface IPortableDeviceUnitsStream : IUnknown
{
    HRESULT SeekInUnits(long, WPD_STREAM_UNITS, uint, ulong*);
    HRESULT Cancel();
}
enum IID_IPortableDevicePropertiesBulk = GUID(0x482b05c0, 0x4056, 0x44ed, [0x9e, 0xf, 0x5e, 0x23, 0xb0, 0x9, 0xda, 0x93]);
interface IPortableDevicePropertiesBulk : IUnknown
{
    HRESULT QueueGetValuesByObjectList(IPortableDevicePropVariantCollection, IPortableDeviceKeyCollection, IPortableDevicePropertiesBulkCallback, GUID*);
    HRESULT QueueGetValuesByObjectFormat(const(GUID)*, const(wchar)*, const(uint), IPortableDeviceKeyCollection, IPortableDevicePropertiesBulkCallback, GUID*);
    HRESULT QueueSetValuesByObjectList(IPortableDeviceValuesCollection, IPortableDevicePropertiesBulkCallback, GUID*);
    HRESULT Start(const(GUID)*);
    HRESULT Cancel(const(GUID)*);
}
enum IID_IPortableDevicePropertiesBulkCallback = GUID(0x9deacb80, 0x11e8, 0x40e3, [0xa9, 0xf3, 0xf5, 0x57, 0x98, 0x6a, 0x78, 0x45]);
interface IPortableDevicePropertiesBulkCallback : IUnknown
{
    HRESULT OnStart(const(GUID)*);
    HRESULT OnProgress(const(GUID)*, IPortableDeviceValuesCollection);
    HRESULT OnEnd(const(GUID)*, HRESULT);
}
enum IID_IPortableDeviceServiceManager = GUID(0xa8abc4e9, 0xa84a, 0x47a9, [0x80, 0xb3, 0xc5, 0xd9, 0xb1, 0x72, 0xa9, 0x61]);
interface IPortableDeviceServiceManager : IUnknown
{
    HRESULT GetDeviceServices(const(wchar)*, const(GUID)*, PWSTR*, uint*);
    HRESULT GetDeviceForService(const(wchar)*, PWSTR*);
}
enum IID_IPortableDeviceService = GUID(0xd3bd3a44, 0xd7b5, 0x40a9, [0x98, 0xb7, 0x2f, 0xa4, 0xd0, 0x1d, 0xec, 0x8]);
interface IPortableDeviceService : IUnknown
{
    HRESULT Open(const(wchar)*, IPortableDeviceValues);
    HRESULT Capabilities(IPortableDeviceServiceCapabilities*);
    HRESULT Content(IPortableDeviceContent2*);
    HRESULT Methods(IPortableDeviceServiceMethods*);
    HRESULT Cancel();
    HRESULT Close();
    HRESULT GetServiceObjectID(PWSTR*);
    HRESULT GetPnPServiceID(PWSTR*);
    HRESULT Advise(const(uint), IPortableDeviceEventCallback, IPortableDeviceValues, PWSTR*);
    HRESULT Unadvise(const(wchar)*);
    HRESULT SendCommand(const(uint), IPortableDeviceValues, IPortableDeviceValues*);
}
enum IID_IPortableDeviceServiceCapabilities = GUID(0x24dbd89d, 0x413e, 0x43e0, [0xbd, 0x5b, 0x19, 0x7f, 0x3c, 0x56, 0xc8, 0x86]);
interface IPortableDeviceServiceCapabilities : IUnknown
{
    HRESULT GetSupportedMethods(IPortableDevicePropVariantCollection*);
    HRESULT GetSupportedMethodsByFormat(const(GUID)*, IPortableDevicePropVariantCollection*);
    HRESULT GetMethodAttributes(const(GUID)*, IPortableDeviceValues*);
    HRESULT GetMethodParameterAttributes(const(GUID)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetSupportedFormats(IPortableDevicePropVariantCollection*);
    HRESULT GetFormatAttributes(const(GUID)*, IPortableDeviceValues*);
    HRESULT GetSupportedFormatProperties(const(GUID)*, IPortableDeviceKeyCollection*);
    HRESULT GetFormatPropertyAttributes(const(GUID)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetSupportedEvents(IPortableDevicePropVariantCollection*);
    HRESULT GetEventAttributes(const(GUID)*, IPortableDeviceValues*);
    HRESULT GetEventParameterAttributes(const(GUID)*, const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT GetInheritedServices(const(uint), IPortableDevicePropVariantCollection*);
    HRESULT GetFormatRenderingProfiles(const(GUID)*, IPortableDeviceValuesCollection*);
    HRESULT GetSupportedCommands(IPortableDeviceKeyCollection*);
    HRESULT GetCommandOptions(const(PROPERTYKEY)*, IPortableDeviceValues*);
    HRESULT Cancel();
}
enum IID_IPortableDeviceServiceMethods = GUID(0xe20333c9, 0xfd34, 0x412d, [0xa3, 0x81, 0xcc, 0x6f, 0x2d, 0x82, 0xd, 0xf7]);
interface IPortableDeviceServiceMethods : IUnknown
{
    HRESULT Invoke(const(GUID)*, IPortableDeviceValues, IPortableDeviceValues*);
    HRESULT InvokeAsync(const(GUID)*, IPortableDeviceValues, IPortableDeviceServiceMethodCallback);
    HRESULT Cancel(IPortableDeviceServiceMethodCallback);
}
enum IID_IPortableDeviceServiceMethodCallback = GUID(0xc424233c, 0xafce, 0x4828, [0xa7, 0x56, 0x7e, 0xd7, 0xa2, 0x35, 0x0, 0x83]);
interface IPortableDeviceServiceMethodCallback : IUnknown
{
    HRESULT OnComplete(HRESULT, IPortableDeviceValues);
}
enum IID_IPortableDeviceServiceActivation = GUID(0xe56b0534, 0xd9b9, 0x425c, [0x9b, 0x99, 0x75, 0xf9, 0x7c, 0xb3, 0xd7, 0xc8]);
interface IPortableDeviceServiceActivation : IUnknown
{
    HRESULT OpenAsync(const(wchar)*, IPortableDeviceValues, IPortableDeviceServiceOpenCallback);
    HRESULT CancelOpenAsync();
}
enum IID_IPortableDeviceServiceOpenCallback = GUID(0xbced49c8, 0x8efe, 0x41ed, [0x96, 0xb, 0x61, 0x31, 0x3a, 0xbd, 0x47, 0xa9]);
interface IPortableDeviceServiceOpenCallback : IUnknown
{
    HRESULT OnComplete(HRESULT);
}
enum IID_IPortableDeviceDispatchFactory = GUID(0x5e1eafc3, 0xe3d7, 0x4132, [0x96, 0xfa, 0x75, 0x9c, 0xf, 0x9d, 0x1e, 0xf]);
interface IPortableDeviceDispatchFactory : IUnknown
{
    HRESULT GetDeviceDispatch(const(wchar)*, IDispatch*);
}
enum IID_IPortableDeviceWebControl = GUID(0x94fc7953, 0x5ca1, 0x483a, [0x8a, 0xee, 0xdf, 0x52, 0xe7, 0x74, 0x7d, 0x0]);
interface IPortableDeviceWebControl : IDispatch
{
    HRESULT GetDeviceFromId(BSTR, IDispatch*);
    HRESULT GetDeviceFromIdAsync(BSTR, IDispatch, IDispatch);
}
enum CLSID_PortableDevice = GUID(0x728a21c5, 0x3d9e, 0x48d7, [0x98, 0x10, 0x86, 0x48, 0x48, 0xf0, 0xf4, 0x4]);
struct PortableDevice
{
}
enum CLSID_PortableDeviceManager = GUID(0xaf10cec, 0x2ecd, 0x4b92, [0x95, 0x81, 0x34, 0xf6, 0xae, 0x6, 0x37, 0xf3]);
struct PortableDeviceManager
{
}
enum CLSID_PortableDeviceService = GUID(0xef5db4c2, 0x9312, 0x422c, [0x91, 0x52, 0x41, 0x1c, 0xd9, 0xc4, 0xdd, 0x84]);
struct PortableDeviceService
{
}
enum CLSID_PortableDeviceDispatchFactory = GUID(0x43232233, 0x8338, 0x4658, [0xae, 0x1, 0xb, 0x4a, 0xe8, 0x30, 0xb6, 0xb0]);
struct PortableDeviceDispatchFactory
{
}
enum CLSID_PortableDeviceFTM = GUID(0xf7c0039a, 0x4762, 0x488a, [0xb4, 0xb3, 0x76, 0xe, 0xf9, 0xa1, 0xba, 0x9b]);
struct PortableDeviceFTM
{
}
enum CLSID_PortableDeviceServiceFTM = GUID(0x1649b154, 0xc794, 0x497a, [0x9b, 0x3, 0xf3, 0xf0, 0x12, 0x13, 0x2, 0xf3]);
struct PortableDeviceServiceFTM
{
}
enum CLSID_PortableDeviceWebControl = GUID(0x186dd02c, 0x2dec, 0x41b5, [0xa7, 0xd4, 0xb5, 0x90, 0x56, 0xfa, 0xde, 0x51]);
struct PortableDeviceWebControl
{
}
enum IID_IEnumPortableDeviceConnectors = GUID(0xbfdef549, 0x9247, 0x454f, [0xbd, 0x82, 0x6, 0xfe, 0x80, 0x85, 0x3f, 0xaa]);
interface IEnumPortableDeviceConnectors : IUnknown
{
    HRESULT Next(uint, IPortableDeviceConnector*, uint*);
    HRESULT Skip(uint);
    HRESULT Reset();
    HRESULT Clone(IEnumPortableDeviceConnectors*);
}
enum IID_IPortableDeviceConnector = GUID(0x625e2df8, 0x6392, 0x4cf0, [0x9a, 0xd1, 0x3c, 0xfa, 0x5f, 0x17, 0x77, 0x5c]);
interface IPortableDeviceConnector : IUnknown
{
    HRESULT Connect(IConnectionRequestCallback);
    HRESULT Disconnect(IConnectionRequestCallback);
    HRESULT Cancel(IConnectionRequestCallback);
    HRESULT GetProperty(const(DEVPROPKEY)*, DEVPROPTYPE*, ubyte**, uint*);
    HRESULT SetProperty(const(DEVPROPKEY)*, DEVPROPTYPE, const(ubyte)*, uint);
    HRESULT GetPnPID(PWSTR*);
}
enum IID_IConnectionRequestCallback = GUID(0x272c9ae0, 0x7161, 0x4ae0, [0x91, 0xbd, 0x9f, 0x44, 0x8e, 0xe9, 0xc4, 0x27]);
interface IConnectionRequestCallback : IUnknown
{
    HRESULT OnComplete(HRESULT);
}
enum CLSID_EnumBthMtpConnectors = GUID(0xa1570149, 0xe645, 0x4f43, [0x8b, 0xd, 0x40, 0x9b, 0x6, 0x1d, 0xb2, 0xfc]);
struct EnumBthMtpConnectors
{
}
alias DEVICE_RADIO_STATE = int;
enum : int
{
    DRS_RADIO_ON                    = 0x00000000,
    DRS_SW_RADIO_OFF                = 0x00000001,
    DRS_HW_RADIO_OFF                = 0x00000002,
    DRS_SW_HW_RADIO_OFF             = 0x00000003,
    DRS_HW_RADIO_ON_UNCONTROLLABLE  = 0x00000004,
    DRS_RADIO_INVALID               = 0x00000005,
    DRS_HW_RADIO_OFF_UNCONTROLLABLE = 0x00000006,
    DRS_RADIO_MAX                   = 0x00000006,
}

alias SYSTEM_RADIO_STATE = int;
enum : int
{
    SRS_RADIO_ENABLED  = 0x00000000,
    SRS_RADIO_DISABLED = 0x00000001,
}

enum IID_IMediaRadioManager = GUID(0x6cfdcab5, 0xfc47, 0x42a5, [0x92, 0x41, 0x7, 0x4b, 0x58, 0x83, 0xe, 0x73]);
interface IMediaRadioManager : IUnknown
{
    HRESULT GetRadioInstances(IRadioInstanceCollection*);
    HRESULT OnSystemRadioStateChange(SYSTEM_RADIO_STATE, uint);
}
enum IID_IRadioInstanceCollection = GUID(0xe5791fae, 0x5665, 0x4e0c, [0x95, 0xbe, 0x5f, 0xde, 0x31, 0x64, 0x41, 0x85]);
interface IRadioInstanceCollection : IUnknown
{
    HRESULT GetCount(uint*);
    HRESULT GetAt(uint, IRadioInstance*);
}
enum IID_IRadioInstance = GUID(0x70aa1c9e, 0xf2b4, 0x4c61, [0x86, 0xd3, 0x6b, 0x9f, 0xb7, 0x5f, 0xd1, 0xa2]);
interface IRadioInstance : IUnknown
{
    HRESULT GetRadioManagerSignature(GUID*);
    HRESULT GetInstanceSignature(BSTR*);
    HRESULT GetFriendlyName(uint, BSTR*);
    HRESULT GetRadioState(DEVICE_RADIO_STATE*);
    HRESULT SetRadioState(DEVICE_RADIO_STATE, uint);
    BOOL IsMultiComm();
    BOOL IsAssociatingDevice();
}
enum IID_IMediaRadioManagerNotifySink = GUID(0x89d81f5f, 0xc147, 0x49ed, [0xa1, 0x1c, 0x77, 0xb2, 0xc, 0x31, 0xe7, 0xc9]);
interface IMediaRadioManagerNotifySink : IUnknown
{
    HRESULT OnInstanceAdd(IRadioInstance);
    HRESULT OnInstanceRemove(BSTR);
    HRESULT OnInstanceRadioChange(BSTR, DEVICE_RADIO_STATE);
}
