module windows.win32.devices.bluetooth;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOL, BOOLEAN, CHAR, HANDLE, HRESULT, HWND, PWSTR, SYSTEMTIME;

version (Windows):
extern (Windows):

long BluetoothFindFirstRadio(const(BLUETOOTH_FIND_RADIO_PARAMS)*, HANDLE*);
BOOL BluetoothFindNextRadio(long, HANDLE*);
BOOL BluetoothFindRadioClose(long);
uint BluetoothGetRadioInfo(HANDLE, BLUETOOTH_RADIO_INFO*);
long BluetoothFindFirstDevice(const(BLUETOOTH_DEVICE_SEARCH_PARAMS)*, BLUETOOTH_DEVICE_INFO*);
BOOL BluetoothFindNextDevice(long, BLUETOOTH_DEVICE_INFO*);
BOOL BluetoothFindDeviceClose(long);
uint BluetoothGetDeviceInfo(HANDLE, BLUETOOTH_DEVICE_INFO*);
uint BluetoothUpdateDeviceRecord(const(BLUETOOTH_DEVICE_INFO)*);
uint BluetoothRemoveDevice(const(BLUETOOTH_ADDRESS)*);
BOOL BluetoothSelectDevices(BLUETOOTH_SELECT_DEVICE_PARAMS*);
BOOL BluetoothSelectDevicesFree(BLUETOOTH_SELECT_DEVICE_PARAMS*);
BOOL BluetoothDisplayDeviceProperties(HWND, BLUETOOTH_DEVICE_INFO*);
uint BluetoothAuthenticateDevice(HWND, HANDLE, BLUETOOTH_DEVICE_INFO*, PWSTR, uint);
uint BluetoothAuthenticateDeviceEx(HWND, HANDLE, BLUETOOTH_DEVICE_INFO*, BLUETOOTH_OOB_DATA_INFO*, AUTHENTICATION_REQUIREMENTS);
uint BluetoothAuthenticateMultipleDevices(HWND, HANDLE, uint, BLUETOOTH_DEVICE_INFO*);
uint BluetoothSetServiceState(HANDLE, const(BLUETOOTH_DEVICE_INFO)*, const(GUID)*, uint);
uint BluetoothEnumerateInstalledServices(HANDLE, const(BLUETOOTH_DEVICE_INFO)*, uint*, GUID*);
BOOL BluetoothEnableDiscovery(HANDLE, BOOL);
BOOL BluetoothIsDiscoverable(HANDLE);
BOOL BluetoothEnableIncomingConnections(HANDLE, BOOL);
BOOL BluetoothIsConnectable(HANDLE);
uint BluetoothRegisterForAuthentication(const(BLUETOOTH_DEVICE_INFO)*, long*, PFN_AUTHENTICATION_CALLBACK, void*);
uint BluetoothRegisterForAuthenticationEx(const(BLUETOOTH_DEVICE_INFO)*, long*, PFN_AUTHENTICATION_CALLBACK_EX, void*);
BOOL BluetoothUnregisterAuthentication(long);
uint BluetoothSendAuthenticationResponse(HANDLE, const(BLUETOOTH_DEVICE_INFO)*, const(wchar)*);
uint BluetoothSendAuthenticationResponseEx(HANDLE, BLUETOOTH_AUTHENTICATE_RESPONSE*);
uint BluetoothSdpGetElementData(ubyte*, uint, SDP_ELEMENT_DATA*);
uint BluetoothSdpGetContainerElementData(ubyte*, uint, long*, SDP_ELEMENT_DATA*);
uint BluetoothSdpGetAttributeValue(ubyte*, uint, ushort, SDP_ELEMENT_DATA*);
uint BluetoothSdpGetString(ubyte*, uint, const(SDP_STRING_TYPE_DATA)*, ushort, PWSTR, uint*);
BOOL BluetoothSdpEnumAttributes(ubyte*, uint, PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK, void*);
uint BluetoothSetLocalServiceInfo(HANDLE, const(GUID)*, uint, const(BLUETOOTH_LOCAL_SERVICE_INFO)*);
BOOL BluetoothIsVersionAvailable(ubyte, ubyte);
HRESULT BluetoothGATTGetServices(HANDLE, ushort, BTH_LE_GATT_SERVICE*, ushort*, uint);
HRESULT BluetoothGATTGetIncludedServices(HANDLE, BTH_LE_GATT_SERVICE*, ushort, BTH_LE_GATT_SERVICE*, ushort*, uint);
HRESULT BluetoothGATTGetCharacteristics(HANDLE, BTH_LE_GATT_SERVICE*, ushort, BTH_LE_GATT_CHARACTERISTIC*, ushort*, uint);
HRESULT BluetoothGATTGetDescriptors(HANDLE, BTH_LE_GATT_CHARACTERISTIC*, ushort, BTH_LE_GATT_DESCRIPTOR*, ushort*, uint);
HRESULT BluetoothGATTGetCharacteristicValue(HANDLE, BTH_LE_GATT_CHARACTERISTIC*, uint, BTH_LE_GATT_CHARACTERISTIC_VALUE*, ushort*, uint);
HRESULT BluetoothGATTGetDescriptorValue(HANDLE, BTH_LE_GATT_DESCRIPTOR*, uint, BTH_LE_GATT_DESCRIPTOR_VALUE*, ushort*, uint);
HRESULT BluetoothGATTBeginReliableWrite(HANDLE, ulong*, uint);
HRESULT BluetoothGATTSetCharacteristicValue(HANDLE, BTH_LE_GATT_CHARACTERISTIC*, BTH_LE_GATT_CHARACTERISTIC_VALUE*, ulong, uint);
HRESULT BluetoothGATTEndReliableWrite(HANDLE, ulong, uint);
HRESULT BluetoothGATTAbortReliableWrite(HANDLE, ulong, uint);
HRESULT BluetoothGATTSetDescriptorValue(HANDLE, BTH_LE_GATT_DESCRIPTOR*, BTH_LE_GATT_DESCRIPTOR_VALUE*, uint);
HRESULT BluetoothGATTRegisterEvent(HANDLE, BTH_LE_GATT_EVENT_TYPE, void*, PFNBLUETOOTH_GATT_EVENT_CALLBACK, void*, long*, uint);
HRESULT BluetoothGATTUnregisterEvent(long, uint);
enum BTH_MAJORVERSION = 0x00000002;
enum BTH_MINORVERSION = 0x00000001;
enum GUID_BTHPORT_DEVICE_INTERFACE = GUID(0x850302a, 0xb344, 0x4fda, [0x9b, 0xe9, 0x90, 0x57, 0x6b, 0x8d, 0x46, 0xf0]);
enum GUID_BTH_RFCOMM_SERVICE_DEVICE_INTERFACE = GUID(0xb142fc3e, 0xfa4e, 0x460b, [0x8a, 0xbc, 0x7, 0x2b, 0x62, 0x8b, 0x3c, 0x70]);
enum GUID_BLUETOOTH_RADIO_IN_RANGE = GUID(0xea3b5b82, 0x26ee, 0x450e, [0xb0, 0xd8, 0xd2, 0x6f, 0xe3, 0xa, 0x38, 0x69]);
enum GUID_BLUETOOTH_RADIO_OUT_OF_RANGE = GUID(0xe28867c9, 0xc2aa, 0x4ced, [0xb9, 0x69, 0x45, 0x70, 0x86, 0x60, 0x37, 0xc4]);
enum GUID_BLUETOOTH_L2CAP_EVENT = GUID(0x7eae4030, 0xb709, 0x4aa8, [0xac, 0x55, 0xe9, 0x53, 0x82, 0x9c, 0x9d, 0xaa]);
enum GUID_BLUETOOTH_HCI_EVENT = GUID(0xfc240062, 0x1541, 0x49be, [0xb4, 0x63, 0x84, 0xc4, 0xdc, 0xd7, 0xbf, 0x7f]);
enum GUID_BLUETOOTH_AUTHENTICATION_REQUEST = GUID(0x5dc9136d, 0x996c, 0x46db, [0x84, 0xf5, 0x32, 0xc0, 0xa3, 0xf4, 0x73, 0x52]);
enum GUID_BLUETOOTH_KEYPRESS_EVENT = GUID(0xd668dfcd, 0xf4e, 0x4efc, [0xbf, 0xe0, 0x39, 0x2e, 0xee, 0xc5, 0x10, 0x9c]);
enum GUID_BLUETOOTH_HCI_VENDOR_EVENT = GUID(0x547247e6, 0x45bb, 0x4c33, [0xaf, 0x8c, 0xc0, 0xe, 0xfe, 0x15, 0xa7, 0x1d]);
enum Bluetooth_Base_UUID = GUID(0x0, 0x0, 0x1000, [0x80, 0x0, 0x0, 0x80, 0x5f, 0x9b, 0x34, 0xfb]);
enum SDP_PROTOCOL_UUID16 = 0x00000001;
enum UDP_PROTOCOL_UUID16 = 0x00000002;
enum RFCOMM_PROTOCOL_UUID16 = 0x00000003;
enum TCP_PROTOCOL_UUID16 = 0x00000004;
enum TCSBIN_PROTOCOL_UUID16 = 0x00000005;
enum TCSAT_PROTOCOL_UUID16 = 0x00000006;
enum ATT_PROTOCOL_UUID16 = 0x00000007;
enum OBEX_PROTOCOL_UUID16 = 0x00000008;
enum IP_PROTOCOL_UUID16 = 0x00000009;
enum FTP_PROTOCOL_UUID16 = 0x0000000a;
enum HTTP_PROTOCOL_UUID16 = 0x0000000c;
enum WSP_PROTOCOL_UUID16 = 0x0000000e;
enum BNEP_PROTOCOL_UUID16 = 0x0000000f;
enum UPNP_PROTOCOL_UUID16 = 0x00000010;
enum HID_PROTOCOL_UUID16 = 0x00000011;
enum HCCC_PROTOCOL_UUID16 = 0x00000012;
enum HCDC_PROTOCOL_UUID16 = 0x00000014;
enum HCN_PROTOCOL_UUID16 = 0x00000016;
enum AVCTP_PROTOCOL_UUID16 = 0x00000017;
enum AVDTP_PROTOCOL_UUID16 = 0x00000019;
enum CMPT_PROTOCOL_UUID16 = 0x0000001b;
enum UDI_C_PLANE_PROTOCOL_UUID16 = 0x0000001d;
enum L2CAP_PROTOCOL_UUID16 = 0x00000100;
enum ServiceDiscoveryServerServiceClassID_UUID16 = 0x00001000;
enum BrowseGroupDescriptorServiceClassID_UUID16 = 0x00001001;
enum PublicBrowseGroupServiceClassID_UUID16 = 0x00001002;
enum SerialPortServiceClassID_UUID16 = 0x00001101;
enum LANAccessUsingPPPServiceClassID_UUID16 = 0x00001102;
enum DialupNetworkingServiceClassID_UUID16 = 0x00001103;
enum IrMCSyncServiceClassID_UUID16 = 0x00001104;
enum OBEXObjectPushServiceClassID_UUID16 = 0x00001105;
enum OBEXFileTransferServiceClassID_UUID16 = 0x00001106;
enum IrMcSyncCommandServiceClassID_UUID16 = 0x00001107;
enum HeadsetServiceClassID_UUID16 = 0x00001108;
enum CordlessTelephonyServiceClassID_UUID16 = 0x00001109;
enum AudioSourceServiceClassID_UUID16 = 0x0000110a;
enum AudioSinkServiceClassID_UUID16 = 0x0000110b;
enum AVRemoteControlTargetServiceClassID_UUID16 = 0x0000110c;
enum AVRemoteControlServiceClassID_UUID16 = 0x0000110e;
enum AVRemoteControlControllerServiceClass_UUID16 = 0x0000110f;
enum IntercomServiceClassID_UUID16 = 0x00001110;
enum FaxServiceClassID_UUID16 = 0x00001111;
enum HeadsetAudioGatewayServiceClassID_UUID16 = 0x00001112;
enum WAPServiceClassID_UUID16 = 0x00001113;
enum WAPClientServiceClassID_UUID16 = 0x00001114;
enum PANUServiceClassID_UUID16 = 0x00001115;
enum NAPServiceClassID_UUID16 = 0x00001116;
enum GNServiceClassID_UUID16 = 0x00001117;
enum DirectPrintingServiceClassID_UUID16 = 0x00001118;
enum ReferencePrintingServiceClassID_UUID16 = 0x00001119;
enum ImagingResponderServiceClassID_UUID16 = 0x0000111b;
enum ImagingAutomaticArchiveServiceClassID_UUID16 = 0x0000111c;
enum ImagingReferenceObjectsServiceClassID_UUID16 = 0x0000111d;
enum HandsfreeServiceClassID_UUID16 = 0x0000111e;
enum HandsfreeAudioGatewayServiceClassID_UUID16 = 0x0000111f;
enum DirectPrintingReferenceObjectsServiceClassID_UUID16 = 0x00001120;
enum ReflectsUIServiceClassID_UUID16 = 0x00001121;
enum PrintingStatusServiceClassID_UUID16 = 0x00001123;
enum HumanInterfaceDeviceServiceClassID_UUID16 = 0x00001124;
enum HCRPrintServiceClassID_UUID16 = 0x00001126;
enum HCRScanServiceClassID_UUID16 = 0x00001127;
enum CommonISDNAccessServiceClassID_UUID16 = 0x00001128;
enum VideoConferencingGWServiceClassID_UUID16 = 0x00001129;
enum UDIMTServiceClassID_UUID16 = 0x0000112a;
enum UDITAServiceClassID_UUID16 = 0x0000112b;
enum AudioVideoServiceClassID_UUID16 = 0x0000112c;
enum SimAccessServiceClassID_UUID16 = 0x0000112d;
enum PhonebookAccessPceServiceClassID_UUID16 = 0x0000112e;
enum PhonebookAccessPseServiceClassID_UUID16 = 0x0000112f;
enum HeadsetHSServiceClassID_UUID16 = 0x00001131;
enum MessageAccessServerServiceClassID_UUID16 = 0x00001132;
enum MessageNotificationServerServiceClassID_UUID16 = 0x00001133;
enum GNSSServerServiceClassID_UUID16 = 0x00001136;
enum ThreeDimensionalDisplayServiceClassID_UUID16 = 0x00001137;
enum ThreeDimensionalGlassesServiceClassID_UUID16 = 0x00001138;
enum MPSServiceClassID_UUID16 = 0x0000113b;
enum CTNAccessServiceClassID_UUID16 = 0x0000113c;
enum CTNNotificationServiceClassID_UUID16 = 0x0000113d;
enum PnPInformationServiceClassID_UUID16 = 0x00001200;
enum GenericNetworkingServiceClassID_UUID16 = 0x00001201;
enum GenericFileTransferServiceClassID_UUID16 = 0x00001202;
enum GenericAudioServiceClassID_UUID16 = 0x00001203;
enum GenericTelephonyServiceClassID_UUID16 = 0x00001204;
enum UPnpServiceClassID_UUID16 = 0x00001205;
enum UPnpIpServiceClassID_UUID16 = 0x00001206;
enum ESdpUpnpIpPanServiceClassID_UUID16 = 0x00001300;
enum ESdpUpnpIpLapServiceClassID_UUID16 = 0x00001301;
enum ESdpUpnpL2capServiceClassID_UUID16 = 0x00001302;
enum VideoSourceServiceClassID_UUID16 = 0x00001303;
enum VideoSinkServiceClassID_UUID16 = 0x00001304;
enum HealthDeviceProfileSourceServiceClassID_UUID16 = 0x00001401;
enum HealthDeviceProfileSinkServiceClassID_UUID16 = 0x00001402;
enum AdvancedAudioDistributionProfileID_UUID16 = 0x0000110d;
enum ImagingServiceProfileID_UUID16 = 0x0000111a;
enum BasicPrintingProfileID_UUID16 = 0x00001122;
enum HardcopyCableReplacementProfileID_UUID16 = 0x00001125;
enum PhonebookAccessProfileID_UUID16 = 0x00001130;
enum MessageAccessProfileID_UUID16 = 0x00001134;
enum GNSSProfileID_UUID16 = 0x00001135;
enum ThreeDimensionalSynchronizationProfileID_UUID16 = 0x00001139;
enum MPSProfileID_UUID16 = 0x0000113a;
enum CTNProfileID_UUID16 = 0x0000113e;
enum VideoDistributionProfileID_UUID16 = 0x00001305;
enum HealthDeviceProfileID_UUID16 = 0x00001400;
enum VideoConferencingServiceClassID_UUID16 = 0x0000110f;
enum CommonISDNAccessServiceClass_UUID16 = 0x00001128;
enum VideoConferencingGWServiceClass_UUID16 = 0x00001129;
enum UDIMTServiceClass_UUID16 = 0x0000112a;
enum UDITAServiceClass_UUID16 = 0x0000112b;
enum AudioVideoServiceClass_UUID16 = 0x0000112c;
enum CordlessServiceClassID_UUID16 = 0x00001109;
enum AudioSinkSourceServiceClassID_UUID16 = 0x0000110b;
enum AdvancedAudioDistributionServiceClassID_UUID16 = 0x0000110d;
enum ImagingServiceClassID_UUID16 = 0x0000111a;
enum BasicPrintingServiceClassID_UUID16 = 0x00001122;
enum HardcopyCableReplacementServiceClassID_UUID16 = 0x00001125;
enum BTH_MAX_NAME_SIZE = 0x000000f8;
enum BTH_MAX_PIN_SIZE = 0x00000010;
enum BTH_LINK_KEY_LENGTH = 0x00000010;
enum BTH_MFG_ERICSSON = 0x00000000;
enum BTH_MFG_NOKIA = 0x00000001;
enum BTH_MFG_INTEL = 0x00000002;
enum BTH_MFG_IBM = 0x00000003;
enum BTH_MFG_TOSHIBA = 0x00000004;
enum BTH_MFG_3COM = 0x00000005;
enum BTH_MFG_MICROSOFT = 0x00000006;
enum BTH_MFG_LUCENT = 0x00000007;
enum BTH_MFG_MOTOROLA = 0x00000008;
enum BTH_MFG_INFINEON = 0x00000009;
enum BTH_MFG_CSR = 0x0000000a;
enum BTH_MFG_SILICONWAVE = 0x0000000b;
enum BTH_MFG_DIGIANSWER = 0x0000000c;
enum BTH_MFG_TI = 0x0000000d;
enum BTH_MFG_PARTHUS = 0x0000000e;
enum BTH_MFG_BROADCOM = 0x0000000f;
enum BTH_MFG_MITEL = 0x00000010;
enum BTH_MFG_WIDCOMM = 0x00000011;
enum BTH_MFG_ZEEVO = 0x00000012;
enum BTH_MFG_ATMEL = 0x00000013;
enum BTH_MFG_MITSIBUSHI = 0x00000014;
enum BTH_MFG_RTX_TELECOM = 0x00000015;
enum BTH_MFG_KC_TECHNOLOGY = 0x00000016;
enum BTH_MFG_NEWLOGIC = 0x00000017;
enum BTH_MFG_TRANSILICA = 0x00000018;
enum BTH_MFG_ROHDE_SCHWARZ = 0x00000019;
enum BTH_MFG_TTPCOM = 0x0000001a;
enum BTH_MFG_SIGNIA = 0x0000001b;
enum BTH_MFG_CONEXANT = 0x0000001c;
enum BTH_MFG_QUALCOMM = 0x0000001d;
enum BTH_MFG_INVENTEL = 0x0000001e;
enum BTH_MFG_AVM_BERLIN = 0x0000001f;
enum BTH_MFG_BANDSPEED = 0x00000020;
enum BTH_MFG_MANSELLA = 0x00000021;
enum BTH_MFG_NEC = 0x00000022;
enum BTH_MFG_WAVEPLUS_TECHNOLOGY_CO = 0x00000023;
enum BTH_MFG_ALCATEL = 0x00000024;
enum BTH_MFG_PHILIPS_SEMICONDUCTOR = 0x00000025;
enum BTH_MFG_C_TECHNOLOGIES = 0x00000026;
enum BTH_MFG_OPEN_INTERFACE = 0x00000027;
enum BTH_MFG_RF_MICRO_DEVICES = 0x00000028;
enum BTH_MFG_HITACHI = 0x00000029;
enum BTH_MFG_SYMBOL_TECHNOLOGIES = 0x0000002a;
enum BTH_MFG_TENOVIS = 0x0000002b;
enum BTH_MFG_MACRONIX_INTERNATIONAL = 0x0000002c;
enum BTH_MFG_MARVELL = 0x00000048;
enum BTH_MFG_APPLE = 0x0000004c;
enum BTH_MFG_NORDIC_SEMICONDUCTORS_ASA = 0x00000059;
enum BTH_MFG_ARUBA_NETWORKS = 0x0000011b;
enum BTH_MFG_INTERNAL_USE = 0x0000ffff;
enum SAP_BIT_OFFSET = 0x00000000;
enum COD_FORMAT_BIT_OFFSET = 0x00000000;
enum COD_MINOR_BIT_OFFSET = 0x00000002;
enum COD_FORMAT_MASK = 0x00000003;
enum COD_MINOR_MASK = 0x000000fc;
enum COD_MAJOR_MASK = 0x00001f00;
enum COD_SERVICE_MASK = 0x00ffe000;
enum COD_VERSION = 0x00000000;
enum COD_SERVICE_LIMITED = 0x00000001;
enum COD_SERVICE_LE_AUDIO = 0x00000002;
enum COD_SERVICE_POSITIONING = 0x00000008;
enum COD_SERVICE_NETWORKING = 0x00000010;
enum COD_SERVICE_RENDERING = 0x00000020;
enum COD_SERVICE_CAPTURING = 0x00000040;
enum COD_SERVICE_OBJECT_XFER = 0x00000080;
enum COD_SERVICE_AUDIO = 0x00000100;
enum COD_SERVICE_TELEPHONY = 0x00000200;
enum COD_SERVICE_INFORMATION = 0x00000400;
enum COD_SERVICE_MAX_COUNT = 0x0000000a;
enum COD_MAJOR_MISCELLANEOUS = 0x00000000;
enum COD_MAJOR_COMPUTER = 0x00000001;
enum COD_MAJOR_PHONE = 0x00000002;
enum COD_MAJOR_LAN_ACCESS = 0x00000003;
enum COD_MAJOR_AUDIO = 0x00000004;
enum COD_MAJOR_PERIPHERAL = 0x00000005;
enum COD_MAJOR_IMAGING = 0x00000006;
enum COD_MAJOR_WEARABLE = 0x00000007;
enum COD_MAJOR_TOY = 0x00000008;
enum COD_MAJOR_HEALTH = 0x00000009;
enum COD_MAJOR_UNCLASSIFIED = 0x0000001f;
enum COD_COMPUTER_MINOR_UNCLASSIFIED = 0x00000000;
enum COD_COMPUTER_MINOR_DESKTOP = 0x00000001;
enum COD_COMPUTER_MINOR_SERVER = 0x00000002;
enum COD_COMPUTER_MINOR_LAPTOP = 0x00000003;
enum COD_COMPUTER_MINOR_HANDHELD = 0x00000004;
enum COD_COMPUTER_MINOR_PALM = 0x00000005;
enum COD_COMPUTER_MINOR_WEARABLE = 0x00000006;
enum COD_PHONE_MINOR_UNCLASSIFIED = 0x00000000;
enum COD_PHONE_MINOR_CELLULAR = 0x00000001;
enum COD_PHONE_MINOR_CORDLESS = 0x00000002;
enum COD_PHONE_MINOR_SMART = 0x00000003;
enum COD_PHONE_MINOR_WIRED_MODEM = 0x00000004;
enum COD_AUDIO_MINOR_UNCLASSIFIED = 0x00000000;
enum COD_AUDIO_MINOR_HEADSET = 0x00000001;
enum COD_AUDIO_MINOR_HANDS_FREE = 0x00000002;
enum COD_AUDIO_MINOR_HEADSET_HANDS_FREE = 0x00000003;
enum COD_AUDIO_MINOR_MICROPHONE = 0x00000004;
enum COD_AUDIO_MINOR_LOUDSPEAKER = 0x00000005;
enum COD_AUDIO_MINOR_HEADPHONES = 0x00000006;
enum COD_AUDIO_MINOR_PORTABLE_AUDIO = 0x00000007;
enum COD_AUDIO_MINOR_CAR_AUDIO = 0x00000008;
enum COD_AUDIO_MINOR_SET_TOP_BOX = 0x00000009;
enum COD_AUDIO_MINOR_HIFI_AUDIO = 0x0000000a;
enum COD_AUDIO_MINOR_VCR = 0x0000000b;
enum COD_AUDIO_MINOR_VIDEO_CAMERA = 0x0000000c;
enum COD_AUDIO_MINOR_CAMCORDER = 0x0000000d;
enum COD_AUDIO_MINOR_VIDEO_MONITOR = 0x0000000e;
enum COD_AUDIO_MINOR_VIDEO_DISPLAY_LOUDSPEAKER = 0x0000000f;
enum COD_AUDIO_MINOR_VIDEO_DISPLAY_CONFERENCING = 0x00000010;
enum COD_AUDIO_MINOR_GAMING_TOY = 0x00000012;
enum COD_PERIPHERAL_MINOR_KEYBOARD_MASK = 0x00000010;
enum COD_PERIPHERAL_MINOR_POINTER_MASK = 0x00000020;
enum COD_PERIPHERAL_MINOR_NO_CATEGORY = 0x00000000;
enum COD_PERIPHERAL_MINOR_JOYSTICK = 0x00000001;
enum COD_PERIPHERAL_MINOR_GAMEPAD = 0x00000002;
enum COD_PERIPHERAL_MINOR_REMOTE_CONTROL = 0x00000003;
enum COD_PERIPHERAL_MINOR_SENSING = 0x00000004;
enum COD_IMAGING_MINOR_DISPLAY_MASK = 0x00000004;
enum COD_IMAGING_MINOR_CAMERA_MASK = 0x00000008;
enum COD_IMAGING_MINOR_SCANNER_MASK = 0x00000010;
enum COD_IMAGING_MINOR_PRINTER_MASK = 0x00000020;
enum COD_WEARABLE_MINOR_WRIST_WATCH = 0x00000001;
enum COD_WEARABLE_MINOR_PAGER = 0x00000002;
enum COD_WEARABLE_MINOR_JACKET = 0x00000003;
enum COD_WEARABLE_MINOR_HELMET = 0x00000004;
enum COD_WEARABLE_MINOR_GLASSES = 0x00000005;
enum COD_TOY_MINOR_ROBOT = 0x00000001;
enum COD_TOY_MINOR_VEHICLE = 0x00000002;
enum COD_TOY_MINOR_DOLL_ACTION_FIGURE = 0x00000003;
enum COD_TOY_MINOR_CONTROLLER = 0x00000004;
enum COD_TOY_MINOR_GAME = 0x00000005;
enum COD_HEALTH_MINOR_BLOOD_PRESSURE_MONITOR = 0x00000001;
enum COD_HEALTH_MINOR_THERMOMETER = 0x00000002;
enum COD_HEALTH_MINOR_WEIGHING_SCALE = 0x00000003;
enum COD_HEALTH_MINOR_GLUCOSE_METER = 0x00000004;
enum COD_HEALTH_MINOR_PULSE_OXIMETER = 0x00000005;
enum COD_HEALTH_MINOR_HEART_PULSE_MONITOR = 0x00000006;
enum COD_HEALTH_MINOR_HEALTH_DATA_DISPLAY = 0x00000007;
enum COD_HEALTH_MINOR_STEP_COUNTER = 0x00000008;
enum COD_LAN_ACCESS_BIT_OFFSET = 0x00000005;
enum COD_LAN_MINOR_MASK = 0x0000001c;
enum COD_LAN_ACCESS_MASK = 0x000000e0;
enum COD_LAN_MINOR_UNCLASSIFIED = 0x00000000;
enum COD_LAN_ACCESS_0_USED = 0x00000000;
enum COD_LAN_ACCESS_17_USED = 0x00000001;
enum COD_LAN_ACCESS_33_USED = 0x00000002;
enum COD_LAN_ACCESS_50_USED = 0x00000003;
enum COD_LAN_ACCESS_67_USED = 0x00000004;
enum COD_LAN_ACCESS_83_USED = 0x00000005;
enum COD_LAN_ACCESS_99_USED = 0x00000006;
enum COD_LAN_ACCESS_FULL = 0x00000007;
enum BTH_EIR_FLAGS_ID = 0x00000001;
enum BTH_EIR_16_UUIDS_PARTIAL_ID = 0x00000002;
enum BTH_EIR_16_UUIDS_COMPLETE_ID = 0x00000003;
enum BTH_EIR_32_UUIDS_PARTIAL_ID = 0x00000004;
enum BTH_EIR_32_UUIDS_COMPLETE_ID = 0x00000005;
enum BTH_EIR_128_UUIDS_PARTIAL_ID = 0x00000006;
enum BTH_EIR_128_UUIDS_COMPLETE_ID = 0x00000007;
enum BTH_EIR_LOCAL_NAME_PARTIAL_ID = 0x00000008;
enum BTH_EIR_LOCAL_NAME_COMPLETE_ID = 0x00000009;
enum BTH_EIR_TX_POWER_LEVEL_ID = 0x0000000a;
enum BTH_EIR_OOB_OPT_DATA_LEN_ID = 0x0000000b;
enum BTH_EIR_OOB_BD_ADDR_ID = 0x0000000c;
enum BTH_EIR_OOB_COD_ID = 0x0000000d;
enum BTH_EIR_OOB_SP_HASH_ID = 0x0000000e;
enum BTH_EIR_OOB_SP_RANDOMIZER_ID = 0x0000000f;
enum BTH_EIR_MANUFACTURER_ID = 0x000000ff;
enum BTH_EIR_SIZE = 0x000000f0;
enum LAP_GIAC_VALUE = 0x009e8b33;
enum LAP_LIAC_VALUE = 0x009e8b00;
enum BTH_ADDR_IAC_FIRST = 0x009e8b00;
enum BTH_ADDR_IAC_LAST = 0x009e8b3f;
enum BTH_ADDR_LIAC = 0x009e8b00;
enum BTH_ADDR_GIAC = 0x009e8b33;
enum BTH_ERROR_SUCCESS = 0x00000000;
enum BTH_ERROR_UNKNOWN_HCI_COMMAND = 0x00000001;
enum BTH_ERROR_NO_CONNECTION = 0x00000002;
enum BTH_ERROR_HARDWARE_FAILURE = 0x00000003;
enum BTH_ERROR_PAGE_TIMEOUT = 0x00000004;
enum BTH_ERROR_AUTHENTICATION_FAILURE = 0x00000005;
enum BTH_ERROR_KEY_MISSING = 0x00000006;
enum BTH_ERROR_MEMORY_FULL = 0x00000007;
enum BTH_ERROR_CONNECTION_TIMEOUT = 0x00000008;
enum BTH_ERROR_MAX_NUMBER_OF_CONNECTIONS = 0x00000009;
enum BTH_ERROR_MAX_NUMBER_OF_SCO_CONNECTIONS = 0x0000000a;
enum BTH_ERROR_ACL_CONNECTION_ALREADY_EXISTS = 0x0000000b;
enum BTH_ERROR_COMMAND_DISALLOWED = 0x0000000c;
enum BTH_ERROR_HOST_REJECTED_LIMITED_RESOURCES = 0x0000000d;
enum BTH_ERROR_HOST_REJECTED_SECURITY_REASONS = 0x0000000e;
enum BTH_ERROR_HOST_REJECTED_PERSONAL_DEVICE = 0x0000000f;
enum BTH_ERROR_HOST_TIMEOUT = 0x00000010;
enum BTH_ERROR_UNSUPPORTED_FEATURE_OR_PARAMETER = 0x00000011;
enum BTH_ERROR_INVALID_HCI_PARAMETER = 0x00000012;
enum BTH_ERROR_REMOTE_USER_ENDED_CONNECTION = 0x00000013;
enum BTH_ERROR_REMOTE_LOW_RESOURCES = 0x00000014;
enum BTH_ERROR_REMOTE_POWERING_OFF = 0x00000015;
enum BTH_ERROR_LOCAL_HOST_TERMINATED_CONNECTION = 0x00000016;
enum BTH_ERROR_REPEATED_ATTEMPTS = 0x00000017;
enum BTH_ERROR_PAIRING_NOT_ALLOWED = 0x00000018;
enum BTH_ERROR_UKNOWN_LMP_PDU = 0x00000019;
enum BTH_ERROR_UNSUPPORTED_REMOTE_FEATURE = 0x0000001a;
enum BTH_ERROR_SCO_OFFSET_REJECTED = 0x0000001b;
enum BTH_ERROR_SCO_INTERVAL_REJECTED = 0x0000001c;
enum BTH_ERROR_SCO_AIRMODE_REJECTED = 0x0000001d;
enum BTH_ERROR_INVALID_LMP_PARAMETERS = 0x0000001e;
enum BTH_ERROR_UNSPECIFIED_ERROR = 0x0000001f;
enum BTH_ERROR_UNSUPPORTED_LMP_PARM_VALUE = 0x00000020;
enum BTH_ERROR_ROLE_CHANGE_NOT_ALLOWED = 0x00000021;
enum BTH_ERROR_LMP_RESPONSE_TIMEOUT = 0x00000022;
enum BTH_ERROR_LMP_TRANSACTION_COLLISION = 0x00000023;
enum BTH_ERROR_LMP_PDU_NOT_ALLOWED = 0x00000024;
enum BTH_ERROR_ENCRYPTION_MODE_NOT_ACCEPTABLE = 0x00000025;
enum BTH_ERROR_UNIT_KEY_NOT_USED = 0x00000026;
enum BTH_ERROR_QOS_IS_NOT_SUPPORTED = 0x00000027;
enum BTH_ERROR_INSTANT_PASSED = 0x00000028;
enum BTH_ERROR_PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED = 0x00000029;
enum BTH_ERROR_DIFFERENT_TRANSACTION_COLLISION = 0x0000002a;
enum BTH_ERROR_QOS_UNACCEPTABLE_PARAMETER = 0x0000002c;
enum BTH_ERROR_QOS_REJECTED = 0x0000002d;
enum BTH_ERROR_CHANNEL_CLASSIFICATION_NOT_SUPPORTED = 0x0000002e;
enum BTH_ERROR_INSUFFICIENT_SECURITY = 0x0000002f;
enum BTH_ERROR_PARAMETER_OUT_OF_MANDATORY_RANGE = 0x00000030;
enum BTH_ERROR_ROLE_SWITCH_PENDING = 0x00000032;
enum BTH_ERROR_RESERVED_SLOT_VIOLATION = 0x00000034;
enum BTH_ERROR_ROLE_SWITCH_FAILED = 0x00000035;
enum BTH_ERROR_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE = 0x00000036;
enum BTH_ERROR_SECURE_SIMPLE_PAIRING_NOT_SUPPORTED_BY_HOST = 0x00000037;
enum BTH_ERROR_HOST_BUSY_PAIRING = 0x00000038;
enum BTH_ERROR_CONNECTION_REJECTED_DUE_TO_NO_SUITABLE_CHANNEL_FOUND = 0x00000039;
enum BTH_ERROR_CONTROLLER_BUSY = 0x0000003a;
enum BTH_ERROR_UNACCEPTABLE_CONNECTION_INTERVAL = 0x0000003b;
enum BTH_ERROR_DIRECTED_ADVERTISING_TIMEOUT = 0x0000003c;
enum BTH_ERROR_CONNECTION_TERMINATED_DUE_TO_MIC_FAILURE = 0x0000003d;
enum BTH_ERROR_CONNECTION_FAILED_TO_BE_ESTABLISHED = 0x0000003e;
enum BTH_ERROR_MAC_CONNECTION_FAILED = 0x0000003f;
enum BTH_ERROR_COARSE_CLOCK_ADJUSTMENT_REJECTED = 0x00000040;
enum BTH_ERROR_TYPE_0_SUBMAP_NOT_DEFINED = 0x00000041;
enum BTH_ERROR_UNKNOWN_ADVERTISING_IDENTIFIER = 0x00000042;
enum BTH_ERROR_LIMIT_REACHED = 0x00000043;
enum BTH_ERROR_OPERATION_CANCELLED_BY_HOST = 0x00000044;
enum BTH_ERROR_PACKET_TOO_LONG = 0x00000045;
enum BTH_ERROR_UNSPECIFIED = 0x000000ff;
enum L2CAP_MIN_MTU = 0x00000030;
enum L2CAP_MAX_MTU = 0x0000ffff;
enum L2CAP_DEFAULT_MTU = 0x000002a0;
enum MAX_L2CAP_PING_DATA_LENGTH = 0x0000002c;
enum MAX_L2CAP_INFO_DATA_LENGTH = 0x0000002c;
enum BDIF_ADDRESS = 0x00000001;
enum BDIF_COD = 0x00000002;
enum BDIF_NAME = 0x00000004;
enum BDIF_PAIRED = 0x00000008;
enum BDIF_PERSONAL = 0x00000010;
enum BDIF_CONNECTED = 0x00000020;
enum BDIF_SHORT_NAME = 0x00000040;
enum BDIF_VISIBLE = 0x00000080;
enum BDIF_SSP_SUPPORTED = 0x00000100;
enum BDIF_SSP_PAIRED = 0x00000200;
enum BDIF_SSP_MITM_PROTECTED = 0x00000400;
enum BDIF_RSSI = 0x00001000;
enum BDIF_EIR = 0x00002000;
enum BDIF_BR = 0x00004000;
enum BDIF_LE = 0x00008000;
enum BDIF_LE_PAIRED = 0x00010000;
enum BDIF_LE_PERSONAL = 0x00020000;
enum BDIF_LE_MITM_PROTECTED = 0x00040000;
enum BDIF_LE_PRIVACY_ENABLED = 0x00080000;
enum BDIF_LE_RANDOM_ADDRESS_TYPE = 0x00100000;
enum BDIF_LE_DISCOVERABLE = 0x00200000;
enum BDIF_LE_NAME = 0x00400000;
enum BDIF_LE_VISIBLE = 0x00800000;
enum BDIF_LE_CONNECTED = 0x01000000;
enum BDIF_LE_CONNECTABLE = 0x02000000;
enum BDIF_CONNECTION_INBOUND = 0x04000000;
enum BDIF_BR_SECURE_CONNECTION_PAIRED = 0x08000000;
enum BDIF_LE_SECURE_CONNECTION_PAIRED = 0x10000000;
enum BDIF_DEBUGKEY = 0x20000000;
enum BDIF_LE_DEBUGKEY = 0x40000000;
enum BDIF_TX_POWER = 0x80000000;
enum HCI_CONNECTION_TYPE_ACL = 0x00000001;
enum HCI_CONNECTION_TYPE_SCO = 0x00000002;
enum HCI_CONNECTION_TYPE_LE = 0x00000003;
enum HCI_CONNNECTION_TYPE_ACL = 0x00000001;
enum HCI_CONNNECTION_TYPE_SCO = 0x00000002;
enum BTH_MAX_SERVICE_NAME_SIZE = 0x00000100;
enum MAX_UUIDS_IN_QUERY = 0x0000000c;
enum BTH_VID_DEFAULT_VALUE = 0x0000ffff;
enum SDP_ERROR_INVALID_SDP_VERSION = 0x00000001;
enum SDP_ERROR_INVALID_RECORD_HANDLE = 0x00000002;
enum SDP_ERROR_INVALID_REQUEST_SYNTAX = 0x00000003;
enum SDP_ERROR_INVALID_PDU_SIZE = 0x00000004;
enum SDP_ERROR_INVALID_CONTINUATION_STATE = 0x00000005;
enum SDP_ERROR_INSUFFICIENT_RESOURCES = 0x00000006;
enum SDP_ATTRIB_RECORD_HANDLE = 0x00000000;
enum SDP_ATTRIB_CLASS_ID_LIST = 0x00000001;
enum SDP_ATTRIB_RECORD_STATE = 0x00000002;
enum SDP_ATTRIB_SERVICE_ID = 0x00000003;
enum SDP_ATTRIB_PROTOCOL_DESCRIPTOR_LIST = 0x00000004;
enum SDP_ATTRIB_BROWSE_GROUP_LIST = 0x00000005;
enum SDP_ATTRIB_LANG_BASE_ATTRIB_ID_LIST = 0x00000006;
enum SDP_ATTRIB_INFO_TIME_TO_LIVE = 0x00000007;
enum SDP_ATTRIB_AVAILABILITY = 0x00000008;
enum SDP_ATTRIB_PROFILE_DESCRIPTOR_LIST = 0x00000009;
enum SDP_ATTRIB_DOCUMENTATION_URL = 0x0000000a;
enum SDP_ATTRIB_CLIENT_EXECUTABLE_URL = 0x0000000b;
enum SDP_ATTRIB_ICON_URL = 0x0000000c;
enum SDP_ATTRIB_ADDITIONAL_PROTOCOL_DESCRIPTOR_LIST = 0x0000000d;
enum SDP_ATTRIB_PROFILE_SPECIFIC = 0x00000200;
enum LANG_BASE_LANGUAGE_INDEX = 0x00000000;
enum LANG_BASE_ENCODING_INDEX = 0x00000001;
enum LANG_BASE_OFFSET_INDEX = 0x00000002;
enum LANG_DEFAULT_ID = 0x00000100;
enum LANGUAGE_EN_US = 0x0000656e;
enum ENCODING_UTF_8 = 0x0000006a;
enum STRING_NAME_OFFSET = 0x00000000;
enum STRING_DESCRIPTION_OFFSET = 0x00000001;
enum STRING_PROVIDER_NAME_OFFSET = 0x00000002;
enum SDP_ATTRIB_SDP_VERSION_NUMBER_LIST = 0x00000200;
enum SDP_ATTRIB_SDP_DATABASE_STATE = 0x00000201;
enum SDP_ATTRIB_BROWSE_GROUP_ID = 0x00000200;
enum SDP_ATTRIB_CORDLESS_EXTERNAL_NETWORK = 0x00000301;
enum SDP_ATTRIB_FAX_CLASS_1_SUPPORT = 0x00000302;
enum SDP_ATTRIB_FAX_CLASS_2_0_SUPPORT = 0x00000303;
enum SDP_ATTRIB_FAX_CLASS_2_SUPPORT = 0x00000304;
enum SDP_ATTRIB_FAX_AUDIO_FEEDBACK_SUPPORT = 0x00000305;
enum SDP_ATTRIB_HEADSET_REMOTE_AUDIO_VOLUME_CONTROL = 0x00000302;
enum SDP_ATTRIB_LAN_LPSUBNET = 0x00000200;
enum SDP_ATTRIB_OBJECT_PUSH_SUPPORTED_FORMATS_LIST = 0x00000303;
enum SDP_ATTRIB_SYNCH_SUPPORTED_DATA_STORES_LIST = 0x00000301;
enum SDP_ATTRIB_SERVICE_VERSION = 0x00000300;
enum SDP_ATTRIB_PAN_NETWORK_ADDRESS = 0x00000306;
enum SDP_ATTRIB_PAN_WAP_GATEWAY = 0x00000307;
enum SDP_ATTRIB_PAN_HOME_PAGE_URL = 0x00000308;
enum SDP_ATTRIB_PAN_WAP_STACK_TYPE = 0x00000309;
enum SDP_ATTRIB_PAN_SECURITY_DESCRIPTION = 0x0000030a;
enum SDP_ATTRIB_PAN_NET_ACCESS_TYPE = 0x0000030b;
enum SDP_ATTRIB_PAN_MAX_NET_ACCESS_RATE = 0x0000030c;
enum SDP_ATTRIB_IMAGING_SUPPORTED_CAPABILITIES = 0x00000310;
enum SDP_ATTRIB_IMAGING_SUPPORTED_FEATURES = 0x00000311;
enum SDP_ATTRIB_IMAGING_SUPPORTED_FUNCTIONS = 0x00000312;
enum SDP_ATTRIB_IMAGING_TOTAL_DATA_CAPACITY = 0x00000313;
enum SDP_ATTRIB_DI_SPECIFICATION_ID = 0x00000200;
enum SDP_ATTRIB_DI_VENDOR_ID = 0x00000201;
enum SDP_ATTRIB_DI_PRODUCT_ID = 0x00000202;
enum SDP_ATTRIB_DI_VERSION = 0x00000203;
enum SDP_ATTRIB_DI_PRIMARY_RECORD = 0x00000204;
enum SDP_ATTRIB_DI_VENDOR_ID_SOURCE = 0x00000205;
enum SDP_ATTRIB_HID_DEVICE_RELEASE_NUMBER = 0x00000200;
enum SDP_ATTRIB_HID_PARSER_VERSION = 0x00000201;
enum SDP_ATTRIB_HID_DEVICE_SUBCLASS = 0x00000202;
enum SDP_ATTRIB_HID_COUNTRY_CODE = 0x00000203;
enum SDP_ATTRIB_HID_VIRTUAL_CABLE = 0x00000204;
enum SDP_ATTRIB_HID_RECONNECT_INITIATE = 0x00000205;
enum SDP_ATTRIB_HID_DESCRIPTOR_LIST = 0x00000206;
enum SDP_ATTRIB_HID_LANG_ID_BASE_LIST = 0x00000207;
enum SDP_ATTRIB_HID_SDP_DISABLE = 0x00000208;
enum SDP_ATTRIB_HID_BATTERY_POWER = 0x00000209;
enum SDP_ATTRIB_HID_REMOTE_WAKE = 0x0000020a;
enum SDP_ATTRIB_HID_PROFILE_VERSION = 0x0000020b;
enum SDP_ATTRIB_HID_SUPERVISION_TIMEOUT = 0x0000020c;
enum SDP_ATTRIB_HID_NORMALLY_CONNECTABLE = 0x0000020d;
enum SDP_ATTRIB_HID_BOOT_DEVICE = 0x0000020e;
enum SDP_ATTRIB_HID_SSR_HOST_MAX_LATENCY = 0x0000020f;
enum SDP_ATTRIB_HID_SSR_HOST_MIN_TIMEOUT = 0x00000210;
enum SDP_ATTRIB_A2DP_SUPPORTED_FEATURES = 0x00000311;
enum SDP_ATTRIB_AVRCP_SUPPORTED_FEATURES = 0x00000311;
enum SDP_ATTRIB_HFP_SUPPORTED_FEATURES = 0x00000311;
enum AVRCP_SUPPORTED_FEATURES_CATEGORY_1 = 0x00000001;
enum AVRCP_SUPPORTED_FEATURES_CATEGORY_2 = 0x00000002;
enum AVRCP_SUPPORTED_FEATURES_CATEGORY_3 = 0x00000004;
enum AVRCP_SUPPORTED_FEATURES_CATEGORY_4 = 0x00000008;
enum AVRCP_SUPPORTED_FEATURES_CT_BROWSING = 0x00000040;
enum AVRCP_SUPPORTED_FEATURES_CT_COVER_ART_IMAGE_PROPERTIES = 0x00000080;
enum AVRCP_SUPPORTED_FEATURES_CT_COVER_ART_IMAGE = 0x00000100;
enum AVRCP_SUPPORTED_FEATURES_CT_COVER_ART_LINKED_THUMBNAIL = 0x00000200;
enum AVRCP_SUPPORTED_FEATURES_TG_PLAYER_APPLICATION_SETTINGS = 0x00000010;
enum AVRCP_SUPPORTED_FEATURES_TG_GROUP_NAVIGATION = 0x00000020;
enum AVRCP_SUPPORTED_FEATURES_TG_BROWSING = 0x00000040;
enum AVRCP_SUPPORTED_FEATURES_TG_MULTIPLE_PLAYER_APPLICATIONS = 0x00000080;
enum AVRCP_SUPPORTED_FEATURES_TG_COVER_ART = 0x00000100;
enum A2DP_SINK_SUPPORTED_FEATURES_HEADPHONE = 0x00000001;
enum A2DP_SINK_SUPPORTED_FEATURES_SPEAKER = 0x00000002;
enum A2DP_SINK_SUPPORTED_FEATURES_RECORDER = 0x00000004;
enum A2DP_SINK_SUPPORTED_FEATURES_AMPLIFIER = 0x00000008;
enum A2DP_SOURCE_SUPPORTED_FEATURES_PLAYER = 0x00000001;
enum A2DP_SOURCE_SUPPORTED_FEATURES_MICROPHONE = 0x00000002;
enum A2DP_SOURCE_SUPPORTED_FEATURES_TUNER = 0x00000004;
enum A2DP_SOURCE_SUPPORTED_FEATURES_MIXER = 0x00000008;
enum CORDLESS_EXTERNAL_NETWORK_PSTN = 0x00000001;
enum CORDLESS_EXTERNAL_NETWORK_ISDN = 0x00000002;
enum CORDLESS_EXTERNAL_NETWORK_GSM = 0x00000003;
enum CORDLESS_EXTERNAL_NETWORK_CDMA = 0x00000004;
enum CORDLESS_EXTERNAL_NETWORK_ANALOG_CELLULAR = 0x00000005;
enum CORDLESS_EXTERNAL_NETWORK_PACKET_SWITCHED = 0x00000006;
enum CORDLESS_EXTERNAL_NETWORK_OTHER = 0x00000007;
enum OBJECT_PUSH_FORMAT_VCARD_2_1 = 0x00000001;
enum OBJECT_PUSH_FORMAT_VCARD_3_0 = 0x00000002;
enum OBJECT_PUSH_FORMAT_VCAL_1_0 = 0x00000003;
enum OBJECT_PUSH_FORMAT_ICAL_2_0 = 0x00000004;
enum OBJECT_PUSH_FORMAT_VNOTE = 0x00000005;
enum OBJECT_PUSH_FORMAT_VMESSAGE = 0x00000006;
enum OBJECT_PUSH_FORMAT_ANY = 0x000000ff;
enum SYNCH_DATA_STORE_PHONEBOOK = 0x00000001;
enum SYNCH_DATA_STORE_CALENDAR = 0x00000003;
enum SYNCH_DATA_STORE_NOTES = 0x00000005;
enum SYNCH_DATA_STORE_MESSAGES = 0x00000006;
enum DI_VENDOR_ID_SOURCE_BLUETOOTH_SIG = 0x00000001;
enum DI_VENDOR_ID_SOURCE_USB_IF = 0x00000002;
enum PSM_SDP = 0x00000001;
enum PSM_RFCOMM = 0x00000003;
enum PSM_TCS_BIN = 0x00000005;
enum PSM_TCS_BIN_CORDLESS = 0x00000007;
enum PSM_BNEP = 0x0000000f;
enum PSM_HID_CONTROL = 0x00000011;
enum PSM_HID_INTERRUPT = 0x00000013;
enum PSM_UPNP = 0x00000015;
enum PSM_AVCTP = 0x00000017;
enum PSM_AVDTP = 0x00000019;
enum PSM_AVCTP_BROWSE = 0x0000001b;
enum PSM_UDI_C_PLANE = 0x0000001d;
enum PSM_ATT = 0x0000001f;
enum PSM_3DSP = 0x00000021;
enum PSM_LE_IPSP = 0x00000023;
enum STR_ADDR_FMTA = "(%02x:%02x:%02x:%02x:%02x:%02x)";
enum STR_ADDR_FMTW = "(%02x:%02x:%02x:%02x:%02x:%02x)";
enum STR_ADDR_SHORT_FMTA = "%04x%08x";
enum STR_ADDR_SHORT_FMTW = "%04x%08x";
enum STR_USBHCI_CLASS_HARDWAREIDA = "USB\\Class_E0&SubClass_01&Prot_01";
enum STR_USBHCI_CLASS_HARDWAREIDW = "USB\\Class_E0&SubClass_01&Prot_01";
enum STR_ADDR_FMT = "(%02x:%02x:%02x:%02x:%02x:%02x)";
enum STR_ADDR_SHORT_FMT = "%04x%08x";
enum STR_USBHCI_CLASS_HARDWAREID = "USB\\Class_E0&SubClass_01&Prot_01";
enum BTH_IOCTL_BASE = 0x00000000;
enum SDP_CONNECT_CACHE = 0x00000001;
enum SDP_CONNECT_ALLOW_PIN = 0x00000002;
enum SDP_REQUEST_TO_DEFAULT = 0x00000000;
enum SDP_REQUEST_TO_MIN = 0x0000000a;
enum SDP_REQUEST_TO_MAX = 0x0000002d;
enum SERVICE_OPTION_DO_NOT_PUBLISH = 0x00000002;
enum SERVICE_OPTION_NO_PUBLIC_BROWSE = 0x00000004;
enum SERVICE_OPTION_DO_NOT_PUBLISH_EIR = 0x00000008;
enum SERVICE_SECURITY_USE_DEFAULTS = 0x00000000;
enum SERVICE_SECURITY_NONE = 0x00000001;
enum SERVICE_SECURITY_AUTHORIZE = 0x00000002;
enum SERVICE_SECURITY_AUTHENTICATE = 0x00000004;
enum SERVICE_SECURITY_ENCRYPT_REQUIRED = 0x00000010;
enum SERVICE_SECURITY_ENCRYPT_OPTIONAL = 0x00000020;
enum SERVICE_SECURITY_DISABLED = 0x10000000;
enum SERVICE_SECURITY_NO_ASK = 0x20000000;
enum SDP_SEARCH_NO_PARSE_CHECK = 0x00000001;
enum SDP_SEARCH_NO_FORMAT_CHECK = 0x00000002;
enum BTH_HOST_FEATURE_ENHANCED_RETRANSMISSION_MODE = 0x0000000000000001;
enum BTH_HOST_FEATURE_STREAMING_MODE = 0x0000000000000002;
enum BTH_HOST_FEATURE_LOW_ENERGY = 0x0000000000000004;
enum BTH_HOST_FEATURE_SCO_HCI = 0x0000000000000008;
enum BTH_HOST_FEATURE_SCO_HCIBYPASS = 0x0000000000000010;
enum BLUETOOTH_MAX_NAME_SIZE = 0x000000f8;
enum BLUETOOTH_MAX_PASSKEY_SIZE = 0x00000010;
enum BLUETOOTH_MAX_PASSKEY_BUFFER_SIZE = 0x00000011;
enum BLUETOOTH_MAX_SERVICE_NAME_SIZE = 0x00000100;
enum BLUETOOTH_DEVICE_NAME_SIZE = 0x00000100;
enum BLUETOOTH_SERVICE_DISABLE = 0x00000000;
enum BLUETOOTH_SERVICE_ENABLE = 0x00000001;
enum GUID_BLUETOOTHLE_DEVICE_INTERFACE = GUID(0x781aee18, 0x7733, 0x4ce4, [0xad, 0xd0, 0x91, 0xf4, 0x1c, 0x67, 0xb5, 0x92]);
enum GUID_BLUETOOTH_GATT_SERVICE_DEVICE_INTERFACE = GUID(0x6e3bb679, 0x4372, 0x40c8, [0x9e, 0xaa, 0x45, 0x9, 0xdf, 0x26, 0xc, 0xd8]);
enum BTH_LE_ATT_BLUETOOTH_BASE_GUID = GUID(0x0, 0x0, 0x1000, [0x80, 0x0, 0x0, 0x80, 0x5f, 0x9b, 0x34, 0xfb]);
enum BTH_LE_SERVICE_GAP = 0x00001800;
enum BTH_LE_SERVICE_GATT = 0x00001801;
enum BTH_LE_GATT_ATTRIBUTE_TYPE_PRIMARY_SERVICE = 0x00002800;
enum BTH_LE_GATT_ATTRIBUTE_TYPE_SECONDARY_SERVICE = 0x00002801;
enum BTH_LE_GATT_ATTRIBUTE_TYPE_INCLUDE = 0x00002802;
enum BTH_LE_GATT_ATTRIBUTE_TYPE_CHARACTERISTIC = 0x00002803;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_EXTENDED_PROPERTIES = 0x00002900;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_USER_DESCRIPTION = 0x00002901;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_CLIENT_CONFIGURATION = 0x00002902;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_SERVER_CONFIGURATION = 0x00002903;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_FORMAT = 0x00002904;
enum BTH_LE_GATT_CHARACTERISTIC_DESCRIPTOR_AGGREGATE_FORMAT = 0x00002905;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_DEVICE_NAME = 0x00002a00;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_APPEARANCE = 0x00002a01;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_PERIPHERAL_PRIVACY_FLAG = 0x00002a02;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_RECONNECTION_ADDRESS = 0x00002a03;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_PERIPHERAL_PREFERED_CONNECTION_PARAMETER = 0x00002a04;
enum BTH_LE_GATT_CHARACTERISTIC_TYPE_SERVICE_CHANGED = 0x00002a05;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_OFFSET = 0x00000006;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_MASK = 0x000003ff;
enum BTH_LE_GAP_APPEARANCE_SUB_CATEGORY_MASK = 0x0000003f;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_UNCATEGORIZED = 0x00000000;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_PHONE = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_COMPUTER = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_WATCH = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_CLOCK = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_DISPLAY = 0x00000005;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_REMOTE_CONTROL = 0x00000006;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_EYE_GLASSES = 0x00000007;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_TAG = 0x00000008;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_KEYRING = 0x00000009;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_MEDIA_PLAYER = 0x0000000a;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_BARCODE_SCANNER = 0x0000000b;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_THERMOMETER = 0x0000000c;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HEART_RATE = 0x0000000d;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_BLOOD_PRESSURE = 0x0000000e;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HID = 0x0000000f;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_GLUCOSE_METER = 0x00000010;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_RUNNING_WALKING_SENSOR = 0x00000011;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_CYCLING = 0x00000012;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_CONTROL_DEVICE = 0x00000013;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_NETWORK_DEVICE = 0x00000014;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_SENSOR = 0x00000015;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_LIGHT_FIXTURES = 0x00000016;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_FAN = 0x00000017;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HVAC = 0x00000018;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_AIR_CONDITIONING = 0x00000019;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HUMIDIFIER = 0x0000001a;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HEATING = 0x0000001b;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_ACCESS_CONTROL = 0x0000001c;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_MOTORIZED_DEVICE = 0x0000001d;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_POWER_DEVICE = 0x0000001e;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_LIGHT_SOURCE = 0x0000001f;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_WINDOW_COVERING = 0x00000020;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_AUDIO_SINK = 0x00000021;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_AUDIO_SOURCE = 0x00000022;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_MOTORIZED_VEHICLE = 0x00000023;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_DOMESTIC_APPLIANCE = 0x00000024;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_WEARABLE_AUDIO_DEVICE = 0x00000025;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_AIRCRAFT = 0x00000026;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_AV_EQUIPMENT = 0x00000027;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_DISPLAY_EQUIPMENT = 0x00000028;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_HEARING_AID = 0x00000029;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_GAMING = 0x0000002a;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_SIGNAGE = 0x0000002b;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_PLUSE_OXIMETER = 0x00000031;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_WEIGHT_SCALE = 0x00000032;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_PERSONAL_MOBILITY_DEVICE = 0x00000033;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_CONTINUOUS_GLUCOSE_MONITOR = 0x00000034;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_INSULIN_PUMP = 0x00000035;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_MEDICATION_DELIVERY = 0x00000036;
enum BTH_LE_GAP_APPEARANCE_CATEGORY_OUTDOOR_SPORTS_ACTIVITY = 0x00000051;
enum BTH_LE_GAP_APPEARANCE_SUBCATEGORY_GENERIC = 0x00000000;
enum BTH_LE_GAP_APPEARANCE_WATCH_SUBCATEGORY_SPORTS_WATCH = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_THERMOMETER_SUBCATEGORY_EAR = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_HEART_RATE_SUBCATEGORY_HEART_RATE_BELT = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_BLOOD_PRESSURE_SUBCATEGORY_ARM = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_BLOOD_PRESSURE_SUBCATEGORY_WRIST = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_KEYBOARD = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_MOUSE = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_JOYSTICK = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_GAMEPAD = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_DIGITIZER_TABLET = 0x00000005;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_CARD_READER = 0x00000006;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_DIGITAL_PEN = 0x00000007;
enum BTH_LE_GAP_APPEARANCE_HID_SUBCATEGORY_BARCODE_SCANNER = 0x00000008;
enum BTH_LE_GAP_APPEARANCE_RUNNING_WALKING_SENSOR_SUBCATEGORY_IN_SHOE = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_RUNNING_WALKING_SENSOR_SUBCATEGORY_ON_SHOE = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_RUNNING_WALKING_SENSOR_SUBCATEGORY_ON_HIP = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_CYCLING_SUBCATEGORY_CYCLING_COMPUTER = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_CYCLING_SUBCATEGORY_SPEED_SENSOR = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_CYCLING_SUBCATEGORY_CADENCE_SENSOR = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_CYCLING_SUBCATEGORY_POWER_SENSOR = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_CYCLING_SUBCATEGORY_SPEED_AND_CADENCE_SENSOR = 0x00000005;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SINK_SUBCATEGORY_STANDALONE_SPEAKER = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SINK_SUBCATEGORY_SOUNDBAR = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SINK_SUBCATEGORY_BOOKSHELF_SPEAKER = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SINK_SUBCATEGORY_STANDMOUNTED_SPEAKER = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SINK_SUBCATEGORY_SPEAKERPHONE = 0x00000005;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_MICROPHONE = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_ALARM = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_BELL = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_HORN = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_BROADCASTING_DEVICE = 0x00000005;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_SERVICE_DESK = 0x00000006;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_KIOSK = 0x00000007;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_BROADCASTING_ROOM = 0x00000008;
enum BTH_LE_GAP_APPEARANCE_AUDIO_SOURCE_SUBCATEGORY_AUDITORIUM = 0x00000009;
enum BTH_LE_GAP_APPEARANCE_WEARABLE_AUDIO_DEVICE_SUBCATEGORY_EARBUD = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_WEARABLE_AUDIO_DEVICE_SUBCATEGORY_HEADSET = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_WEARABLE_AUDIO_DEVICE_SUBCATEGORY_HEADPHONES = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_WEARABLE_AUDIO_DEVICE_SUBCATEGORY_NECKBAND = 0x00000004;
enum BTH_LE_GAP_APPEARANCE_HEARING_AID_SUBCATEGORY_IN_EAR_HEARING_AID = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_HEARING_AID_SUBCATEGORY_BEHIND_EAR_HEARING_AID = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_HEARING_AID_SUBCATEGORY_COCHLEAR_IMPLANT = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_PULSE_OXIMETER_SUBCATEGORY_FINGERTIP = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_PULSE_OXIMETER_SUBCATEGORY_WRIST_WORN = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_OUTDOOR_SPORTS_ACTIVITY_SUBCATEGORY_LOCATION_DISPLAY_DEVICE = 0x00000001;
enum BTH_LE_GAP_APPEARANCE_OUTDOOR_SPORTS_ACTIVITY_SUBCATEGORY_LOCATION_NAVIGATION_DISPLAY_DEVICE = 0x00000002;
enum BTH_LE_GAP_APPEARANCE_OUTDOOR_SPORTS_ACTIVITY_SUBCATEGORY_LOCATION_POD = 0x00000003;
enum BTH_LE_GAP_APPEARANCE_OUTDOOR_SPORTS_ACTIVITY_SUBCATEGORY_LOCATION_NAVIGATION_POD = 0x00000004;
enum BTH_LE_GATT_DEFAULT_MAX_INCLUDED_SERVICES_DEPTH = 0x00000003;
enum BTH_LE_ATT_TRANSACTION_TIMEOUT = 0x0000001e;
enum BTH_LE_ATT_MAX_VALUE_SIZE = 0x00000200;
enum BTH_LE_ATT_CID = 0x00000004;
enum BTHLEENUM_ATT_MTU_MIN = 0x00000017;
enum BTHLEENUM_ATT_MTU_MAX = 0x0000ffff;
enum BTHLEENUM_ATT_MTU_DEFAULT = 0x00000017;
enum BTHLEENUM_ATT_MTU_INITIAL_NEGOTIATION = 0x0000020d;
enum BTH_LE_ERROR_INVALID_HANDLE = 0x00000001;
enum BTH_LE_ERROR_READ_NOT_PERMITTED = 0x00000002;
enum BTH_LE_ERROR_WRITE_NOT_PERMITTED = 0x00000003;
enum BTH_LE_ERROR_INVALID_PDU = 0x00000004;
enum BTH_LE_ERROR_INSUFFICIENT_AUTHENTICATION = 0x00000005;
enum BTH_LE_ERROR_REQUEST_NOT_SUPPORTED = 0x00000006;
enum BTH_LE_ERROR_INVALID_OFFSET = 0x00000007;
enum BTH_LE_ERROR_INSUFFICIENT_AUTHORIZATION = 0x00000008;
enum BTH_LE_ERROR_PREPARE_QUEUE_FULL = 0x00000009;
enum BTH_LE_ERROR_ATTRIBUTE_NOT_FOUND = 0x0000000a;
enum BTH_LE_ERROR_ATTRIBUTE_NOT_LONG = 0x0000000b;
enum BTH_LE_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE = 0x0000000c;
enum BTH_LE_ERROR_INVALID_ATTRIBUTE_VALUE_LENGTH = 0x0000000d;
enum BTH_LE_ERROR_UNLIKELY = 0x0000000e;
enum BTH_LE_ERROR_INSUFFICIENT_ENCRYPTION = 0x0000000f;
enum BTH_LE_ERROR_UNSUPPORTED_GROUP_TYPE = 0x00000010;
enum BTH_LE_ERROR_INSUFFICIENT_RESOURCES = 0x00000011;
enum BTH_LE_ERROR_UNKNOWN = 0x00001000;
enum BLUETOOTH_GATT_FLAG_NONE = 0x00000000;
enum BLUETOOTH_GATT_FLAG_CONNECTION_ENCRYPTED = 0x00000001;
enum BLUETOOTH_GATT_FLAG_CONNECTION_AUTHENTICATED = 0x00000002;
enum BLUETOOTH_GATT_FLAG_FORCE_READ_FROM_DEVICE = 0x00000004;
enum BLUETOOTH_GATT_FLAG_FORCE_READ_FROM_CACHE = 0x00000008;
enum BLUETOOTH_GATT_FLAG_SIGNED_WRITE = 0x00000010;
enum BLUETOOTH_GATT_FLAG_WRITE_WITHOUT_RESPONSE = 0x00000020;
enum BLUETOOTH_GATT_FLAG_RETURN_ALL = 0x00000040;
enum BT_PORT_MIN = 0x00000001;
enum BT_PORT_MAX = 0x0000ffff;
enum BT_PORT_DYN_FIRST = 0x00001001;
enum AF_BTH = 0x0020;
enum PF_BTH = 0x0020;
enum NS_BTH = 0x00000010;
enum SVCID_BTH_PROVIDER = GUID(0x6aa63e0, 0x7d60, 0x41ff, [0xaf, 0xb2, 0x3e, 0xe6, 0xd2, 0xd9, 0x39, 0x2d]);
enum BTH_ADDR_STRING_SIZE = 0x0000000c;
enum BTHPROTO_RFCOMM = 0x00000003;
enum BTHPROTO_L2CAP = 0x00000100;
enum SOL_RFCOMM = 0x00000003;
enum SOL_L2CAP = 0x00000100;
enum SOL_SDP = 0x00000101;
enum SO_BTH_AUTHENTICATE = 0x80000001;
enum SO_BTH_ENCRYPT = 0x00000002;
enum SO_BTH_MTU = 0x80000007;
enum SO_BTH_MTU_MAX = 0x80000008;
enum SO_BTH_MTU_MIN = 0x8000000a;
enum RFCOMM_MAX_MTU = 0x000003f3;
enum RFCOMM_MIN_MTU = 0x00000017;
enum BTH_SDP_VERSION = 0x00000001;
enum SDP_DEFAULT_INQUIRY_SECONDS = 0x00000006;
enum SDP_MAX_INQUIRY_SECONDS = 0x0000003c;
enum SDP_DEFAULT_INQUIRY_MAX_RESPONSES = 0x000000ff;
enum SDP_SERVICE_SEARCH_REQUEST = 0x00000001;
enum SDP_SERVICE_ATTRIBUTE_REQUEST = 0x00000002;
enum SDP_SERVICE_SEARCH_ATTRIBUTE_REQUEST = 0x00000003;
enum BTHNS_RESULT_DEVICE_CONNECTED = 0x00010000;
enum BTHNS_RESULT_DEVICE_REMEMBERED = 0x00020000;
enum BTHNS_RESULT_DEVICE_AUTHENTICATED = 0x00040000;
enum RLS_ERROR = 0x00000001;
enum RLS_OVERRUN = 0x00000002;
enum RLS_PARITY = 0x00000004;
enum RLS_FRAMING = 0x00000008;
enum RPN_BAUD_2400 = 0x00000000;
enum RPN_BAUD_4800 = 0x00000001;
enum RPN_BAUD_7200 = 0x00000002;
enum RPN_BAUD_9600 = 0x00000003;
enum RPN_BAUD_19200 = 0x00000004;
enum RPN_BAUD_38400 = 0x00000005;
enum RPN_BAUD_57600 = 0x00000006;
enum RPN_BAUD_115200 = 0x00000007;
enum RPN_BAUD_230400 = 0x00000008;
enum RPN_DATA_5 = 0x00000000;
enum RPN_DATA_6 = 0x00000001;
enum RPN_DATA_7 = 0x00000002;
enum RPN_DATA_8 = 0x00000003;
enum RPN_STOP_1 = 0x00000000;
enum RPN_STOP_1_5 = 0x00000004;
enum RPN_PARITY_NONE = 0x00000000;
enum RPN_PARITY_ODD = 0x00000008;
enum RPN_PARITY_EVEN = 0x00000018;
enum RPN_PARITY_MARK = 0x00000028;
enum RPN_PARITY_SPACE = 0x00000038;
enum RPN_FLOW_X_IN = 0x00000001;
enum RPN_FLOW_X_OUT = 0x00000002;
enum RPN_FLOW_RTR_IN = 0x00000004;
enum RPN_FLOW_RTR_OUT = 0x00000008;
enum RPN_FLOW_RTC_IN = 0x00000010;
enum RPN_FLOW_RTC_OUT = 0x00000020;
enum RPN_PARAM_BAUD = 0x00000001;
enum RPN_PARAM_DATA = 0x00000002;
enum RPN_PARAM_STOP = 0x00000004;
enum RPN_PARAM_PARITY = 0x00000008;
enum RPN_PARAM_P_TYPE = 0x00000010;
enum RPN_PARAM_XON = 0x00000020;
enum RPN_PARAM_XOFF = 0x00000040;
enum RPN_PARAM_X_IN = 0x00000001;
enum RPN_PARAM_X_OUT = 0x00000002;
enum RPN_PARAM_RTR_IN = 0x00000004;
enum RPN_PARAM_RTR_OUT = 0x00000008;
enum RPN_PARAM_RTC_IN = 0x00000010;
enum RPN_PARAM_RTC_OUT = 0x00000020;
enum RFCOMM_CMD_NONE = 0x00000000;
enum RFCOMM_CMD_MSC = 0x00000001;
enum RFCOMM_CMD_RLS = 0x00000002;
enum RFCOMM_CMD_RPN = 0x00000003;
enum RFCOMM_CMD_RPN_REQUEST = 0x00000004;
enum RFCOMM_CMD_RPN_RESPONSE = 0x00000005;
alias HANDLE_SDP_TYPE = void*;
struct SDP_LARGE_INTEGER_16
{
    ulong LowPart;
    long HighPart;
}
struct SDP_ULARGE_INTEGER_16
{
    ulong LowPart;
    ulong HighPart;
}
alias NodeContainerType = int;
enum : int
{
    NodeContainerTypeSequence    = 0x00000000,
    NodeContainerTypeAlternative = 0x00000001,
}

alias SDP_TYPE = int;
enum : int
{
    SDP_TYPE_NIL         = 0x00000000,
    SDP_TYPE_UINT        = 0x00000001,
    SDP_TYPE_INT         = 0x00000002,
    SDP_TYPE_UUID        = 0x00000003,
    SDP_TYPE_STRING      = 0x00000004,
    SDP_TYPE_BOOLEAN     = 0x00000005,
    SDP_TYPE_SEQUENCE    = 0x00000006,
    SDP_TYPE_ALTERNATIVE = 0x00000007,
    SDP_TYPE_URL         = 0x00000008,
    SDP_TYPE_CONTAINER   = 0x00000020,
}

alias SDP_SPECIFICTYPE = int;
enum : int
{
    SDP_ST_NONE    = 0x00000000,
    SDP_ST_UINT8   = 0x00000010,
    SDP_ST_UINT16  = 0x00000110,
    SDP_ST_UINT32  = 0x00000210,
    SDP_ST_UINT64  = 0x00000310,
    SDP_ST_UINT128 = 0x00000410,
    SDP_ST_INT8    = 0x00000020,
    SDP_ST_INT16   = 0x00000120,
    SDP_ST_INT32   = 0x00000220,
    SDP_ST_INT64   = 0x00000320,
    SDP_ST_INT128  = 0x00000420,
    SDP_ST_UUID16  = 0x00000130,
    SDP_ST_UUID32  = 0x00000220,
    SDP_ST_UUID128 = 0x00000430,
}

struct SdpAttributeRange
{
    ushort minAttribute;
    ushort maxAttribute;
}
union SdpQueryUuidUnion
{
    GUID uuid128;
    uint uuid32;
    ushort uuid16;
}
struct SdpQueryUuid
{
    SdpQueryUuidUnion u;
    ushort uuidType;
}
struct BTH_DEVICE_INFO
{
    uint flags;
    ulong address;
    uint classOfDevice;
    CHAR[248] name;
}
struct BTH_RADIO_IN_RANGE
{
    BTH_DEVICE_INFO deviceInfo;
    uint previousDeviceFlags;
}
struct BTH_L2CAP_EVENT_INFO
{
    ulong bthAddress;
    ushort psm;
    ubyte connected;
    ubyte initiated;
}
struct BTH_HCI_EVENT_INFO
{
    ulong bthAddress;
    ubyte connectionType;
    ubyte connected;
}
alias IO_CAPABILITY = int;
enum : int
{
    IoCaps_DisplayOnly     = 0x00000000,
    IoCaps_DisplayYesNo    = 0x00000001,
    IoCaps_KeyboardOnly    = 0x00000002,
    IoCaps_NoInputNoOutput = 0x00000003,
    IoCaps_Undefined       = 0x000000ff,
}

alias AUTHENTICATION_REQUIREMENTS = int;
enum : int
{
    MITMProtectionNotRequired               = 0x00000000,
    MITMProtectionRequired                  = 0x00000001,
    MITMProtectionNotRequiredBonding        = 0x00000002,
    MITMProtectionRequiredBonding           = 0x00000003,
    MITMProtectionNotRequiredGeneralBonding = 0x00000004,
    MITMProtectionRequiredGeneralBonding    = 0x00000005,
    MITMProtectionNotDefined                = 0x000000ff,
}

struct BLUETOOTH_ADDRESS
{
    union
    {
        ulong ullLong;
        ubyte[6] rgBytes;
    }
}
struct BLUETOOTH_LOCAL_SERVICE_INFO
{
    BOOL Enabled;
    BLUETOOTH_ADDRESS btAddr;
    wchar[256] szName;
    wchar[256] szDeviceString;
}
struct BLUETOOTH_FIND_RADIO_PARAMS
{
    uint dwSize;
}
struct BLUETOOTH_RADIO_INFO
{
    uint dwSize;
    BLUETOOTH_ADDRESS address;
    wchar[248] szName;
    uint ulClassofDevice;
    ushort lmpSubversion;
    ushort manufacturer;
}
struct BLUETOOTH_DEVICE_INFO
{
    uint dwSize;
    BLUETOOTH_ADDRESS Address;
    uint ulClassofDevice;
    BOOL fConnected;
    BOOL fRemembered;
    BOOL fAuthenticated;
    SYSTEMTIME stLastSeen;
    SYSTEMTIME stLastUsed;
    wchar[248] szName;
}
alias BLUETOOTH_AUTHENTICATION_METHOD = int;
enum : int
{
    BLUETOOTH_AUTHENTICATION_METHOD_LEGACY               = 0x00000001,
    BLUETOOTH_AUTHENTICATION_METHOD_OOB                  = 0x00000002,
    BLUETOOTH_AUTHENTICATION_METHOD_NUMERIC_COMPARISON   = 0x00000003,
    BLUETOOTH_AUTHENTICATION_METHOD_PASSKEY_NOTIFICATION = 0x00000004,
    BLUETOOTH_AUTHENTICATION_METHOD_PASSKEY              = 0x00000005,
}

alias BLUETOOTH_IO_CAPABILITY = int;
enum : int
{
    BLUETOOTH_IO_CAPABILITY_DISPLAYONLY     = 0x00000000,
    BLUETOOTH_IO_CAPABILITY_DISPLAYYESNO    = 0x00000001,
    BLUETOOTH_IO_CAPABILITY_KEYBOARDONLY    = 0x00000002,
    BLUETOOTH_IO_CAPABILITY_NOINPUTNOOUTPUT = 0x00000003,
    BLUETOOTH_IO_CAPABILITY_UNDEFINED       = 0x000000ff,
}

alias BLUETOOTH_AUTHENTICATION_REQUIREMENTS = int;
enum : int
{
    BLUETOOTH_MITM_ProtectionNotRequired               = 0x00000000,
    BLUETOOTH_MITM_ProtectionRequired                  = 0x00000001,
    BLUETOOTH_MITM_ProtectionNotRequiredBonding        = 0x00000002,
    BLUETOOTH_MITM_ProtectionRequiredBonding           = 0x00000003,
    BLUETOOTH_MITM_ProtectionNotRequiredGeneralBonding = 0x00000004,
    BLUETOOTH_MITM_ProtectionRequiredGeneralBonding    = 0x00000005,
    BLUETOOTH_MITM_ProtectionNotDefined                = 0x000000ff,
}

struct BLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS
{
    BLUETOOTH_DEVICE_INFO deviceInfo;
    BLUETOOTH_AUTHENTICATION_METHOD authenticationMethod;
    BLUETOOTH_IO_CAPABILITY ioCapability;
    BLUETOOTH_AUTHENTICATION_REQUIREMENTS authenticationRequirements;
    union
    {
        uint Numeric_Value;
        uint Passkey;
    }
}
struct BLUETOOTH_DEVICE_SEARCH_PARAMS
{
    uint dwSize;
    BOOL fReturnAuthenticated;
    BOOL fReturnRemembered;
    BOOL fReturnUnknown;
    BOOL fReturnConnected;
    BOOL fIssueInquiry;
    ubyte cTimeoutMultiplier;
    HANDLE hRadio;
}
struct BLUETOOTH_COD_PAIRS
{
    uint ulCODMask;
    const(wchar)* pcszDescription;
}
alias PFN_DEVICE_CALLBACK = BOOL function(void*, const(BLUETOOTH_DEVICE_INFO)*);
struct BLUETOOTH_SELECT_DEVICE_PARAMS
{
    uint dwSize;
    uint cNumOfClasses;
    BLUETOOTH_COD_PAIRS* prgClassOfDevices;
    PWSTR pszInfo;
    HWND hwndParent;
    BOOL fForceAuthentication;
    BOOL fShowAuthenticated;
    BOOL fShowRemembered;
    BOOL fShowUnknown;
    BOOL fAddNewDeviceWizard;
    BOOL fSkipServicesPage;
    PFN_DEVICE_CALLBACK pfnDeviceCallback;
    void* pvParam;
    uint cNumDevices;
    BLUETOOTH_DEVICE_INFO* pDevices;
}
struct BLUETOOTH_PIN_INFO
{
    ubyte[16] pin;
    ubyte pinLength;
}
struct BLUETOOTH_OOB_DATA_INFO
{
    ubyte[16] C;
    ubyte[16] R;
}
struct BLUETOOTH_NUMERIC_COMPARISON_INFO
{
    uint NumericValue;
}
struct BLUETOOTH_PASSKEY_INFO
{
    uint passkey;
}
alias PFN_AUTHENTICATION_CALLBACK = BOOL function(void*, BLUETOOTH_DEVICE_INFO*);
alias PFN_AUTHENTICATION_CALLBACK_EX = BOOL function(void*, BLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS*);
struct BLUETOOTH_AUTHENTICATE_RESPONSE
{
    BLUETOOTH_ADDRESS bthAddressRemote;
    BLUETOOTH_AUTHENTICATION_METHOD authMethod;
    union
    {
        BLUETOOTH_PIN_INFO pinInfo;
        BLUETOOTH_OOB_DATA_INFO oobInfo;
        BLUETOOTH_NUMERIC_COMPARISON_INFO numericCompInfo;
        BLUETOOTH_PASSKEY_INFO passkeyInfo;
    }
    ubyte negativeResponse;
}
struct SDP_ELEMENT_DATA
{
    SDP_TYPE type;
    SDP_SPECIFICTYPE specificType;
    union _data_e__Union
    {
        SDP_LARGE_INTEGER_16 int128;
        long int64;
        int int32;
        short int16;
        CHAR int8;
        SDP_ULARGE_INTEGER_16 uint128;
        ulong uint64;
        uint uint32;
        ushort uint16;
        ubyte uint8;
        ubyte booleanVal;
        GUID uuid128;
        uint uuid32;
        ushort uuid16;
        struct _string_e__Struct
        {
            ubyte* value;
            uint length;
        }
        struct _url_e__Struct
        {
            ubyte* value;
            uint length;
        }
        struct _sequence_e__Struct
        {
            ubyte* value;
            uint length;
        }
        struct _alternative_e__Struct
        {
            ubyte* value;
            uint length;
        }
    }
}
struct SDP_STRING_TYPE_DATA
{
    ushort encoding;
    ushort mibeNum;
    ushort attributeId;
}
alias PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK = BOOL function(uint, ubyte*, uint, void*);
struct BTH_LE_UUID
{
    BOOLEAN IsShortUuid;
    union _Value_e__Union
    {
        ushort ShortUuid;
        GUID LongUuid;
    }
}
struct BTH_LE_GATT_SERVICE
{
    BTH_LE_UUID ServiceUuid;
    ushort AttributeHandle;
}
alias BTH_LE_GATT_DESCRIPTOR_TYPE = int;
enum : int
{
    CharacteristicExtendedProperties  = 0x00000000,
    CharacteristicUserDescription     = 0x00000001,
    ClientCharacteristicConfiguration = 0x00000002,
    ServerCharacteristicConfiguration = 0x00000003,
    CharacteristicFormat              = 0x00000004,
    CharacteristicAggregateFormat     = 0x00000005,
    CustomDescriptor                  = 0x00000006,
}

struct BTH_LE_GATT_CHARACTERISTIC
{
    ushort ServiceHandle;
    BTH_LE_UUID CharacteristicUuid;
    ushort AttributeHandle;
    ushort CharacteristicValueHandle;
    BOOLEAN IsBroadcastable;
    BOOLEAN IsReadable;
    BOOLEAN IsWritable;
    BOOLEAN IsWritableWithoutResponse;
    BOOLEAN IsSignedWritable;
    BOOLEAN IsNotifiable;
    BOOLEAN IsIndicatable;
    BOOLEAN HasExtendedProperties;
}
struct BTH_LE_GATT_CHARACTERISTIC_VALUE
{
    uint DataSize;
    ubyte[1] Data;
}
struct BTH_LE_GATT_DESCRIPTOR
{
    ushort ServiceHandle;
    ushort CharacteristicHandle;
    BTH_LE_GATT_DESCRIPTOR_TYPE DescriptorType;
    BTH_LE_UUID DescriptorUuid;
    ushort AttributeHandle;
}
struct BTH_LE_GATT_DESCRIPTOR_VALUE
{
    BTH_LE_GATT_DESCRIPTOR_TYPE DescriptorType;
    BTH_LE_UUID DescriptorUuid;
    union
    {
        struct _CharacteristicExtendedProperties_e__Struct
        {
            BOOLEAN IsReliableWriteEnabled;
            BOOLEAN IsAuxiliariesWritable;
        }
        struct _ClientCharacteristicConfiguration_e__Struct
        {
            BOOLEAN IsSubscribeToNotification;
            BOOLEAN IsSubscribeToIndication;
        }
        struct _ServerCharacteristicConfiguration_e__Struct
        {
            BOOLEAN IsBroadcast;
        }
        struct _CharacteristicFormat_e__Struct
        {
            ubyte Format;
            ubyte Exponent;
            BTH_LE_UUID Unit;
            ubyte NameSpace;
            BTH_LE_UUID Description;
        }
    }
    uint DataSize;
    ubyte[1] Data;
}
alias BTH_LE_GATT_EVENT_TYPE = int;
enum : int
{
    CharacteristicValueChangedEvent = 0x00000000,
}

alias PFNBLUETOOTH_GATT_EVENT_CALLBACK = void function(BTH_LE_GATT_EVENT_TYPE, void*, void*);
struct BLUETOOTH_GATT_VALUE_CHANGED_EVENT_REGISTRATION
{
    ushort NumCharacteristics;
    BTH_LE_GATT_CHARACTERISTIC[1] Characteristics;
}
struct BLUETOOTH_GATT_VALUE_CHANGED_EVENT
{
    ushort ChangedAttributeHandle;
    ulong CharacteristicValueDataSize;
    BTH_LE_GATT_CHARACTERISTIC_VALUE* CharacteristicValue;
}
struct SOCKADDR_BTH
{
    align (1):
    ushort addressFamily;
    ulong btAddr;
    GUID serviceClassId;
    uint port;
}
struct BTH_SET_SERVICE
{
    align (1):
    uint* pSdpVersion;
    HANDLE* pRecordHandle;
    uint fCodService;
    uint[5] Reserved;
    uint ulRecordLength;
    ubyte[1] pRecord;
}
struct BTH_QUERY_DEVICE
{
    align (1):
    uint LAP;
    ubyte length;
}
struct BTH_QUERY_SERVICE
{
    align (1):
    uint type;
    uint serviceHandle;
    SdpQueryUuid[12] uuids;
    uint numRange;
    SdpAttributeRange[1] pRange;
}
struct RFCOMM_MSC_DATA
{
    ubyte Signals;
    ubyte Break;
}
struct RFCOMM_RLS_DATA
{
    ubyte LineStatus;
}
struct RFCOMM_RPN_DATA
{
    ubyte Baud;
    ubyte Data;
    ubyte FlowControl;
    ubyte XonChar;
    ubyte XoffChar;
    ubyte ParameterMask1;
    ubyte ParameterMask2;
}
struct RFCOMM_COMMAND
{
    align (1):
    uint CmdType;
    union _Data_e__Union
    {
        RFCOMM_MSC_DATA MSC;
        RFCOMM_RLS_DATA RLS;
        RFCOMM_RPN_DATA RPN;
    }
}
struct BTH_PING_REQ
{
    align (1):
    ulong btAddr;
    ubyte dataLen;
    ubyte[44] data;
}
struct BTH_PING_RSP
{
    ubyte dataLen;
    ubyte[44] data;
}
struct BTH_INFO_REQ
{
    align (1):
    ulong btAddr;
    ushort infoType;
}
struct BTH_INFO_RSP
{
    align (1):
    ushort result;
    ubyte dataLen;
    union
    {
        align (1):
        ushort connectionlessMTU;
        ubyte[44] data;
    }
}
