module windows.win32.networking.websocket;

import windows.win32.foundation : HRESULT, PSTR;

version (Windows):
extern (Windows):

HRESULT WebSocketCreateClientHandle(const(WEB_SOCKET_PROPERTY)*, uint, WEB_SOCKET_HANDLE*);
HRESULT WebSocketBeginClientHandshake(WEB_SOCKET_HANDLE, PSTR*, uint, PSTR*, uint, const(WEB_SOCKET_HTTP_HEADER)*, uint, WEB_SOCKET_HTTP_HEADER**, uint*);
HRESULT WebSocketEndClientHandshake(WEB_SOCKET_HANDLE, const(WEB_SOCKET_HTTP_HEADER)*, uint, uint*, uint*, uint*);
HRESULT WebSocketCreateServerHandle(const(WEB_SOCKET_PROPERTY)*, uint, WEB_SOCKET_HANDLE*);
HRESULT WebSocketBeginServerHandshake(WEB_SOCKET_HANDLE, const(char)*, PSTR*, uint, const(WEB_SOCKET_HTTP_HEADER)*, uint, WEB_SOCKET_HTTP_HEADER**, uint*);
HRESULT WebSocketEndServerHandshake(WEB_SOCKET_HANDLE);
HRESULT WebSocketSend(WEB_SOCKET_HANDLE, WEB_SOCKET_BUFFER_TYPE, WEB_SOCKET_BUFFER*, void*);
HRESULT WebSocketReceive(WEB_SOCKET_HANDLE, WEB_SOCKET_BUFFER*, void*);
HRESULT WebSocketGetAction(WEB_SOCKET_HANDLE, WEB_SOCKET_ACTION_QUEUE, WEB_SOCKET_BUFFER*, uint*, WEB_SOCKET_ACTION*, WEB_SOCKET_BUFFER_TYPE*, void**, void**);
void WebSocketCompleteAction(WEB_SOCKET_HANDLE, void*, uint);
void WebSocketAbortHandle(WEB_SOCKET_HANDLE);
void WebSocketDeleteHandle(WEB_SOCKET_HANDLE);
HRESULT WebSocketGetGlobalProperty(WEB_SOCKET_PROPERTY_TYPE, void*, uint*);
enum WEB_SOCKET_MAX_CLOSE_REASON_LENGTH = 0x0000007b;
alias WEB_SOCKET_HANDLE = long;
alias WEB_SOCKET_CLOSE_STATUS = int;
enum : int
{
    WEB_SOCKET_SUCCESS_CLOSE_STATUS                = 0x000003e8,
    WEB_SOCKET_ENDPOINT_UNAVAILABLE_CLOSE_STATUS   = 0x000003e9,
    WEB_SOCKET_PROTOCOL_ERROR_CLOSE_STATUS         = 0x000003ea,
    WEB_SOCKET_INVALID_DATA_TYPE_CLOSE_STATUS      = 0x000003eb,
    WEB_SOCKET_EMPTY_CLOSE_STATUS                  = 0x000003ed,
    WEB_SOCKET_ABORTED_CLOSE_STATUS                = 0x000003ee,
    WEB_SOCKET_INVALID_PAYLOAD_CLOSE_STATUS        = 0x000003ef,
    WEB_SOCKET_POLICY_VIOLATION_CLOSE_STATUS       = 0x000003f0,
    WEB_SOCKET_MESSAGE_TOO_BIG_CLOSE_STATUS        = 0x000003f1,
    WEB_SOCKET_UNSUPPORTED_EXTENSIONS_CLOSE_STATUS = 0x000003f2,
    WEB_SOCKET_SERVER_ERROR_CLOSE_STATUS           = 0x000003f3,
    WEB_SOCKET_SECURE_HANDSHAKE_ERROR_CLOSE_STATUS = 0x000003f7,
}

alias WEB_SOCKET_PROPERTY_TYPE = int;
enum : int
{
    WEB_SOCKET_RECEIVE_BUFFER_SIZE_PROPERTY_TYPE       = 0x00000000,
    WEB_SOCKET_SEND_BUFFER_SIZE_PROPERTY_TYPE          = 0x00000001,
    WEB_SOCKET_DISABLE_MASKING_PROPERTY_TYPE           = 0x00000002,
    WEB_SOCKET_ALLOCATED_BUFFER_PROPERTY_TYPE          = 0x00000003,
    WEB_SOCKET_DISABLE_UTF8_VERIFICATION_PROPERTY_TYPE = 0x00000004,
    WEB_SOCKET_KEEPALIVE_INTERVAL_PROPERTY_TYPE        = 0x00000005,
    WEB_SOCKET_SUPPORTED_VERSIONS_PROPERTY_TYPE        = 0x00000006,
}

alias WEB_SOCKET_ACTION_QUEUE = int;
enum : int
{
    WEB_SOCKET_SEND_ACTION_QUEUE    = 0x00000001,
    WEB_SOCKET_RECEIVE_ACTION_QUEUE = 0x00000002,
    WEB_SOCKET_ALL_ACTION_QUEUE     = 0x00000003,
}

alias WEB_SOCKET_BUFFER_TYPE = int;
enum : int
{
    WEB_SOCKET_UTF8_MESSAGE_BUFFER_TYPE     = 0x80000000,
    WEB_SOCKET_UTF8_FRAGMENT_BUFFER_TYPE    = 0x80000001,
    WEB_SOCKET_BINARY_MESSAGE_BUFFER_TYPE   = 0x80000002,
    WEB_SOCKET_BINARY_FRAGMENT_BUFFER_TYPE  = 0x80000003,
    WEB_SOCKET_CLOSE_BUFFER_TYPE            = 0x80000004,
    WEB_SOCKET_PING_PONG_BUFFER_TYPE        = 0x80000005,
    WEB_SOCKET_UNSOLICITED_PONG_BUFFER_TYPE = 0x80000006,
}

alias WEB_SOCKET_ACTION = int;
enum : int
{
    WEB_SOCKET_NO_ACTION                        = 0x00000000,
    WEB_SOCKET_SEND_TO_NETWORK_ACTION           = 0x00000001,
    WEB_SOCKET_INDICATE_SEND_COMPLETE_ACTION    = 0x00000002,
    WEB_SOCKET_RECEIVE_FROM_NETWORK_ACTION      = 0x00000003,
    WEB_SOCKET_INDICATE_RECEIVE_COMPLETE_ACTION = 0x00000004,
}

struct WEB_SOCKET_PROPERTY
{
    WEB_SOCKET_PROPERTY_TYPE Type;
    void* pvValue;
    uint ulValueSize;
}
struct WEB_SOCKET_HTTP_HEADER
{
    PSTR pcName;
    uint ulNameLength;
    PSTR pcValue;
    uint ulValueLength;
}
union WEB_SOCKET_BUFFER
{
    struct _Data_e__Struct
    {
        ubyte* pbBuffer;
        uint ulBufferLength;
    }
    struct _CloseStatus_e__Struct
    {
        ubyte* pbReason;
        uint ulReasonLength;
        ushort usStatus;
    }
}
