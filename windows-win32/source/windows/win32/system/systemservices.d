module windows.win32.system.systemservices;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOL, BOOLEAN, CHAR, HANDLE, LARGE_INTEGER, PSID, PSTR, PWSTR;
import windows.win32.graphics.gdi : LOGPALETTE;
import windows.win32.security_ : SID, SID_AND_ATTRIBUTES, TOKEN_USER;
import windows.win32.system.com_ : BYTE_BLOB, DWORD_BLOB, FLAGGED_BYTE_BLOB;
import windows.win32.system.diagnostics.debug__ : EXCEPTION_POINTERS, IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY, IMAGE_RUNTIME_FUNCTION_ENTRY;
import windows.win32.system.jobobjects : JOB_OBJECT_IO_RATE_CONTROL_FLAGS;

version (Windows):
extern (Windows):

alias ALERT_SYSTEM_SEV = uint;
enum : uint
{
    ALERT_SYSTEM_INFORMATIONAL = 0x00000001,
    ALERT_SYSTEM_WARNING       = 0x00000002,
    ALERT_SYSTEM_ERROR         = 0x00000003,
    ALERT_SYSTEM_QUERY         = 0x00000004,
    ALERT_SYSTEM_CRITICAL      = 0x00000005,
}

alias APPCOMMAND_ID = uint;
enum : uint
{
    APPCOMMAND_BROWSER_BACKWARD                  = 0x00000001,
    APPCOMMAND_BROWSER_FORWARD                   = 0x00000002,
    APPCOMMAND_BROWSER_REFRESH                   = 0x00000003,
    APPCOMMAND_BROWSER_STOP                      = 0x00000004,
    APPCOMMAND_BROWSER_SEARCH                    = 0x00000005,
    APPCOMMAND_BROWSER_FAVORITES                 = 0x00000006,
    APPCOMMAND_BROWSER_HOME                      = 0x00000007,
    APPCOMMAND_VOLUME_MUTE                       = 0x00000008,
    APPCOMMAND_VOLUME_DOWN                       = 0x00000009,
    APPCOMMAND_VOLUME_UP                         = 0x0000000a,
    APPCOMMAND_MEDIA_NEXTTRACK                   = 0x0000000b,
    APPCOMMAND_MEDIA_PREVIOUSTRACK               = 0x0000000c,
    APPCOMMAND_MEDIA_STOP                        = 0x0000000d,
    APPCOMMAND_MEDIA_PLAY_PAUSE                  = 0x0000000e,
    APPCOMMAND_LAUNCH_MAIL                       = 0x0000000f,
    APPCOMMAND_LAUNCH_MEDIA_SELECT               = 0x00000010,
    APPCOMMAND_LAUNCH_APP1                       = 0x00000011,
    APPCOMMAND_LAUNCH_APP2                       = 0x00000012,
    APPCOMMAND_BASS_DOWN                         = 0x00000013,
    APPCOMMAND_BASS_BOOST                        = 0x00000014,
    APPCOMMAND_BASS_UP                           = 0x00000015,
    APPCOMMAND_TREBLE_DOWN                       = 0x00000016,
    APPCOMMAND_TREBLE_UP                         = 0x00000017,
    APPCOMMAND_MICROPHONE_VOLUME_MUTE            = 0x00000018,
    APPCOMMAND_MICROPHONE_VOLUME_DOWN            = 0x00000019,
    APPCOMMAND_MICROPHONE_VOLUME_UP              = 0x0000001a,
    APPCOMMAND_HELP                              = 0x0000001b,
    APPCOMMAND_FIND                              = 0x0000001c,
    APPCOMMAND_NEW                               = 0x0000001d,
    APPCOMMAND_OPEN                              = 0x0000001e,
    APPCOMMAND_CLOSE                             = 0x0000001f,
    APPCOMMAND_SAVE                              = 0x00000020,
    APPCOMMAND_PRINT                             = 0x00000021,
    APPCOMMAND_UNDO                              = 0x00000022,
    APPCOMMAND_REDO                              = 0x00000023,
    APPCOMMAND_COPY                              = 0x00000024,
    APPCOMMAND_CUT                               = 0x00000025,
    APPCOMMAND_PASTE                             = 0x00000026,
    APPCOMMAND_REPLY_TO_MAIL                     = 0x00000027,
    APPCOMMAND_FORWARD_MAIL                      = 0x00000028,
    APPCOMMAND_SEND_MAIL                         = 0x00000029,
    APPCOMMAND_SPELL_CHECK                       = 0x0000002a,
    APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE = 0x0000002b,
    APPCOMMAND_MIC_ON_OFF_TOGGLE                 = 0x0000002c,
    APPCOMMAND_CORRECTION_LIST                   = 0x0000002d,
    APPCOMMAND_MEDIA_PLAY                        = 0x0000002e,
    APPCOMMAND_MEDIA_PAUSE                       = 0x0000002f,
    APPCOMMAND_MEDIA_RECORD                      = 0x00000030,
    APPCOMMAND_MEDIA_FAST_FORWARD                = 0x00000031,
    APPCOMMAND_MEDIA_REWIND                      = 0x00000032,
    APPCOMMAND_MEDIA_CHANNEL_UP                  = 0x00000033,
    APPCOMMAND_MEDIA_CHANNEL_DOWN                = 0x00000034,
    APPCOMMAND_DELETE                            = 0x00000035,
    APPCOMMAND_DWM_FLIP3D                        = 0x00000036,
}

alias ATF_FLAGS = uint;
enum : uint
{
    ATF_TIMEOUTON     = 0x00000001,
    ATF_ONOFFFEEDBACK = 0x00000002,
}

alias CLIPBOARD_FORMATS = uint;
enum : uint
{
    CF_TEXT            = 0x00000001,
    CF_BITMAP          = 0x00000002,
    CF_METAFILEPICT    = 0x00000003,
    CF_SYLK            = 0x00000004,
    CF_DIF             = 0x00000005,
    CF_TIFF            = 0x00000006,
    CF_OEMTEXT         = 0x00000007,
    CF_DIB             = 0x00000008,
    CF_PALETTE         = 0x00000009,
    CF_PENDATA         = 0x0000000a,
    CF_RIFF            = 0x0000000b,
    CF_WAVE            = 0x0000000c,
    CF_UNICODETEXT     = 0x0000000d,
    CF_ENHMETAFILE     = 0x0000000e,
    CF_HDROP           = 0x0000000f,
    CF_LOCALE          = 0x00000010,
    CF_DIBV5           = 0x00000011,
    CF_MAX             = 0x00000012,
    CF_OWNERDISPLAY    = 0x00000080,
    CF_DSPTEXT         = 0x00000081,
    CF_DSPBITMAP       = 0x00000082,
    CF_DSPMETAFILEPICT = 0x00000083,
    CF_DSPENHMETAFILE  = 0x0000008e,
    CF_PRIVATEFIRST    = 0x00000200,
    CF_PRIVATELAST     = 0x000002ff,
    CF_GDIOBJFIRST     = 0x00000300,
    CF_GDIOBJLAST      = 0x000003ff,
}

alias GESTURECONFIG_FLAGS = uint;
enum : uint
{
    GC_ALLGESTURES                         = 0x00000001,
    GC_ZOOM                                = 0x00000001,
    GC_PAN                                 = 0x00000001,
    GC_PAN_WITH_SINGLE_FINGER_VERTICALLY   = 0x00000002,
    GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY = 0x00000004,
    GC_PAN_WITH_GUTTER                     = 0x00000008,
    GC_PAN_WITH_INERTIA                    = 0x00000010,
    GC_ROTATE                              = 0x00000001,
    GC_TWOFINGERTAP                        = 0x00000001,
    GC_PRESSANDTAP                         = 0x00000001,
    GC_ROLLOVER                            = 0x00000001,
}

alias CFE_UNDERLINE = uint;
enum : uint
{
    CFU_CF1UNDERLINE             = 0x000000ff,
    CFU_INVERT                   = 0x000000fe,
    CFU_UNDERLINETHICKLONGDASH   = 0x00000012,
    CFU_UNDERLINETHICKDOTTED     = 0x00000011,
    CFU_UNDERLINETHICKDASHDOTDOT = 0x00000010,
    CFU_UNDERLINETHICKDASHDOT    = 0x0000000f,
    CFU_UNDERLINETHICKDASH       = 0x0000000e,
    CFU_UNDERLINELONGDASH        = 0x0000000d,
    CFU_UNDERLINEHEAVYWAVE       = 0x0000000c,
    CFU_UNDERLINEDOUBLEWAVE      = 0x0000000b,
    CFU_UNDERLINEHAIRLINE        = 0x0000000a,
    CFU_UNDERLINETHICK           = 0x00000009,
    CFU_UNDERLINEWAVE            = 0x00000008,
    CFU_UNDERLINEDASHDOTDOT      = 0x00000007,
    CFU_UNDERLINEDASHDOT         = 0x00000006,
    CFU_UNDERLINEDASH            = 0x00000005,
    CFU_UNDERLINEDOTTED          = 0x00000004,
    CFU_UNDERLINEDOUBLE          = 0x00000003,
    CFU_UNDERLINEWORD            = 0x00000002,
    CFU_UNDERLINE                = 0x00000001,
    CFU_UNDERLINENONE            = 0x00000000,
}

alias IGP_ID = uint;
enum : uint
{
    IGP_GETIMEVERSION = 0xfffffffc,
    IGP_PROPERTY      = 0x00000004,
    IGP_CONVERSION    = 0x00000008,
    IGP_SENTENCE      = 0x0000000c,
    IGP_UI            = 0x00000010,
    IGP_SETCOMPSTR    = 0x00000014,
    IGP_SELECT        = 0x00000018,
}

alias SECTION_FLAGS = uint;
enum : uint
{
    SECTION_ALL_ACCESS           = 0x000f001f,
    SECTION_QUERY                = 0x00000001,
    SECTION_MAP_WRITE            = 0x00000002,
    SECTION_MAP_READ             = 0x00000004,
    SECTION_MAP_EXECUTE          = 0x00000008,
    SECTION_EXTEND_SIZE          = 0x00000010,
    SECTION_MAP_EXECUTE_EXPLICIT = 0x00000020,
}

alias TAPE_GET_DRIVE_PARAMETERS_FEATURES_HIGH = uint;
enum : uint
{
    TAPE_DRIVE_ABS_BLK_IMMED    = 0x80002000,
    TAPE_DRIVE_ABSOLUTE_BLK     = 0x80001000,
    TAPE_DRIVE_END_OF_DATA      = 0x80010000,
    TAPE_DRIVE_FILEMARKS        = 0x80040000,
    TAPE_DRIVE_LOAD_UNLOAD      = 0x80000001,
    TAPE_DRIVE_LOAD_UNLD_IMMED  = 0x80000020,
    TAPE_DRIVE_LOCK_UNLOCK      = 0x80000004,
    TAPE_DRIVE_LOCK_UNLK_IMMED  = 0x80000080,
    TAPE_DRIVE_LOG_BLK_IMMED    = 0x80008000,
    TAPE_DRIVE_LOGICAL_BLK      = 0x80004000,
    TAPE_DRIVE_RELATIVE_BLKS    = 0x80020000,
    TAPE_DRIVE_REVERSE_POSITION = 0x80400000,
    TAPE_DRIVE_REWIND_IMMEDIATE = 0x80000008,
    TAPE_DRIVE_SEQUENTIAL_FMKS  = 0x80080000,
    TAPE_DRIVE_SEQUENTIAL_SMKS  = 0x80200000,
    TAPE_DRIVE_SET_BLOCK_SIZE   = 0x80000010,
    TAPE_DRIVE_SET_COMPRESSION  = 0x80000200,
    TAPE_DRIVE_SET_ECC          = 0x80000100,
    TAPE_DRIVE_SET_PADDING      = 0x80000400,
    TAPE_DRIVE_SET_REPORT_SMKS  = 0x80000800,
    TAPE_DRIVE_SETMARKS         = 0x80100000,
    TAPE_DRIVE_SPACE_IMMEDIATE  = 0x80800000,
    TAPE_DRIVE_TENSION          = 0x80000002,
    TAPE_DRIVE_TENSION_IMMED    = 0x80000040,
    TAPE_DRIVE_WRITE_FILEMARKS  = 0x82000000,
    TAPE_DRIVE_WRITE_LONG_FMKS  = 0x88000000,
    TAPE_DRIVE_WRITE_MARK_IMMED = 0x90000000,
    TAPE_DRIVE_WRITE_SETMARKS   = 0x81000000,
    TAPE_DRIVE_WRITE_SHORT_FMKS = 0x84000000,
}

alias DEV_BROADCAST_HDR_DEVICE_TYPE = uint;
enum : uint
{
    DBT_DEVTYP_DEVICEINTERFACE = 0x00000005,
    DBT_DEVTYP_HANDLE          = 0x00000006,
    DBT_DEVTYP_OEM             = 0x00000000,
    DBT_DEVTYP_PORT            = 0x00000003,
    DBT_DEVTYP_VOLUME          = 0x00000002,
}

alias DEV_BROADCAST_VOLUME_FLAGS = ushort;
enum : ushort
{
    DBTF_MEDIA = 0x0001,
    DBTF_NET   = 0x0002,
}

alias MODIFIERKEYS_FLAGS = uint;
enum : uint
{
    MK_LBUTTON  = 0x00000001,
    MK_RBUTTON  = 0x00000002,
    MK_SHIFT    = 0x00000004,
    MK_CONTROL  = 0x00000008,
    MK_MBUTTON  = 0x00000010,
    MK_XBUTTON1 = 0x00000020,
    MK_XBUTTON2 = 0x00000040,
}

alias STATIC_STYLES = uint;
enum : uint
{
    SS_LEFT            = 0x00000000,
    SS_CENTER          = 0x00000001,
    SS_RIGHT           = 0x00000002,
    SS_ICON            = 0x00000003,
    SS_BLACKRECT       = 0x00000004,
    SS_GRAYRECT        = 0x00000005,
    SS_WHITERECT       = 0x00000006,
    SS_BLACKFRAME      = 0x00000007,
    SS_GRAYFRAME       = 0x00000008,
    SS_WHITEFRAME      = 0x00000009,
    SS_USERITEM        = 0x0000000a,
    SS_SIMPLE          = 0x0000000b,
    SS_LEFTNOWORDWRAP  = 0x0000000c,
    SS_OWNERDRAW       = 0x0000000d,
    SS_BITMAP          = 0x0000000e,
    SS_ENHMETAFILE     = 0x0000000f,
    SS_ETCHEDHORZ      = 0x00000010,
    SS_ETCHEDVERT      = 0x00000011,
    SS_ETCHEDFRAME     = 0x00000012,
    SS_TYPEMASK        = 0x0000001f,
    SS_REALSIZECONTROL = 0x00000040,
    SS_NOPREFIX        = 0x00000080,
    SS_NOTIFY          = 0x00000100,
    SS_CENTERIMAGE     = 0x00000200,
    SS_RIGHTJUST       = 0x00000400,
    SS_REALSIZEIMAGE   = 0x00000800,
    SS_SUNKEN          = 0x00001000,
    SS_EDITCONTROL     = 0x00002000,
    SS_ENDELLIPSIS     = 0x00004000,
    SS_PATHELLIPSIS    = 0x00008000,
    SS_WORDELLIPSIS    = 0x0000c000,
    SS_ELLIPSISMASK    = 0x0000c000,
}

alias RECO_FLAGS = uint;
enum : uint
{
    RECO_PASTE = 0x00000000,
    RECO_DROP  = 0x00000001,
    RECO_COPY  = 0x00000002,
    RECO_CUT   = 0x00000003,
    RECO_DRAG  = 0x00000004,
}

alias SFGAO_FLAGS = ulong;
enum : ulong
{
    SFGAO_CANCOPY         = 0x00000001,
    SFGAO_CANMOVE         = 0x00000002,
    SFGAO_CANLINK         = 0x00000004,
    SFGAO_STORAGE         = 0x00000008,
    SFGAO_CANRENAME       = 0x00000010,
    SFGAO_CANDELETE       = 0x00000020,
    SFGAO_HASPROPSHEET    = 0x00000040,
    SFGAO_DROPTARGET      = 0x00000100,
    SFGAO_CAPABILITYMASK  = 0x00000177,
    SFGAO_PLACEHOLDER     = 0x00000800,
    SFGAO_SYSTEM          = 0x00001000,
    SFGAO_ENCRYPTED       = 0x00002000,
    SFGAO_ISSLOW          = 0x00004000,
    SFGAO_GHOSTED         = 0x00008000,
    SFGAO_LINK            = 0x00010000,
    SFGAO_SHARE           = 0x00020000,
    SFGAO_READONLY        = 0x00040000,
    SFGAO_HIDDEN          = 0x00080000,
    SFGAO_DISPLAYATTRMASK = 0x000fc000,
    SFGAO_FILESYSANCESTOR = 0x10000000,
    SFGAO_FOLDER          = 0x20000000,
    SFGAO_FILESYSTEM      = 0x40000000,
    SFGAO_HASSUBFOLDER    = 0x80000000,
    SFGAO_CONTENTSMASK    = 0x80000000,
    SFGAO_VALIDATE        = 0x01000000,
    SFGAO_REMOVABLE       = 0x02000000,
    SFGAO_COMPRESSED      = 0x04000000,
    SFGAO_BROWSABLE       = 0x08000000,
    SFGAO_NONENUMERATED   = 0x00100000,
    SFGAO_NEWCONTENT      = 0x00200000,
    SFGAO_CANMONIKER      = 0x00400000,
    SFGAO_HASSTORAGE      = 0x00400000,
    SFGAO_STREAM          = 0x00400000,
    SFGAO_STORAGEANCESTOR = 0x00800000,
    SFGAO_STORAGECAPMASK  = 0x70c50008,
    SFGAO_PKEYSFGAOMASK   = 0x81044000,
}

alias DESKTOP_ACCESS_FLAGS = uint;
enum : uint
{
    DESKTOP_READOBJECTS     = 0x00000001,
    DESKTOP_CREATEWINDOW    = 0x00000002,
    DESKTOP_CREATEMENU      = 0x00000004,
    DESKTOP_HOOKCONTROL     = 0x00000008,
    DESKTOP_JOURNALRECORD   = 0x00000010,
    DESKTOP_JOURNALPLAYBACK = 0x00000020,
    DESKTOP_ENUMERATE       = 0x00000040,
    DESKTOP_WRITEOBJECTS    = 0x00000080,
    DESKTOP_SWITCHDESKTOP   = 0x00000100,
}

alias PUMS_SCHEDULER_ENTRY_POINT = void function(RTL_UMS_SCHEDULER_REASON, ulong, void*);
BOOL UnregisterDeviceNotification(void*);
enum _MM_HINT_T0 = 0x00000001;
enum _MM_HINT_T1 = 0x00000002;
enum _MM_HINT_T2 = 0x00000003;
enum _MM_HINT_NTA = 0x00000000;
enum ANYSIZE_ARRAY = 0x00000001;
enum MEMORY_ALLOCATION_ALIGNMENT = 0x00000010;
enum X86_CACHE_ALIGNMENT_SIZE = 0x00000040;
enum ARM_CACHE_ALIGNMENT_SIZE = 0x00000080;
enum SYSTEM_CACHE_ALIGNMENT_SIZE = 0x00000040;
enum PRAGMA_DEPRECATED_DDK = 0x00000001;
enum UCSCHAR_INVALID_CHARACTER = 0xffffffff;
enum MIN_UCSCHAR = 0x00000000;
enum MAX_UCSCHAR = 0x0010ffff;
enum ALL_PROCESSOR_GROUPS = 0x0000ffff;
enum MAXIMUM_PROC_PER_GROUP = 0x00000040;
enum MAXIMUM_PROCESSORS = 0x00000040;
enum APPLICATION_ERROR_MASK = 0x20000000;
enum ERROR_SEVERITY_SUCCESS = 0x00000000;
enum ERROR_SEVERITY_INFORMATIONAL = 0x40000000;
enum ERROR_SEVERITY_WARNING = 0x80000000;
enum ERROR_SEVERITY_ERROR = 0xc0000000;
enum MAXLONGLONG = 0x7fffffffffffffff;
enum UNICODE_STRING_MAX_CHARS = 0x00007fff;
enum MINCHAR = 0x00000080;
enum MAXCHAR = 0x0000007f;
enum MINSHORT = 0x00008000;
enum MAXSHORT = 0x00007fff;
enum MINLONG = 0x80000000;
enum MAXLONG = 0x7fffffff;
enum MAXBYTE = 0x000000ff;
enum MAXWORD = 0x0000ffff;
enum MAXDWORD = 0xffffffff;
enum ENCLAVE_SHORT_ID_LENGTH = 0x00000010;
enum ENCLAVE_LONG_ID_LENGTH = 0x00000020;
enum VER_SERVER_NT = 0x80000000;
enum VER_WORKSTATION_NT = 0x40000000;
enum VER_SUITE_SMALLBUSINESS = 0x00000001;
enum VER_SUITE_ENTERPRISE = 0x00000002;
enum VER_SUITE_BACKOFFICE = 0x00000004;
enum VER_SUITE_COMMUNICATIONS = 0x00000008;
enum VER_SUITE_TERMINAL = 0x00000010;
enum VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x00000020;
enum VER_SUITE_EMBEDDEDNT = 0x00000040;
enum VER_SUITE_DATACENTER = 0x00000080;
enum VER_SUITE_SINGLEUSERTS = 0x00000100;
enum VER_SUITE_PERSONAL = 0x00000200;
enum VER_SUITE_BLADE = 0x00000400;
enum VER_SUITE_EMBEDDED_RESTRICTED = 0x00000800;
enum VER_SUITE_SECURITY_APPLIANCE = 0x00001000;
enum VER_SUITE_STORAGE_SERVER = 0x00002000;
enum VER_SUITE_COMPUTE_SERVER = 0x00004000;
enum VER_SUITE_WH_SERVER = 0x00008000;
enum VER_SUITE_MULTIUSERTS = 0x00020000;
enum PRODUCT_STANDARD_SERVER_CORE = 0x0000000d;
enum PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = 0x00000039;
enum PRODUCT_PROFESSIONAL_EMBEDDED = 0x0000003a;
enum PRODUCT_EMBEDDED = 0x00000041;
enum PRODUCT_EMBEDDED_AUTOMOTIVE = 0x00000055;
enum PRODUCT_EMBEDDED_INDUSTRY_A = 0x00000056;
enum PRODUCT_THINPC = 0x00000057;
enum PRODUCT_EMBEDDED_A = 0x00000058;
enum PRODUCT_EMBEDDED_INDUSTRY = 0x00000059;
enum PRODUCT_EMBEDDED_E = 0x0000005a;
enum PRODUCT_EMBEDDED_INDUSTRY_E = 0x0000005b;
enum PRODUCT_EMBEDDED_INDUSTRY_A_E = 0x0000005c;
enum PRODUCT_CORE_ARM = 0x00000061;
enum PRODUCT_EMBEDDED_INDUSTRY_EVAL = 0x00000069;
enum PRODUCT_EMBEDDED_INDUSTRY_E_EVAL = 0x0000006a;
enum PRODUCT_EMBEDDED_EVAL = 0x0000006b;
enum PRODUCT_EMBEDDED_E_EVAL = 0x0000006c;
enum PRODUCT_NANO_SERVER = 0x0000006d;
enum PRODUCT_CLOUD_STORAGE_SERVER = 0x0000006e;
enum PRODUCT_CORE_CONNECTED = 0x0000006f;
enum PRODUCT_PROFESSIONAL_STUDENT = 0x00000070;
enum PRODUCT_CORE_CONNECTED_N = 0x00000071;
enum PRODUCT_PROFESSIONAL_STUDENT_N = 0x00000072;
enum PRODUCT_CORE_CONNECTED_SINGLELANGUAGE = 0x00000073;
enum PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC = 0x00000074;
enum PRODUCT_CONNECTED_CAR = 0x00000075;
enum PRODUCT_INDUSTRY_HANDHELD = 0x00000076;
enum PRODUCT_PPI_PRO = 0x00000077;
enum PRODUCT_ARM64_SERVER = 0x00000078;
enum PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER = 0x0000007c;
enum PRODUCT_PROFESSIONAL_S = 0x0000007f;
enum PRODUCT_PROFESSIONAL_S_N = 0x00000080;
enum PRODUCT_HOLOGRAPHIC = 0x00000087;
enum PRODUCT_HOLOGRAPHIC_BUSINESS = 0x00000088;
enum PRODUCT_PRO_SINGLE_LANGUAGE = 0x0000008a;
enum PRODUCT_PRO_CHINA = 0x0000008b;
enum PRODUCT_ENTERPRISE_SUBSCRIPTION = 0x0000008c;
enum PRODUCT_ENTERPRISE_SUBSCRIPTION_N = 0x0000008d;
enum PRODUCT_DATACENTER_NANO_SERVER = 0x0000008f;
enum PRODUCT_STANDARD_NANO_SERVER = 0x00000090;
enum PRODUCT_DATACENTER_WS_SERVER_CORE = 0x00000093;
enum PRODUCT_STANDARD_WS_SERVER_CORE = 0x00000094;
enum PRODUCT_UTILITY_VM = 0x00000095;
enum PRODUCT_DATACENTER_EVALUATION_SERVER_CORE = 0x0000009f;
enum PRODUCT_STANDARD_EVALUATION_SERVER_CORE = 0x000000a0;
enum PRODUCT_PRO_FOR_EDUCATION = 0x000000a4;
enum PRODUCT_PRO_FOR_EDUCATION_N = 0x000000a5;
enum PRODUCT_AZURE_SERVER_CORE = 0x000000a8;
enum PRODUCT_AZURE_NANO_SERVER = 0x000000a9;
enum PRODUCT_ENTERPRISEG = 0x000000ab;
enum PRODUCT_ENTERPRISEGN = 0x000000ac;
enum PRODUCT_SERVERRDSH = 0x000000af;
enum PRODUCT_CLOUD = 0x000000b2;
enum PRODUCT_CLOUDN = 0x000000b3;
enum PRODUCT_HUBOS = 0x000000b4;
enum PRODUCT_ONECOREUPDATEOS = 0x000000b6;
enum PRODUCT_CLOUDE = 0x000000b7;
enum PRODUCT_IOTOS = 0x000000b9;
enum PRODUCT_CLOUDEN = 0x000000ba;
enum PRODUCT_IOTEDGEOS = 0x000000bb;
enum PRODUCT_IOTENTERPRISE = 0x000000bc;
enum PRODUCT_LITE = 0x000000bd;
enum PRODUCT_IOTENTERPRISES = 0x000000bf;
enum PRODUCT_XBOX_SYSTEMOS = 0x000000c0;
enum PRODUCT_XBOX_NATIVEOS = 0x000000c1;
enum PRODUCT_XBOX_GAMEOS = 0x000000c2;
enum PRODUCT_XBOX_ERAOS = 0x000000c3;
enum PRODUCT_XBOX_DURANGOHOSTOS = 0x000000c4;
enum PRODUCT_XBOX_SCARLETTHOSTOS = 0x000000c5;
enum PRODUCT_AZURE_SERVER_CLOUDHOST = 0x000000c7;
enum PRODUCT_AZURE_SERVER_CLOUDMOS = 0x000000c8;
enum PRODUCT_CLOUDEDITIONN = 0x000000ca;
enum PRODUCT_CLOUDEDITION = 0x000000cb;
enum PRODUCT_AZURESTACKHCI_SERVER_CORE = 0x00000196;
enum PRODUCT_DATACENTER_SERVER_AZURE_EDITION = 0x00000197;
enum PRODUCT_DATACENTER_SERVER_CORE_AZURE_EDITION = 0x00000198;
enum PRODUCT_UNLICENSED = 0xabcdabcd;
enum LANG_NEUTRAL = 0x00000000;
enum LANG_INVARIANT = 0x0000007f;
enum LANG_AFRIKAANS = 0x00000036;
enum LANG_ALBANIAN = 0x0000001c;
enum LANG_ALSATIAN = 0x00000084;
enum LANG_AMHARIC = 0x0000005e;
enum LANG_ARABIC = 0x00000001;
enum LANG_ARMENIAN = 0x0000002b;
enum LANG_ASSAMESE = 0x0000004d;
enum LANG_AZERI = 0x0000002c;
enum LANG_AZERBAIJANI = 0x0000002c;
enum LANG_BANGLA = 0x00000045;
enum LANG_BASHKIR = 0x0000006d;
enum LANG_BASQUE = 0x0000002d;
enum LANG_BELARUSIAN = 0x00000023;
enum LANG_BENGALI = 0x00000045;
enum LANG_BRETON = 0x0000007e;
enum LANG_BOSNIAN = 0x0000001a;
enum LANG_BOSNIAN_NEUTRAL = 0x0000781a;
enum LANG_BULGARIAN = 0x00000002;
enum LANG_CATALAN = 0x00000003;
enum LANG_CENTRAL_KURDISH = 0x00000092;
enum LANG_CHEROKEE = 0x0000005c;
enum LANG_CHINESE = 0x00000004;
enum LANG_CHINESE_SIMPLIFIED = 0x00000004;
enum LANG_CHINESE_TRADITIONAL = 0x00007c04;
enum LANG_CORSICAN = 0x00000083;
enum LANG_CROATIAN = 0x0000001a;
enum LANG_CZECH = 0x00000005;
enum LANG_DANISH = 0x00000006;
enum LANG_DARI = 0x0000008c;
enum LANG_DIVEHI = 0x00000065;
enum LANG_DUTCH = 0x00000013;
enum LANG_ENGLISH = 0x00000009;
enum LANG_ESTONIAN = 0x00000025;
enum LANG_FAEROESE = 0x00000038;
enum LANG_FARSI = 0x00000029;
enum LANG_FILIPINO = 0x00000064;
enum LANG_FINNISH = 0x0000000b;
enum LANG_FRENCH = 0x0000000c;
enum LANG_FRISIAN = 0x00000062;
enum LANG_FULAH = 0x00000067;
enum LANG_GALICIAN = 0x00000056;
enum LANG_GEORGIAN = 0x00000037;
enum LANG_GERMAN = 0x00000007;
enum LANG_GREEK = 0x00000008;
enum LANG_GREENLANDIC = 0x0000006f;
enum LANG_GUJARATI = 0x00000047;
enum LANG_HAUSA = 0x00000068;
enum LANG_HAWAIIAN = 0x00000075;
enum LANG_HEBREW = 0x0000000d;
enum LANG_HINDI = 0x00000039;
enum LANG_HUNGARIAN = 0x0000000e;
enum LANG_ICELANDIC = 0x0000000f;
enum LANG_IGBO = 0x00000070;
enum LANG_INDONESIAN = 0x00000021;
enum LANG_INUKTITUT = 0x0000005d;
enum LANG_IRISH = 0x0000003c;
enum LANG_ITALIAN = 0x00000010;
enum LANG_JAPANESE = 0x00000011;
enum LANG_KANNADA = 0x0000004b;
enum LANG_KASHMIRI = 0x00000060;
enum LANG_KAZAK = 0x0000003f;
enum LANG_KHMER = 0x00000053;
enum LANG_KICHE = 0x00000086;
enum LANG_KINYARWANDA = 0x00000087;
enum LANG_KONKANI = 0x00000057;
enum LANG_KOREAN = 0x00000012;
enum LANG_KYRGYZ = 0x00000040;
enum LANG_LAO = 0x00000054;
enum LANG_LATVIAN = 0x00000026;
enum LANG_LITHUANIAN = 0x00000027;
enum LANG_LOWER_SORBIAN = 0x0000002e;
enum LANG_LUXEMBOURGISH = 0x0000006e;
enum LANG_MACEDONIAN = 0x0000002f;
enum LANG_MALAY = 0x0000003e;
enum LANG_MALAYALAM = 0x0000004c;
enum LANG_MALTESE = 0x0000003a;
enum LANG_MANIPURI = 0x00000058;
enum LANG_MAORI = 0x00000081;
enum LANG_MAPUDUNGUN = 0x0000007a;
enum LANG_MARATHI = 0x0000004e;
enum LANG_MOHAWK = 0x0000007c;
enum LANG_MONGOLIAN = 0x00000050;
enum LANG_NEPALI = 0x00000061;
enum LANG_NORWEGIAN = 0x00000014;
enum LANG_OCCITAN = 0x00000082;
enum LANG_ODIA = 0x00000048;
enum LANG_ORIYA = 0x00000048;
enum LANG_PASHTO = 0x00000063;
enum LANG_PERSIAN = 0x00000029;
enum LANG_POLISH = 0x00000015;
enum LANG_PORTUGUESE = 0x00000016;
enum LANG_PULAR = 0x00000067;
enum LANG_PUNJABI = 0x00000046;
enum LANG_QUECHUA = 0x0000006b;
enum LANG_ROMANIAN = 0x00000018;
enum LANG_ROMANSH = 0x00000017;
enum LANG_RUSSIAN = 0x00000019;
enum LANG_SAKHA = 0x00000085;
enum LANG_SAMI = 0x0000003b;
enum LANG_SANSKRIT = 0x0000004f;
enum LANG_SCOTTISH_GAELIC = 0x00000091;
enum LANG_SERBIAN = 0x0000001a;
enum LANG_SERBIAN_NEUTRAL = 0x00007c1a;
enum LANG_SINDHI = 0x00000059;
enum LANG_SINHALESE = 0x0000005b;
enum LANG_SLOVAK = 0x0000001b;
enum LANG_SLOVENIAN = 0x00000024;
enum LANG_SOTHO = 0x0000006c;
enum LANG_SPANISH = 0x0000000a;
enum LANG_SWAHILI = 0x00000041;
enum LANG_SWEDISH = 0x0000001d;
enum LANG_SYRIAC = 0x0000005a;
enum LANG_TAJIK = 0x00000028;
enum LANG_TAMAZIGHT = 0x0000005f;
enum LANG_TAMIL = 0x00000049;
enum LANG_TATAR = 0x00000044;
enum LANG_TELUGU = 0x0000004a;
enum LANG_THAI = 0x0000001e;
enum LANG_TIBETAN = 0x00000051;
enum LANG_TIGRIGNA = 0x00000073;
enum LANG_TIGRINYA = 0x00000073;
enum LANG_TSWANA = 0x00000032;
enum LANG_TURKISH = 0x0000001f;
enum LANG_TURKMEN = 0x00000042;
enum LANG_UIGHUR = 0x00000080;
enum LANG_UKRAINIAN = 0x00000022;
enum LANG_UPPER_SORBIAN = 0x0000002e;
enum LANG_URDU = 0x00000020;
enum LANG_UZBEK = 0x00000043;
enum LANG_VALENCIAN = 0x00000003;
enum LANG_VIETNAMESE = 0x0000002a;
enum LANG_WELSH = 0x00000052;
enum LANG_WOLOF = 0x00000088;
enum LANG_XHOSA = 0x00000034;
enum LANG_YAKUT = 0x00000085;
enum LANG_YI = 0x00000078;
enum LANG_YORUBA = 0x0000006a;
enum LANG_ZULU = 0x00000035;
enum SUBLANG_NEUTRAL = 0x00000000;
enum SUBLANG_DEFAULT = 0x00000001;
enum SUBLANG_SYS_DEFAULT = 0x00000002;
enum SUBLANG_CUSTOM_DEFAULT = 0x00000003;
enum SUBLANG_CUSTOM_UNSPECIFIED = 0x00000004;
enum SUBLANG_UI_CUSTOM_DEFAULT = 0x00000005;
enum SUBLANG_AFRIKAANS_SOUTH_AFRICA = 0x00000001;
enum SUBLANG_ALBANIAN_ALBANIA = 0x00000001;
enum SUBLANG_ALSATIAN_FRANCE = 0x00000001;
enum SUBLANG_AMHARIC_ETHIOPIA = 0x00000001;
enum SUBLANG_ARABIC_SAUDI_ARABIA = 0x00000001;
enum SUBLANG_ARABIC_IRAQ = 0x00000002;
enum SUBLANG_ARABIC_EGYPT = 0x00000003;
enum SUBLANG_ARABIC_LIBYA = 0x00000004;
enum SUBLANG_ARABIC_ALGERIA = 0x00000005;
enum SUBLANG_ARABIC_MOROCCO = 0x00000006;
enum SUBLANG_ARABIC_TUNISIA = 0x00000007;
enum SUBLANG_ARABIC_OMAN = 0x00000008;
enum SUBLANG_ARABIC_YEMEN = 0x00000009;
enum SUBLANG_ARABIC_SYRIA = 0x0000000a;
enum SUBLANG_ARABIC_JORDAN = 0x0000000b;
enum SUBLANG_ARABIC_LEBANON = 0x0000000c;
enum SUBLANG_ARABIC_KUWAIT = 0x0000000d;
enum SUBLANG_ARABIC_UAE = 0x0000000e;
enum SUBLANG_ARABIC_BAHRAIN = 0x0000000f;
enum SUBLANG_ARABIC_QATAR = 0x00000010;
enum SUBLANG_ARMENIAN_ARMENIA = 0x00000001;
enum SUBLANG_ASSAMESE_INDIA = 0x00000001;
enum SUBLANG_AZERI_LATIN = 0x00000001;
enum SUBLANG_AZERI_CYRILLIC = 0x00000002;
enum SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN = 0x00000001;
enum SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC = 0x00000002;
enum SUBLANG_BANGLA_INDIA = 0x00000001;
enum SUBLANG_BANGLA_BANGLADESH = 0x00000002;
enum SUBLANG_BASHKIR_RUSSIA = 0x00000001;
enum SUBLANG_BASQUE_BASQUE = 0x00000001;
enum SUBLANG_BELARUSIAN_BELARUS = 0x00000001;
enum SUBLANG_BENGALI_INDIA = 0x00000001;
enum SUBLANG_BENGALI_BANGLADESH = 0x00000002;
enum SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 0x00000005;
enum SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x00000008;
enum SUBLANG_BRETON_FRANCE = 0x00000001;
enum SUBLANG_BULGARIAN_BULGARIA = 0x00000001;
enum SUBLANG_CATALAN_CATALAN = 0x00000001;
enum SUBLANG_CENTRAL_KURDISH_IRAQ = 0x00000001;
enum SUBLANG_CHEROKEE_CHEROKEE = 0x00000001;
enum SUBLANG_CHINESE_TRADITIONAL = 0x00000001;
enum SUBLANG_CHINESE_SIMPLIFIED = 0x00000002;
enum SUBLANG_CHINESE_HONGKONG = 0x00000003;
enum SUBLANG_CHINESE_SINGAPORE = 0x00000004;
enum SUBLANG_CHINESE_MACAU = 0x00000005;
enum SUBLANG_CORSICAN_FRANCE = 0x00000001;
enum SUBLANG_CZECH_CZECH_REPUBLIC = 0x00000001;
enum SUBLANG_CROATIAN_CROATIA = 0x00000001;
enum SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 0x00000004;
enum SUBLANG_DANISH_DENMARK = 0x00000001;
enum SUBLANG_DARI_AFGHANISTAN = 0x00000001;
enum SUBLANG_DIVEHI_MALDIVES = 0x00000001;
enum SUBLANG_DUTCH = 0x00000001;
enum SUBLANG_DUTCH_BELGIAN = 0x00000002;
enum SUBLANG_ENGLISH_US = 0x00000001;
enum SUBLANG_ENGLISH_UK = 0x00000002;
enum SUBLANG_ENGLISH_AUS = 0x00000003;
enum SUBLANG_ENGLISH_CAN = 0x00000004;
enum SUBLANG_ENGLISH_NZ = 0x00000005;
enum SUBLANG_ENGLISH_EIRE = 0x00000006;
enum SUBLANG_ENGLISH_SOUTH_AFRICA = 0x00000007;
enum SUBLANG_ENGLISH_JAMAICA = 0x00000008;
enum SUBLANG_ENGLISH_CARIBBEAN = 0x00000009;
enum SUBLANG_ENGLISH_BELIZE = 0x0000000a;
enum SUBLANG_ENGLISH_TRINIDAD = 0x0000000b;
enum SUBLANG_ENGLISH_ZIMBABWE = 0x0000000c;
enum SUBLANG_ENGLISH_PHILIPPINES = 0x0000000d;
enum SUBLANG_ENGLISH_INDIA = 0x00000010;
enum SUBLANG_ENGLISH_MALAYSIA = 0x00000011;
enum SUBLANG_ENGLISH_SINGAPORE = 0x00000012;
enum SUBLANG_ESTONIAN_ESTONIA = 0x00000001;
enum SUBLANG_FAEROESE_FAROE_ISLANDS = 0x00000001;
enum SUBLANG_FILIPINO_PHILIPPINES = 0x00000001;
enum SUBLANG_FINNISH_FINLAND = 0x00000001;
enum SUBLANG_FRENCH = 0x00000001;
enum SUBLANG_FRENCH_BELGIAN = 0x00000002;
enum SUBLANG_FRENCH_CANADIAN = 0x00000003;
enum SUBLANG_FRENCH_SWISS = 0x00000004;
enum SUBLANG_FRENCH_LUXEMBOURG = 0x00000005;
enum SUBLANG_FRENCH_MONACO = 0x00000006;
enum SUBLANG_FRISIAN_NETHERLANDS = 0x00000001;
enum SUBLANG_FULAH_SENEGAL = 0x00000002;
enum SUBLANG_GALICIAN_GALICIAN = 0x00000001;
enum SUBLANG_GEORGIAN_GEORGIA = 0x00000001;
enum SUBLANG_GERMAN = 0x00000001;
enum SUBLANG_GERMAN_SWISS = 0x00000002;
enum SUBLANG_GERMAN_AUSTRIAN = 0x00000003;
enum SUBLANG_GERMAN_LUXEMBOURG = 0x00000004;
enum SUBLANG_GERMAN_LIECHTENSTEIN = 0x00000005;
enum SUBLANG_GREEK_GREECE = 0x00000001;
enum SUBLANG_GREENLANDIC_GREENLAND = 0x00000001;
enum SUBLANG_GUJARATI_INDIA = 0x00000001;
enum SUBLANG_HAUSA_NIGERIA_LATIN = 0x00000001;
enum SUBLANG_HAWAIIAN_US = 0x00000001;
enum SUBLANG_HEBREW_ISRAEL = 0x00000001;
enum SUBLANG_HINDI_INDIA = 0x00000001;
enum SUBLANG_HUNGARIAN_HUNGARY = 0x00000001;
enum SUBLANG_ICELANDIC_ICELAND = 0x00000001;
enum SUBLANG_IGBO_NIGERIA = 0x00000001;
enum SUBLANG_INDONESIAN_INDONESIA = 0x00000001;
enum SUBLANG_INUKTITUT_CANADA = 0x00000001;
enum SUBLANG_INUKTITUT_CANADA_LATIN = 0x00000002;
enum SUBLANG_IRISH_IRELAND = 0x00000002;
enum SUBLANG_ITALIAN = 0x00000001;
enum SUBLANG_ITALIAN_SWISS = 0x00000002;
enum SUBLANG_JAPANESE_JAPAN = 0x00000001;
enum SUBLANG_KANNADA_INDIA = 0x00000001;
enum SUBLANG_KASHMIRI_SASIA = 0x00000002;
enum SUBLANG_KASHMIRI_INDIA = 0x00000002;
enum SUBLANG_KAZAK_KAZAKHSTAN = 0x00000001;
enum SUBLANG_KHMER_CAMBODIA = 0x00000001;
enum SUBLANG_KICHE_GUATEMALA = 0x00000001;
enum SUBLANG_KINYARWANDA_RWANDA = 0x00000001;
enum SUBLANG_KONKANI_INDIA = 0x00000001;
enum SUBLANG_KOREAN = 0x00000001;
enum SUBLANG_KYRGYZ_KYRGYZSTAN = 0x00000001;
enum SUBLANG_LAO_LAO = 0x00000001;
enum SUBLANG_LATVIAN_LATVIA = 0x00000001;
enum SUBLANG_LITHUANIAN = 0x00000001;
enum SUBLANG_LOWER_SORBIAN_GERMANY = 0x00000002;
enum SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 0x00000001;
enum SUBLANG_MACEDONIAN_MACEDONIA = 0x00000001;
enum SUBLANG_MALAY_MALAYSIA = 0x00000001;
enum SUBLANG_MALAY_BRUNEI_DARUSSALAM = 0x00000002;
enum SUBLANG_MALAYALAM_INDIA = 0x00000001;
enum SUBLANG_MALTESE_MALTA = 0x00000001;
enum SUBLANG_MAORI_NEW_ZEALAND = 0x00000001;
enum SUBLANG_MAPUDUNGUN_CHILE = 0x00000001;
enum SUBLANG_MARATHI_INDIA = 0x00000001;
enum SUBLANG_MOHAWK_MOHAWK = 0x00000001;
enum SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 0x00000001;
enum SUBLANG_MONGOLIAN_PRC = 0x00000002;
enum SUBLANG_NEPALI_INDIA = 0x00000002;
enum SUBLANG_NEPALI_NEPAL = 0x00000001;
enum SUBLANG_NORWEGIAN_BOKMAL = 0x00000001;
enum SUBLANG_NORWEGIAN_NYNORSK = 0x00000002;
enum SUBLANG_OCCITAN_FRANCE = 0x00000001;
enum SUBLANG_ODIA_INDIA = 0x00000001;
enum SUBLANG_ORIYA_INDIA = 0x00000001;
enum SUBLANG_PASHTO_AFGHANISTAN = 0x00000001;
enum SUBLANG_PERSIAN_IRAN = 0x00000001;
enum SUBLANG_POLISH_POLAND = 0x00000001;
enum SUBLANG_PORTUGUESE = 0x00000002;
enum SUBLANG_PORTUGUESE_BRAZILIAN = 0x00000001;
enum SUBLANG_PULAR_SENEGAL = 0x00000002;
enum SUBLANG_PUNJABI_INDIA = 0x00000001;
enum SUBLANG_PUNJABI_PAKISTAN = 0x00000002;
enum SUBLANG_QUECHUA_BOLIVIA = 0x00000001;
enum SUBLANG_QUECHUA_ECUADOR = 0x00000002;
enum SUBLANG_QUECHUA_PERU = 0x00000003;
enum SUBLANG_ROMANIAN_ROMANIA = 0x00000001;
enum SUBLANG_ROMANSH_SWITZERLAND = 0x00000001;
enum SUBLANG_RUSSIAN_RUSSIA = 0x00000001;
enum SUBLANG_SAKHA_RUSSIA = 0x00000001;
enum SUBLANG_SAMI_NORTHERN_NORWAY = 0x00000001;
enum SUBLANG_SAMI_NORTHERN_SWEDEN = 0x00000002;
enum SUBLANG_SAMI_NORTHERN_FINLAND = 0x00000003;
enum SUBLANG_SAMI_LULE_NORWAY = 0x00000004;
enum SUBLANG_SAMI_LULE_SWEDEN = 0x00000005;
enum SUBLANG_SAMI_SOUTHERN_NORWAY = 0x00000006;
enum SUBLANG_SAMI_SOUTHERN_SWEDEN = 0x00000007;
enum SUBLANG_SAMI_SKOLT_FINLAND = 0x00000008;
enum SUBLANG_SAMI_INARI_FINLAND = 0x00000009;
enum SUBLANG_SANSKRIT_INDIA = 0x00000001;
enum SUBLANG_SCOTTISH_GAELIC = 0x00000001;
enum SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 0x00000006;
enum SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x00000007;
enum SUBLANG_SERBIAN_MONTENEGRO_LATIN = 0x0000000b;
enum SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC = 0x0000000c;
enum SUBLANG_SERBIAN_SERBIA_LATIN = 0x00000009;
enum SUBLANG_SERBIAN_SERBIA_CYRILLIC = 0x0000000a;
enum SUBLANG_SERBIAN_CROATIA = 0x00000001;
enum SUBLANG_SERBIAN_LATIN = 0x00000002;
enum SUBLANG_SERBIAN_CYRILLIC = 0x00000003;
enum SUBLANG_SINDHI_INDIA = 0x00000001;
enum SUBLANG_SINDHI_PAKISTAN = 0x00000002;
enum SUBLANG_SINDHI_AFGHANISTAN = 0x00000002;
enum SUBLANG_SINHALESE_SRI_LANKA = 0x00000001;
enum SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 0x00000001;
enum SUBLANG_SLOVAK_SLOVAKIA = 0x00000001;
enum SUBLANG_SLOVENIAN_SLOVENIA = 0x00000001;
enum SUBLANG_SPANISH = 0x00000001;
enum SUBLANG_SPANISH_MEXICAN = 0x00000002;
enum SUBLANG_SPANISH_MODERN = 0x00000003;
enum SUBLANG_SPANISH_GUATEMALA = 0x00000004;
enum SUBLANG_SPANISH_COSTA_RICA = 0x00000005;
enum SUBLANG_SPANISH_PANAMA = 0x00000006;
enum SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 0x00000007;
enum SUBLANG_SPANISH_VENEZUELA = 0x00000008;
enum SUBLANG_SPANISH_COLOMBIA = 0x00000009;
enum SUBLANG_SPANISH_PERU = 0x0000000a;
enum SUBLANG_SPANISH_ARGENTINA = 0x0000000b;
enum SUBLANG_SPANISH_ECUADOR = 0x0000000c;
enum SUBLANG_SPANISH_CHILE = 0x0000000d;
enum SUBLANG_SPANISH_URUGUAY = 0x0000000e;
enum SUBLANG_SPANISH_PARAGUAY = 0x0000000f;
enum SUBLANG_SPANISH_BOLIVIA = 0x00000010;
enum SUBLANG_SPANISH_EL_SALVADOR = 0x00000011;
enum SUBLANG_SPANISH_HONDURAS = 0x00000012;
enum SUBLANG_SPANISH_NICARAGUA = 0x00000013;
enum SUBLANG_SPANISH_PUERTO_RICO = 0x00000014;
enum SUBLANG_SPANISH_US = 0x00000015;
enum SUBLANG_SWAHILI_KENYA = 0x00000001;
enum SUBLANG_SWEDISH = 0x00000001;
enum SUBLANG_SWEDISH_FINLAND = 0x00000002;
enum SUBLANG_SYRIAC_SYRIA = 0x00000001;
enum SUBLANG_TAJIK_TAJIKISTAN = 0x00000001;
enum SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 0x00000002;
enum SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH = 0x00000004;
enum SUBLANG_TAMIL_INDIA = 0x00000001;
enum SUBLANG_TAMIL_SRI_LANKA = 0x00000002;
enum SUBLANG_TATAR_RUSSIA = 0x00000001;
enum SUBLANG_TELUGU_INDIA = 0x00000001;
enum SUBLANG_THAI_THAILAND = 0x00000001;
enum SUBLANG_TIBETAN_PRC = 0x00000001;
enum SUBLANG_TIGRIGNA_ERITREA = 0x00000002;
enum SUBLANG_TIGRINYA_ERITREA = 0x00000002;
enum SUBLANG_TIGRINYA_ETHIOPIA = 0x00000001;
enum SUBLANG_TSWANA_BOTSWANA = 0x00000002;
enum SUBLANG_TSWANA_SOUTH_AFRICA = 0x00000001;
enum SUBLANG_TURKISH_TURKEY = 0x00000001;
enum SUBLANG_TURKMEN_TURKMENISTAN = 0x00000001;
enum SUBLANG_UIGHUR_PRC = 0x00000001;
enum SUBLANG_UKRAINIAN_UKRAINE = 0x00000001;
enum SUBLANG_UPPER_SORBIAN_GERMANY = 0x00000001;
enum SUBLANG_URDU_PAKISTAN = 0x00000001;
enum SUBLANG_URDU_INDIA = 0x00000002;
enum SUBLANG_UZBEK_LATIN = 0x00000001;
enum SUBLANG_UZBEK_CYRILLIC = 0x00000002;
enum SUBLANG_VALENCIAN_VALENCIA = 0x00000002;
enum SUBLANG_VIETNAMESE_VIETNAM = 0x00000001;
enum SUBLANG_WELSH_UNITED_KINGDOM = 0x00000001;
enum SUBLANG_WOLOF_SENEGAL = 0x00000001;
enum SUBLANG_XHOSA_SOUTH_AFRICA = 0x00000001;
enum SUBLANG_YAKUT_RUSSIA = 0x00000001;
enum SUBLANG_YI_PRC = 0x00000001;
enum SUBLANG_YORUBA_NIGERIA = 0x00000001;
enum SUBLANG_ZULU_SOUTH_AFRICA = 0x00000001;
enum SORT_DEFAULT = 0x00000000;
enum SORT_INVARIANT_MATH = 0x00000001;
enum SORT_JAPANESE_XJIS = 0x00000000;
enum SORT_JAPANESE_UNICODE = 0x00000001;
enum SORT_JAPANESE_RADICALSTROKE = 0x00000004;
enum SORT_CHINESE_BIG5 = 0x00000000;
enum SORT_CHINESE_PRCP = 0x00000000;
enum SORT_CHINESE_UNICODE = 0x00000001;
enum SORT_CHINESE_PRC = 0x00000002;
enum SORT_CHINESE_BOPOMOFO = 0x00000003;
enum SORT_CHINESE_RADICALSTROKE = 0x00000004;
enum SORT_KOREAN_KSC = 0x00000000;
enum SORT_KOREAN_UNICODE = 0x00000001;
enum SORT_GERMAN_PHONE_BOOK = 0x00000001;
enum SORT_HUNGARIAN_DEFAULT = 0x00000000;
enum SORT_HUNGARIAN_TECHNICAL = 0x00000001;
enum SORT_GEORGIAN_TRADITIONAL = 0x00000000;
enum SORT_GEORGIAN_MODERN = 0x00000001;
enum NLS_VALID_LOCALE_MASK = 0x000fffff;
enum LOCALE_NAME_MAX_LENGTH = 0x00000055;
enum LOCALE_TRANSIENT_KEYBOARD1 = 0x00002000;
enum LOCALE_TRANSIENT_KEYBOARD2 = 0x00002400;
enum LOCALE_TRANSIENT_KEYBOARD3 = 0x00002800;
enum LOCALE_TRANSIENT_KEYBOARD4 = 0x00002c00;
enum MAXIMUM_WAIT_OBJECTS = 0x00000040;
enum MAXIMUM_SUSPEND_COUNT = 0x0000007f;
enum PF_TEMPORAL_LEVEL_1 = 0x00000001;
enum PF_TEMPORAL_LEVEL_2 = 0x00000002;
enum PF_TEMPORAL_LEVEL_3 = 0x00000003;
enum PF_NON_TEMPORAL_LEVEL_ALL = 0x00000000;
enum EXCEPTION_READ_FAULT = 0x00000000;
enum EXCEPTION_WRITE_FAULT = 0x00000001;
enum EXCEPTION_EXECUTE_FAULT = 0x00000008;
enum CONTEXT_AMD64 = 0x00100000;
enum CONTEXT_KERNEL_DEBUGGER = 0x04000000;
enum CONTEXT_EXCEPTION_ACTIVE = 0x08000000;
enum CONTEXT_SERVICE_ACTIVE = 0x10000000;
enum CONTEXT_EXCEPTION_REQUEST = 0x40000000;
enum CONTEXT_EXCEPTION_REPORTING = 0xffffffff80000000;
enum CONTEXT_UNWOUND_TO_CALL = 0x20000000;
enum INITIAL_MXCSR = 0x00001f80;
enum INITIAL_FPCSR = 0x0000027f;
enum RUNTIME_FUNCTION_INDIRECT = 0x00000001;
enum UNW_FLAG_NO_EPILOGUE = 0x80000000;
enum UNWIND_CHAIN_LIMIT = 0x00000020;
enum OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME = "OutOfProcessFunctionTableCallback";
enum CONTEXT_ARM = 0x00200000;
enum INITIAL_CPSR = 0x00000010;
enum INITIAL_FPSCR = 0x00000000;
enum ARM_MAX_BREAKPOINTS = 0x00000008;
enum ARM_MAX_WATCHPOINTS = 0x00000001;
enum ARM64_PREFETCH_PLD = 0x00000000;
enum ARM64_PREFETCH_PLI = 0x00000008;
enum ARM64_PREFETCH_PST = 0x00000010;
enum ARM64_PREFETCH_L1 = 0x00000000;
enum ARM64_PREFETCH_L2 = 0x00000002;
enum ARM64_PREFETCH_L3 = 0x00000004;
enum ARM64_PREFETCH_KEEP = 0x00000000;
enum ARM64_PREFETCH_STRM = 0x00000001;
enum ARM64_MULT_INTRINSICS_SUPPORTED = 0x00000001;
enum CONTEXT_ARM64 = 0x00400000;
enum CONTEXT_ARM64_UNWOUND_TO_CALL = 0x20000000;
enum CONTEXT_ARM64_RET_TO_GUEST = 0x04000000;
enum CONTEXT_RET_TO_GUEST = 0x04000000;
enum ARM64_MAX_BREAKPOINTS = 0x00000008;
enum ARM64_MAX_WATCHPOINTS = 0x00000002;
enum NONVOL_INT_NUMREG_ARM64 = 0x0000000b;
enum NONVOL_FP_NUMREG_ARM64 = 0x00000008;
enum BREAK_DEBUG_BASE = 0x00080000;
enum ASSERT_BREAKPOINT = 0x00080003;
enum SIZE_OF_80387_REGISTERS = 0x00000050;
enum CONTEXT_i386 = 0x00010000;
enum CONTEXT_i486 = 0x00010000;
enum MAXIMUM_SUPPORTED_EXTENSION = 0x00000200;
enum EXCEPTION_NONCONTINUABLE = 0x00000001;
enum EXCEPTION_UNWINDING = 0x00000002;
enum EXCEPTION_EXIT_UNWIND = 0x00000004;
enum EXCEPTION_STACK_INVALID = 0x00000008;
enum EXCEPTION_NESTED_CALL = 0x00000010;
enum EXCEPTION_TARGET_UNWIND = 0x00000020;
enum EXCEPTION_COLLIDED_UNWIND = 0x00000040;
enum EXCEPTION_SOFTWARE_ORIGINATE = 0x00000080;
enum EXCEPTION_MAXIMUM_PARAMETERS = 0x0000000f;
enum ACCESS_SYSTEM_SECURITY = 0x01000000;
enum MAXIMUM_ALLOWED = 0x02000000;
enum GENERIC_READ = 0x80000000;
enum GENERIC_WRITE = 0x40000000;
enum GENERIC_EXECUTE = 0x20000000;
enum GENERIC_ALL = 0x10000000;
enum SID_REVISION = 0x00000001;
enum SID_MAX_SUB_AUTHORITIES = 0x0000000f;
enum SID_RECOMMENDED_SUB_AUTHORITIES = 0x00000001;
enum SID_HASH_SIZE = 0x00000020;
enum SECURITY_NULL_RID = 0x00000000;
enum SECURITY_WORLD_RID = 0x00000000;
enum SECURITY_LOCAL_RID = 0x00000000;
enum SECURITY_LOCAL_LOGON_RID = 0x00000001;
enum SECURITY_CREATOR_OWNER_RID = 0x00000000;
enum SECURITY_CREATOR_GROUP_RID = 0x00000001;
enum SECURITY_CREATOR_OWNER_SERVER_RID = 0x00000002;
enum SECURITY_CREATOR_GROUP_SERVER_RID = 0x00000003;
enum SECURITY_CREATOR_OWNER_RIGHTS_RID = 0x00000004;
enum SECURITY_DIALUP_RID = 0x00000001;
enum SECURITY_NETWORK_RID = 0x00000002;
enum SECURITY_BATCH_RID = 0x00000003;
enum SECURITY_INTERACTIVE_RID = 0x00000004;
enum SECURITY_LOGON_IDS_RID = 0x00000005;
enum SECURITY_LOGON_IDS_RID_COUNT = 0x00000003;
enum SECURITY_SERVICE_RID = 0x00000006;
enum SECURITY_ANONYMOUS_LOGON_RID = 0x00000007;
enum SECURITY_PROXY_RID = 0x00000008;
enum SECURITY_ENTERPRISE_CONTROLLERS_RID = 0x00000009;
enum SECURITY_SERVER_LOGON_RID = 0x00000009;
enum SECURITY_PRINCIPAL_SELF_RID = 0x0000000a;
enum SECURITY_AUTHENTICATED_USER_RID = 0x0000000b;
enum SECURITY_RESTRICTED_CODE_RID = 0x0000000c;
enum SECURITY_TERMINAL_SERVER_RID = 0x0000000d;
enum SECURITY_REMOTE_LOGON_RID = 0x0000000e;
enum SECURITY_THIS_ORGANIZATION_RID = 0x0000000f;
enum SECURITY_IUSER_RID = 0x00000011;
enum SECURITY_LOCAL_SYSTEM_RID = 0x00000012;
enum SECURITY_LOCAL_SERVICE_RID = 0x00000013;
enum SECURITY_NETWORK_SERVICE_RID = 0x00000014;
enum SECURITY_NT_NON_UNIQUE = 0x00000015;
enum SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 0x00000003;
enum SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 0x00000016;
enum SECURITY_BUILTIN_DOMAIN_RID = 0x00000020;
enum SECURITY_WRITE_RESTRICTED_CODE_RID = 0x00000021;
enum SECURITY_PACKAGE_BASE_RID = 0x00000040;
enum SECURITY_PACKAGE_RID_COUNT = 0x00000002;
enum SECURITY_PACKAGE_NTLM_RID = 0x0000000a;
enum SECURITY_PACKAGE_SCHANNEL_RID = 0x0000000e;
enum SECURITY_PACKAGE_DIGEST_RID = 0x00000015;
enum SECURITY_CRED_TYPE_BASE_RID = 0x00000041;
enum SECURITY_CRED_TYPE_RID_COUNT = 0x00000002;
enum SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 0x00000001;
enum SECURITY_MIN_BASE_RID = 0x00000050;
enum SECURITY_SERVICE_ID_BASE_RID = 0x00000050;
enum SECURITY_SERVICE_ID_RID_COUNT = 0x00000006;
enum SECURITY_RESERVED_ID_BASE_RID = 0x00000051;
enum SECURITY_APPPOOL_ID_BASE_RID = 0x00000052;
enum SECURITY_APPPOOL_ID_RID_COUNT = 0x00000006;
enum SECURITY_VIRTUALSERVER_ID_BASE_RID = 0x00000053;
enum SECURITY_VIRTUALSERVER_ID_RID_COUNT = 0x00000006;
enum SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 0x00000054;
enum SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 0x00000006;
enum SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 0x00000055;
enum SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 0x00000006;
enum SECURITY_WMIHOST_ID_BASE_RID = 0x00000056;
enum SECURITY_WMIHOST_ID_RID_COUNT = 0x00000006;
enum SECURITY_TASK_ID_BASE_RID = 0x00000057;
enum SECURITY_NFS_ID_BASE_RID = 0x00000058;
enum SECURITY_COM_ID_BASE_RID = 0x00000059;
enum SECURITY_WINDOW_MANAGER_BASE_RID = 0x0000005a;
enum SECURITY_RDV_GFX_BASE_RID = 0x0000005b;
enum SECURITY_DASHOST_ID_BASE_RID = 0x0000005c;
enum SECURITY_DASHOST_ID_RID_COUNT = 0x00000006;
enum SECURITY_USERMANAGER_ID_BASE_RID = 0x0000005d;
enum SECURITY_USERMANAGER_ID_RID_COUNT = 0x00000006;
enum SECURITY_WINRM_ID_BASE_RID = 0x0000005e;
enum SECURITY_WINRM_ID_RID_COUNT = 0x00000006;
enum SECURITY_CCG_ID_BASE_RID = 0x0000005f;
enum SECURITY_UMFD_BASE_RID = 0x00000060;
enum SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 0x00000006;
enum SECURITY_MAX_BASE_RID = 0x0000006f;
enum SECURITY_MAX_ALWAYS_FILTERED = 0x000003e7;
enum SECURITY_MIN_NEVER_FILTERED = 0x000003e8;
enum SECURITY_OTHER_ORGANIZATION_RID = 0x000003e8;
enum SECURITY_WINDOWSMOBILE_ID_BASE_RID = 0x00000070;
enum SECURITY_INSTALLER_GROUP_CAPABILITY_BASE = 0x00000020;
enum SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT = 0x00000009;
enum SECURITY_INSTALLER_CAPABILITY_RID_COUNT = 0x0000000a;
enum SECURITY_LOCAL_ACCOUNT_RID = 0x00000071;
enum SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID = 0x00000072;
enum DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = 0x000001f0;
enum DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS = 0x000001f1;
enum DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = 0x000001f2;
enum FOREST_USER_RID_MAX = 0x000001f3;
enum DOMAIN_USER_RID_ADMIN = 0x000001f4;
enum DOMAIN_USER_RID_GUEST = 0x000001f5;
enum DOMAIN_USER_RID_KRBTGT = 0x000001f6;
enum DOMAIN_USER_RID_DEFAULT_ACCOUNT = 0x000001f7;
enum DOMAIN_USER_RID_WDAG_ACCOUNT = 0x000001f8;
enum DOMAIN_USER_RID_MAX = 0x000003e7;
enum DOMAIN_GROUP_RID_ADMINS = 0x00000200;
enum DOMAIN_GROUP_RID_USERS = 0x00000201;
enum DOMAIN_GROUP_RID_GUESTS = 0x00000202;
enum DOMAIN_GROUP_RID_COMPUTERS = 0x00000203;
enum DOMAIN_GROUP_RID_CONTROLLERS = 0x00000204;
enum DOMAIN_GROUP_RID_CERT_ADMINS = 0x00000205;
enum DOMAIN_GROUP_RID_SCHEMA_ADMINS = 0x00000206;
enum DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = 0x00000207;
enum DOMAIN_GROUP_RID_POLICY_ADMINS = 0x00000208;
enum DOMAIN_GROUP_RID_READONLY_CONTROLLERS = 0x00000209;
enum DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS = 0x0000020a;
enum DOMAIN_GROUP_RID_CDC_RESERVED = 0x0000020c;
enum DOMAIN_GROUP_RID_PROTECTED_USERS = 0x0000020d;
enum DOMAIN_GROUP_RID_KEY_ADMINS = 0x0000020e;
enum DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS = 0x0000020f;
enum DOMAIN_ALIAS_RID_ADMINS = 0x00000220;
enum DOMAIN_ALIAS_RID_USERS = 0x00000221;
enum DOMAIN_ALIAS_RID_GUESTS = 0x00000222;
enum DOMAIN_ALIAS_RID_POWER_USERS = 0x00000223;
enum DOMAIN_ALIAS_RID_ACCOUNT_OPS = 0x00000224;
enum DOMAIN_ALIAS_RID_SYSTEM_OPS = 0x00000225;
enum DOMAIN_ALIAS_RID_PRINT_OPS = 0x00000226;
enum DOMAIN_ALIAS_RID_BACKUP_OPS = 0x00000227;
enum DOMAIN_ALIAS_RID_REPLICATOR = 0x00000228;
enum DOMAIN_ALIAS_RID_RAS_SERVERS = 0x00000229;
enum DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = 0x0000022a;
enum DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = 0x0000022b;
enum DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = 0x0000022c;
enum DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 0x0000022d;
enum DOMAIN_ALIAS_RID_MONITORING_USERS = 0x0000022e;
enum DOMAIN_ALIAS_RID_LOGGING_USERS = 0x0000022f;
enum DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = 0x00000230;
enum DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = 0x00000231;
enum DOMAIN_ALIAS_RID_DCOM_USERS = 0x00000232;
enum DOMAIN_ALIAS_RID_IUSERS = 0x00000238;
enum DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = 0x00000239;
enum DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = 0x0000023b;
enum DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 0x0000023c;
enum DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = 0x0000023d;
enum DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = 0x0000023e;
enum DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS = 0x0000023f;
enum DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS = 0x00000240;
enum DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS = 0x00000241;
enum DOMAIN_ALIAS_RID_HYPER_V_ADMINS = 0x00000242;
enum DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS = 0x00000243;
enum DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS = 0x00000244;
enum DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT = 0x00000245;
enum DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS = 0x00000246;
enum DOMAIN_ALIAS_RID_DEVICE_OWNERS = 0x00000247;
enum SECURITY_APP_PACKAGE_BASE_RID = 0x00000002;
enum SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT = 0x00000002;
enum SECURITY_APP_PACKAGE_RID_COUNT = 0x00000008;
enum SECURITY_CAPABILITY_BASE_RID = 0x00000003;
enum SECURITY_CAPABILITY_APP_RID = 0x0000000000000400;
enum SECURITY_BUILTIN_CAPABILITY_RID_COUNT = 0x00000002;
enum SECURITY_CAPABILITY_RID_COUNT = 0x00000005;
enum SECURITY_PARENT_PACKAGE_RID_COUNT = 0x00000008;
enum SECURITY_CHILD_PACKAGE_RID_COUNT = 0x0000000c;
enum SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE = 0x00000001;
enum SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE = 0x00000002;
enum SECURITY_CAPABILITY_INTERNET_CLIENT = 0x00000001;
enum SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = 0x00000002;
enum SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 0x00000003;
enum SECURITY_CAPABILITY_PICTURES_LIBRARY = 0x00000004;
enum SECURITY_CAPABILITY_VIDEOS_LIBRARY = 0x00000005;
enum SECURITY_CAPABILITY_MUSIC_LIBRARY = 0x00000006;
enum SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = 0x00000007;
enum SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = 0x00000008;
enum SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = 0x00000009;
enum SECURITY_CAPABILITY_REMOVABLE_STORAGE = 0x0000000a;
enum SECURITY_CAPABILITY_APPOINTMENTS = 0x0000000b;
enum SECURITY_CAPABILITY_CONTACTS = 0x0000000c;
enum SECURITY_CAPABILITY_INTERNET_EXPLORER = 0x00001000;
enum SECURITY_MANDATORY_UNTRUSTED_RID = 0x00000000;
enum SECURITY_MANDATORY_LOW_RID = 0x00001000;
enum SECURITY_MANDATORY_MEDIUM_RID = 0x00002000;
enum SECURITY_MANDATORY_MEDIUM_PLUS_RID = 0x00002100;
enum SECURITY_MANDATORY_HIGH_RID = 0x00003000;
enum SECURITY_MANDATORY_SYSTEM_RID = 0x00004000;
enum SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 0x00005000;
enum SECURITY_MANDATORY_MAXIMUM_USER_RID = 0x00004000;
enum SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = 0x00000001;
enum SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = 0x00000001;
enum SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = 0x00000002;
enum SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID = 0x00000003;
enum SECURITY_AUTHENTICATION_KEY_TRUST_RID = 0x00000004;
enum SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID = 0x00000005;
enum SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID = 0x00000006;
enum SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = 0x00000002;
enum SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID = 0x00000400;
enum SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID = 0x00000200;
enum SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID = 0x00000000;
enum SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID = 0x00002000;
enum SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID = 0x00001000;
enum SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID = 0x00000800;
enum SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID = 0x00000600;
enum SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID = 0x00000400;
enum SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID = 0x00000000;
enum SECURITY_TRUSTED_INSTALLER_RID1 = 0x38fb89b5;
enum SECURITY_TRUSTED_INSTALLER_RID2 = 0xcbc28419;
enum SECURITY_TRUSTED_INSTALLER_RID3 = 0x6d236c5c;
enum SECURITY_TRUSTED_INSTALLER_RID4 = 0x6e770057;
enum SECURITY_TRUSTED_INSTALLER_RID5 = 0x876402c0;
enum SE_GROUP_MANDATORY = 0x00000001;
enum SE_GROUP_ENABLED_BY_DEFAULT = 0x00000002;
enum SE_GROUP_ENABLED = 0x00000004;
enum SE_GROUP_OWNER = 0x00000008;
enum SE_GROUP_USE_FOR_DENY_ONLY = 0x00000010;
enum SE_GROUP_INTEGRITY = 0x00000020;
enum SE_GROUP_INTEGRITY_ENABLED = 0x00000040;
enum SE_GROUP_LOGON_ID = 0xffffffffc0000000;
enum SE_GROUP_RESOURCE = 0x20000000;
enum ACL_REVISION1 = 0x00000001;
enum ACL_REVISION2 = 0x00000002;
enum ACL_REVISION3 = 0x00000003;
enum ACL_REVISION4 = 0x00000004;
enum MAX_ACL_REVISION = 0x00000004;
enum ACCESS_MIN_MS_ACE_TYPE = 0x00000000;
enum ACCESS_ALLOWED_ACE_TYPE = 0x00000000;
enum ACCESS_DENIED_ACE_TYPE = 0x00000001;
enum SYSTEM_AUDIT_ACE_TYPE = 0x00000002;
enum SYSTEM_ALARM_ACE_TYPE = 0x00000003;
enum ACCESS_MAX_MS_V2_ACE_TYPE = 0x00000003;
enum ACCESS_ALLOWED_COMPOUND_ACE_TYPE = 0x00000004;
enum ACCESS_MAX_MS_V3_ACE_TYPE = 0x00000004;
enum ACCESS_MIN_MS_OBJECT_ACE_TYPE = 0x00000005;
enum ACCESS_ALLOWED_OBJECT_ACE_TYPE = 0x00000005;
enum ACCESS_DENIED_OBJECT_ACE_TYPE = 0x00000006;
enum SYSTEM_AUDIT_OBJECT_ACE_TYPE = 0x00000007;
enum SYSTEM_ALARM_OBJECT_ACE_TYPE = 0x00000008;
enum ACCESS_MAX_MS_OBJECT_ACE_TYPE = 0x00000008;
enum ACCESS_MAX_MS_V4_ACE_TYPE = 0x00000008;
enum ACCESS_MAX_MS_ACE_TYPE = 0x00000008;
enum ACCESS_ALLOWED_CALLBACK_ACE_TYPE = 0x00000009;
enum ACCESS_DENIED_CALLBACK_ACE_TYPE = 0x0000000a;
enum ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = 0x0000000b;
enum ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = 0x0000000c;
enum SYSTEM_AUDIT_CALLBACK_ACE_TYPE = 0x0000000d;
enum SYSTEM_ALARM_CALLBACK_ACE_TYPE = 0x0000000e;
enum SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = 0x0000000f;
enum SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = 0x00000010;
enum SYSTEM_MANDATORY_LABEL_ACE_TYPE = 0x00000011;
enum SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE = 0x00000012;
enum SYSTEM_SCOPED_POLICY_ID_ACE_TYPE = 0x00000013;
enum SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE = 0x00000014;
enum SYSTEM_ACCESS_FILTER_ACE_TYPE = 0x00000015;
enum ACCESS_MAX_MS_V5_ACE_TYPE = 0x00000015;
enum VALID_INHERIT_FLAGS = 0x0000001f;
enum CRITICAL_ACE_FLAG = 0x00000020;
enum TRUST_PROTECTED_FILTER_ACE_FLAG = 0x00000040;
enum SYSTEM_MANDATORY_LABEL_NO_WRITE_UP = 0x00000001;
enum SYSTEM_MANDATORY_LABEL_NO_READ_UP = 0x00000002;
enum SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP = 0x00000004;
enum SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK = 0x00ffffff;
enum SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK = 0xffffffff;
enum SYSTEM_ACCESS_FILTER_VALID_MASK = 0x00ffffff;
enum SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK = 0xffffffff;
enum SECURITY_DESCRIPTOR_REVISION = 0x00000001;
enum SECURITY_DESCRIPTOR_REVISION1 = 0x00000001;
enum SE_OWNER_DEFAULTED = 0x00000001;
enum SE_GROUP_DEFAULTED = 0x00000002;
enum SE_DACL_PRESENT = 0x00000004;
enum SE_DACL_DEFAULTED = 0x00000008;
enum SE_SACL_PRESENT = 0x00000010;
enum SE_SACL_DEFAULTED = 0x00000020;
enum SE_DACL_AUTO_INHERIT_REQ = 0x00000100;
enum SE_SACL_AUTO_INHERIT_REQ = 0x00000200;
enum SE_DACL_AUTO_INHERITED = 0x00000400;
enum SE_SACL_AUTO_INHERITED = 0x00000800;
enum SE_DACL_PROTECTED = 0x00001000;
enum SE_SACL_PROTECTED = 0x00002000;
enum SE_RM_CONTROL_VALID = 0x00004000;
enum SE_SELF_RELATIVE = 0x00008000;
enum ACCESS_OBJECT_GUID = 0x00000000;
enum ACCESS_PROPERTY_SET_GUID = 0x00000001;
enum ACCESS_PROPERTY_GUID = 0x00000002;
enum ACCESS_MAX_LEVEL = 0x00000004;
enum AUDIT_ALLOW_NO_PRIVILEGE = 0x00000001;
enum ACCESS_DS_SOURCE_A = "DS";
enum ACCESS_DS_SOURCE_W = "DS";
enum ACCESS_DS_OBJECT_TYPE_NAME_A = "Directory Service Object";
enum ACCESS_DS_OBJECT_TYPE_NAME_W = "Directory Service Object";
enum PRIVILEGE_SET_ALL_NECESSARY = 0x00000001;
enum ACCESS_REASON_TYPE_MASK = 0x00ff0000;
enum ACCESS_REASON_DATA_MASK = 0x0000ffff;
enum ACCESS_REASON_STAGING_MASK = 0x80000000;
enum ACCESS_REASON_EXDATA_MASK = 0x7f000000;
enum SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE = 0x00000001;
enum SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE = 0x00000002;
enum SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE = 0x00000004;
enum SE_SECURITY_DESCRIPTOR_VALID_FLAGS = 0x00000007;
enum SE_ACCESS_CHECK_FLAG_NO_LEARNING_MODE_LOGGING = 0x00000008;
enum SE_ACCESS_CHECK_VALID_FLAGS = 0x00000008;
enum SE_CREATE_TOKEN_NAME = "SeCreateTokenPrivilege";
enum SE_ASSIGNPRIMARYTOKEN_NAME = "SeAssignPrimaryTokenPrivilege";
enum SE_LOCK_MEMORY_NAME = "SeLockMemoryPrivilege";
enum SE_INCREASE_QUOTA_NAME = "SeIncreaseQuotaPrivilege";
enum SE_UNSOLICITED_INPUT_NAME = "SeUnsolicitedInputPrivilege";
enum SE_MACHINE_ACCOUNT_NAME = "SeMachineAccountPrivilege";
enum SE_TCB_NAME = "SeTcbPrivilege";
enum SE_SECURITY_NAME = "SeSecurityPrivilege";
enum SE_TAKE_OWNERSHIP_NAME = "SeTakeOwnershipPrivilege";
enum SE_LOAD_DRIVER_NAME = "SeLoadDriverPrivilege";
enum SE_SYSTEM_PROFILE_NAME = "SeSystemProfilePrivilege";
enum SE_SYSTEMTIME_NAME = "SeSystemtimePrivilege";
enum SE_PROF_SINGLE_PROCESS_NAME = "SeProfileSingleProcessPrivilege";
enum SE_INC_BASE_PRIORITY_NAME = "SeIncreaseBasePriorityPrivilege";
enum SE_CREATE_PAGEFILE_NAME = "SeCreatePagefilePrivilege";
enum SE_CREATE_PERMANENT_NAME = "SeCreatePermanentPrivilege";
enum SE_BACKUP_NAME = "SeBackupPrivilege";
enum SE_RESTORE_NAME = "SeRestorePrivilege";
enum SE_SHUTDOWN_NAME = "SeShutdownPrivilege";
enum SE_DEBUG_NAME = "SeDebugPrivilege";
enum SE_AUDIT_NAME = "SeAuditPrivilege";
enum SE_SYSTEM_ENVIRONMENT_NAME = "SeSystemEnvironmentPrivilege";
enum SE_CHANGE_NOTIFY_NAME = "SeChangeNotifyPrivilege";
enum SE_REMOTE_SHUTDOWN_NAME = "SeRemoteShutdownPrivilege";
enum SE_UNDOCK_NAME = "SeUndockPrivilege";
enum SE_SYNC_AGENT_NAME = "SeSyncAgentPrivilege";
enum SE_ENABLE_DELEGATION_NAME = "SeEnableDelegationPrivilege";
enum SE_MANAGE_VOLUME_NAME = "SeManageVolumePrivilege";
enum SE_IMPERSONATE_NAME = "SeImpersonatePrivilege";
enum SE_CREATE_GLOBAL_NAME = "SeCreateGlobalPrivilege";
enum SE_TRUSTED_CREDMAN_ACCESS_NAME = "SeTrustedCredManAccessPrivilege";
enum SE_RELABEL_NAME = "SeRelabelPrivilege";
enum SE_INC_WORKING_SET_NAME = "SeIncreaseWorkingSetPrivilege";
enum SE_TIME_ZONE_NAME = "SeTimeZonePrivilege";
enum SE_CREATE_SYMBOLIC_LINK_NAME = "SeCreateSymbolicLinkPrivilege";
enum SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME = "SeDelegateSessionUserImpersonatePrivilege";
enum SE_ACTIVATE_AS_USER_CAPABILITY = "activateAsUser";
enum SE_CONSTRAINED_IMPERSONATION_CAPABILITY = "constrainedImpersonation";
enum SE_SESSION_IMPERSONATION_CAPABILITY = "sessionImpersonation";
enum SE_MUMA_CAPABILITY = "muma";
enum SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY = "developmentModeNetwork";
enum SE_PERMISSIVE_LEARNING_MODE_CAPABILITY = "permissiveLearningMode";
enum POLICY_AUDIT_SUBCATEGORY_COUNT = 0x0000003b;
enum TOKEN_SOURCE_LENGTH = 0x00000008;
enum CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = 0x00000000;
enum CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS = 0xffff0000;
enum CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 = 0x00000001;
enum CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION = 0x00000001;
enum PROCESS_TRUST_LABEL_SECURITY_INFORMATION = 0x00000080;
enum ACCESS_FILTER_SECURITY_INFORMATION = 0x00000100;
enum SE_SIGNING_LEVEL_UNCHECKED = 0x00000000;
enum SE_SIGNING_LEVEL_UNSIGNED = 0x00000001;
enum SE_SIGNING_LEVEL_ENTERPRISE = 0x00000002;
enum SE_SIGNING_LEVEL_CUSTOM_1 = 0x00000003;
enum SE_SIGNING_LEVEL_DEVELOPER = 0x00000003;
enum SE_SIGNING_LEVEL_AUTHENTICODE = 0x00000004;
enum SE_SIGNING_LEVEL_CUSTOM_2 = 0x00000005;
enum SE_SIGNING_LEVEL_STORE = 0x00000006;
enum SE_SIGNING_LEVEL_CUSTOM_3 = 0x00000007;
enum SE_SIGNING_LEVEL_ANTIMALWARE = 0x00000007;
enum SE_SIGNING_LEVEL_MICROSOFT = 0x00000008;
enum SE_SIGNING_LEVEL_CUSTOM_4 = 0x00000009;
enum SE_SIGNING_LEVEL_CUSTOM_5 = 0x0000000a;
enum SE_SIGNING_LEVEL_DYNAMIC_CODEGEN = 0x0000000b;
enum SE_SIGNING_LEVEL_WINDOWS = 0x0000000c;
enum SE_SIGNING_LEVEL_CUSTOM_7 = 0x0000000d;
enum SE_SIGNING_LEVEL_WINDOWS_TCB = 0x0000000e;
enum SE_SIGNING_LEVEL_CUSTOM_6 = 0x0000000f;
enum SE_LEARNING_MODE_FLAG_PERMISSIVE = 0x00000001;
enum JOB_OBJECT_ASSIGN_PROCESS = 0x00000001;
enum JOB_OBJECT_SET_ATTRIBUTES = 0x00000002;
enum JOB_OBJECT_QUERY = 0x00000004;
enum JOB_OBJECT_TERMINATE = 0x00000008;
enum JOB_OBJECT_SET_SECURITY_ATTRIBUTES = 0x00000010;
enum JOB_OBJECT_IMPERSONATE = 0x00000020;
enum FLS_MAXIMUM_AVAILABLE = 0x00000ff0;
enum TLS_MINIMUM_AVAILABLE = 0x00000040;
enum THREAD_DYNAMIC_CODE_ALLOW = 0x00000001;
enum THREAD_BASE_PRIORITY_LOWRT = 0x0000000f;
enum THREAD_BASE_PRIORITY_MAX = 0x00000002;
enum THREAD_BASE_PRIORITY_MIN = 0xfffffffffffffffe;
enum THREAD_BASE_PRIORITY_IDLE = 0xfffffffffffffff1;
enum COMPONENT_KTM = 0x00000001;
enum COMPONENT_VALID_FLAGS = 0x00000001;
enum MEMORY_PRIORITY_LOWEST = 0x00000000;
enum DYNAMIC_EH_CONTINUATION_TARGET_ADD = 0x00000001;
enum DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED = 0x00000002;
enum DYNAMIC_ENFORCED_ADDRESS_RANGE_ADD = 0x00000001;
enum DYNAMIC_ENFORCED_ADDRESS_RANGE_PROCESSED = 0x00000002;
enum QUOTA_LIMITS_HARDWS_MIN_ENABLE = 0x00000001;
enum QUOTA_LIMITS_HARDWS_MIN_DISABLE = 0x00000002;
enum QUOTA_LIMITS_HARDWS_MAX_ENABLE = 0x00000004;
enum QUOTA_LIMITS_HARDWS_MAX_DISABLE = 0x00000008;
enum QUOTA_LIMITS_USE_DEFAULT_LIMITS = 0x00000010;
enum MAX_HW_COUNTERS = 0x00000010;
enum THREAD_PROFILING_FLAG_DISPATCH = 0x00000001;
enum JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG = 0x00000040;
enum JOB_OBJECT_MSG_END_OF_JOB_TIME = 0x00000001;
enum JOB_OBJECT_MSG_END_OF_PROCESS_TIME = 0x00000002;
enum JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT = 0x00000003;
enum JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO = 0x00000004;
enum JOB_OBJECT_MSG_NEW_PROCESS = 0x00000006;
enum JOB_OBJECT_MSG_EXIT_PROCESS = 0x00000007;
enum JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS = 0x00000008;
enum JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT = 0x00000009;
enum JOB_OBJECT_MSG_JOB_MEMORY_LIMIT = 0x0000000a;
enum JOB_OBJECT_MSG_NOTIFICATION_LIMIT = 0x0000000b;
enum JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT = 0x0000000c;
enum JOB_OBJECT_MSG_SILO_TERMINATED = 0x0000000d;
enum JOB_OBJECT_MSG_MINIMUM = 0x00000001;
enum JOB_OBJECT_MSG_MAXIMUM = 0x0000000d;
enum JOB_OBJECT_UILIMIT_ALL = 0x000000ff;
enum JOB_OBJECT_UI_VALID_FLAGS = 0x000000ff;
enum MEMORY_PARTITION_QUERY_ACCESS = 0x00000001;
enum MEMORY_PARTITION_MODIFY_ACCESS = 0x00000002;
enum MUTANT_QUERY_STATE = 0x00000001;
enum TIME_ZONE_ID_UNKNOWN = 0x00000000;
enum TIME_ZONE_ID_STANDARD = 0x00000001;
enum TIME_ZONE_ID_DAYLIGHT = 0x00000002;
enum LTP_PC_SMT = 0x00000001;
enum CACHE_FULLY_ASSOCIATIVE = 0x000000ff;
enum PROCESSOR_INTEL_386 = 0x00000182;
enum PROCESSOR_INTEL_486 = 0x000001e6;
enum PROCESSOR_INTEL_PENTIUM = 0x0000024a;
enum PROCESSOR_INTEL_IA64 = 0x00000898;
enum PROCESSOR_AMD_X8664 = 0x000021d8;
enum PROCESSOR_MIPS_R4000 = 0x00000fa0;
enum PROCESSOR_ALPHA_21064 = 0x00005248;
enum PROCESSOR_PPC_601 = 0x00000259;
enum PROCESSOR_PPC_603 = 0x0000025b;
enum PROCESSOR_PPC_604 = 0x0000025c;
enum PROCESSOR_PPC_620 = 0x0000026c;
enum PROCESSOR_HITACHI_SH3 = 0x00002713;
enum PROCESSOR_HITACHI_SH3E = 0x00002714;
enum PROCESSOR_HITACHI_SH4 = 0x00002715;
enum PROCESSOR_MOTOROLA_821 = 0x00000335;
enum PROCESSOR_SHx_SH3 = 0x00000067;
enum PROCESSOR_SHx_SH4 = 0x00000068;
enum PROCESSOR_STRONGARM = 0x00000a11;
enum PROCESSOR_ARM720 = 0x00000720;
enum PROCESSOR_ARM820 = 0x00000820;
enum PROCESSOR_ARM920 = 0x00000920;
enum PROCESSOR_ARM_7TDMI = 0x00011171;
enum PROCESSOR_OPTIL = 0x0000494f;
enum PROCESSOR_ARCHITECTURE_MIPS = 0x00000001;
enum PROCESSOR_ARCHITECTURE_ALPHA = 0x00000002;
enum PROCESSOR_ARCHITECTURE_PPC = 0x00000003;
enum PROCESSOR_ARCHITECTURE_SHX = 0x00000004;
enum PROCESSOR_ARCHITECTURE_ALPHA64 = 0x00000007;
enum PROCESSOR_ARCHITECTURE_MSIL = 0x00000008;
enum PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 0x0000000a;
enum PROCESSOR_ARCHITECTURE_NEUTRAL = 0x0000000b;
enum PROCESSOR_ARCHITECTURE_ARM64 = 0x0000000c;
enum PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 0x0000000d;
enum PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 0x0000000e;
enum PF_PPC_MOVEMEM_64BIT_OK = 0x00000004;
enum PF_ALPHA_BYTE_INSTRUCTIONS = 0x00000005;
enum PF_SSE_DAZ_MODE_AVAILABLE = 0x0000000b;
enum PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 0x00000013;
enum PF_RDRAND_INSTRUCTION_AVAILABLE = 0x0000001c;
enum PF_RDTSCP_INSTRUCTION_AVAILABLE = 0x00000020;
enum PF_RDPID_INSTRUCTION_AVAILABLE = 0x00000021;
enum PF_MONITORX_INSTRUCTION_AVAILABLE = 0x00000023;
enum PF_SSSE3_INSTRUCTIONS_AVAILABLE = 0x00000024;
enum PF_SSE4_1_INSTRUCTIONS_AVAILABLE = 0x00000025;
enum PF_SSE4_2_INSTRUCTIONS_AVAILABLE = 0x00000026;
enum PF_AVX_INSTRUCTIONS_AVAILABLE = 0x00000027;
enum PF_AVX2_INSTRUCTIONS_AVAILABLE = 0x00000028;
enum PF_AVX512F_INSTRUCTIONS_AVAILABLE = 0x00000029;
enum PF_ERMS_AVAILABLE = 0x0000002a;
enum PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE = 0x0000002b;
enum PF_ARM_V83_JSCVT_INSTRUCTIONS_AVAILABLE = 0x0000002c;
enum XSTATE_LEGACY_FLOATING_POINT = 0x00000000;
enum XSTATE_LEGACY_SSE = 0x00000001;
enum XSTATE_GSSE = 0x00000002;
enum XSTATE_AVX = 0x00000002;
enum XSTATE_MPX_BNDREGS = 0x00000003;
enum XSTATE_MPX_BNDCSR = 0x00000004;
enum XSTATE_AVX512_KMASK = 0x00000005;
enum XSTATE_AVX512_ZMM_H = 0x00000006;
enum XSTATE_AVX512_ZMM = 0x00000007;
enum XSTATE_IPT = 0x00000008;
enum XSTATE_PASID = 0x0000000a;
enum XSTATE_CET_U = 0x0000000b;
enum XSTATE_CET_S = 0x0000000c;
enum XSTATE_AMX_TILE_CONFIG = 0x00000011;
enum XSTATE_AMX_TILE_DATA = 0x00000012;
enum XSTATE_LWP = 0x0000003e;
enum MAXIMUM_XSTATE_FEATURES = 0x00000040;
enum XSTATE_COMPACTION_ENABLE = 0x0000003f;
enum XSTATE_ALIGN_BIT = 0x00000001;
enum XSTATE_XFD_BIT = 0x00000002;
enum XSTATE_CONTROLFLAG_XSAVEOPT_MASK = 0x00000001;
enum XSTATE_CONTROLFLAG_XSAVEC_MASK = 0x00000002;
enum XSTATE_CONTROLFLAG_XFD_MASK = 0x00000004;
enum CFG_CALL_TARGET_VALID = 0x00000001;
enum CFG_CALL_TARGET_PROCESSED = 0x00000002;
enum CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID = 0x00000004;
enum CFG_CALL_TARGET_VALID_XFG = 0x00000008;
enum CFG_CALL_TARGET_CONVERT_XFG_TO_CFG = 0x00000010;
enum SESSION_QUERY_ACCESS = 0x00000001;
enum SESSION_MODIFY_ACCESS = 0x00000002;
enum MEM_TOP_DOWN = 0x00100000;
enum MEM_WRITE_WATCH = 0x00200000;
enum MEM_PHYSICAL = 0x00400000;
enum MEM_ROTATE = 0x00800000;
enum MEM_DIFFERENT_IMAGE_BASE_OK = 0x00800000;
enum MEM_4MB_PAGES = 0x80000000;
enum MEM_COALESCE_PLACEHOLDERS = 0x00000001;
enum MEM_EXTENDED_PARAMETER_GRAPHICS = 0x00000001;
enum MEM_EXTENDED_PARAMETER_NONPAGED = 0x00000002;
enum MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL = 0x00000004;
enum MEM_EXTENDED_PARAMETER_NONPAGED_LARGE = 0x00000008;
enum MEM_EXTENDED_PARAMETER_NONPAGED_HUGE = 0x00000010;
enum MEM_EXTENDED_PARAMETER_SOFT_FAULT_PAGES = 0x00000020;
enum MEM_EXTENDED_PARAMETER_EC_CODE = 0x00000040;
enum MEM_EXTENDED_PARAMETER_TYPE_BITS = 0x00000008;
enum SEC_HUGE_PAGES = 0x00020000;
enum WRITE_WATCH_FLAG_RESET = 0x00000001;
enum ENCLAVE_TYPE_SGX = 0x00000001;
enum ENCLAVE_TYPE_SGX2 = 0x00000002;
enum ENCLAVE_TYPE_VBS = 0x00000010;
enum ENCLAVE_VBS_FLAG_DEBUG = 0x00000001;
enum ENCLAVE_TYPE_VBS_BASIC = 0x00000011;
enum VBS_BASIC_PAGE_MEASURED_DATA = 0x00000001;
enum VBS_BASIC_PAGE_UNMEASURED_DATA = 0x00000002;
enum VBS_BASIC_PAGE_ZERO_FILL = 0x00000003;
enum VBS_BASIC_PAGE_THREAD_DESCRIPTOR = 0x00000004;
enum VBS_BASIC_PAGE_SYSTEM_CALL = 0x00000005;
enum DEDICATED_MEMORY_CACHE_ELIGIBLE = 0x00000001;
enum TREE_CONNECT_ATTRIBUTE_PRIVACY = 0x00004000;
enum TREE_CONNECT_ATTRIBUTE_INTEGRITY = 0x00008000;
enum TREE_CONNECT_ATTRIBUTE_GLOBAL = 0x00000004;
enum TREE_CONNECT_ATTRIBUTE_PINNED = 0x00000002;
enum FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL = 0x20000000;
enum MAILSLOT_NO_MESSAGE = 0xffffffff;
enum MAILSLOT_WAIT_FOREVER = 0xffffffff;
enum FILE_CASE_SENSITIVE_SEARCH = 0x00000001;
enum FILE_CASE_PRESERVED_NAMES = 0x00000002;
enum FILE_UNICODE_ON_DISK = 0x00000004;
enum FILE_PERSISTENT_ACLS = 0x00000008;
enum FILE_FILE_COMPRESSION = 0x00000010;
enum FILE_VOLUME_QUOTAS = 0x00000020;
enum FILE_SUPPORTS_SPARSE_FILES = 0x00000040;
enum FILE_SUPPORTS_REPARSE_POINTS = 0x00000080;
enum FILE_SUPPORTS_REMOTE_STORAGE = 0x00000100;
enum FILE_RETURNS_CLEANUP_RESULT_INFO = 0x00000200;
enum FILE_SUPPORTS_POSIX_UNLINK_RENAME = 0x00000400;
enum FILE_SUPPORTS_BYPASS_IO = 0x00000800;
enum FILE_VOLUME_IS_COMPRESSED = 0x00008000;
enum FILE_SUPPORTS_OBJECT_IDS = 0x00010000;
enum FILE_SUPPORTS_ENCRYPTION = 0x00020000;
enum FILE_NAMED_STREAMS = 0x00040000;
enum FILE_READ_ONLY_VOLUME = 0x00080000;
enum FILE_SEQUENTIAL_WRITE_ONCE = 0x00100000;
enum FILE_SUPPORTS_TRANSACTIONS = 0x00200000;
enum FILE_SUPPORTS_HARD_LINKS = 0x00400000;
enum FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 0x00800000;
enum FILE_SUPPORTS_OPEN_BY_FILE_ID = 0x01000000;
enum FILE_SUPPORTS_USN_JOURNAL = 0x02000000;
enum FILE_SUPPORTS_INTEGRITY_STREAMS = 0x04000000;
enum FILE_SUPPORTS_BLOCK_REFCOUNTING = 0x08000000;
enum FILE_SUPPORTS_SPARSE_VDL = 0x10000000;
enum FILE_DAX_VOLUME = 0x20000000;
enum FILE_SUPPORTS_GHOSTING = 0x40000000;
enum FILE_CS_FLAG_CASE_SENSITIVE_DIR = 0x00000001;
enum FLUSH_FLAGS_FILE_DATA_ONLY = 0x00000001;
enum FLUSH_FLAGS_NO_SYNC = 0x00000002;
enum FLUSH_FLAGS_FILE_DATA_SYNC_ONLY = 0x00000004;
enum IO_REPARSE_TAG_RESERVED_ZERO = 0x00000000;
enum IO_REPARSE_TAG_RESERVED_ONE = 0x00000001;
enum IO_REPARSE_TAG_RESERVED_TWO = 0x00000002;
enum IO_REPARSE_TAG_RESERVED_RANGE = 0x00000002;
enum IO_REPARSE_TAG_MOUNT_POINT = 0xa0000003;
enum IO_REPARSE_TAG_HSM = 0xc0000004;
enum IO_REPARSE_TAG_HSM2 = 0x80000006;
enum IO_REPARSE_TAG_SIS = 0x80000007;
enum IO_REPARSE_TAG_WIM = 0x80000008;
enum IO_REPARSE_TAG_CSV = 0x80000009;
enum IO_REPARSE_TAG_DFS = 0x8000000a;
enum IO_REPARSE_TAG_SYMLINK = 0xa000000c;
enum IO_REPARSE_TAG_DFSR = 0x80000012;
enum IO_REPARSE_TAG_DEDUP = 0x80000013;
enum IO_REPARSE_TAG_NFS = 0x80000014;
enum IO_REPARSE_TAG_FILE_PLACEHOLDER = 0x80000015;
enum IO_REPARSE_TAG_WOF = 0x80000017;
enum IO_REPARSE_TAG_WCI = 0x80000018;
enum IO_REPARSE_TAG_WCI_1 = 0x90001018;
enum IO_REPARSE_TAG_GLOBAL_REPARSE = 0xa0000019;
enum IO_REPARSE_TAG_CLOUD = 0x9000001a;
enum IO_REPARSE_TAG_CLOUD_1 = 0x9000101a;
enum IO_REPARSE_TAG_CLOUD_2 = 0x9000201a;
enum IO_REPARSE_TAG_CLOUD_3 = 0x9000301a;
enum IO_REPARSE_TAG_CLOUD_4 = 0x9000401a;
enum IO_REPARSE_TAG_CLOUD_5 = 0x9000501a;
enum IO_REPARSE_TAG_CLOUD_6 = 0x9000601a;
enum IO_REPARSE_TAG_CLOUD_7 = 0x9000701a;
enum IO_REPARSE_TAG_CLOUD_8 = 0x9000801a;
enum IO_REPARSE_TAG_CLOUD_9 = 0x9000901a;
enum IO_REPARSE_TAG_CLOUD_A = 0x9000a01a;
enum IO_REPARSE_TAG_CLOUD_B = 0x9000b01a;
enum IO_REPARSE_TAG_CLOUD_C = 0x9000c01a;
enum IO_REPARSE_TAG_CLOUD_D = 0x9000d01a;
enum IO_REPARSE_TAG_CLOUD_E = 0x9000e01a;
enum IO_REPARSE_TAG_CLOUD_F = 0x9000f01a;
enum IO_REPARSE_TAG_CLOUD_MASK = 0x0000f000;
enum IO_REPARSE_TAG_APPEXECLINK = 0x8000001b;
enum IO_REPARSE_TAG_PROJFS = 0x9000001c;
enum IO_REPARSE_TAG_STORAGE_SYNC = 0x8000001e;
enum IO_REPARSE_TAG_WCI_TOMBSTONE = 0xa000001f;
enum IO_REPARSE_TAG_UNHANDLED = 0x80000020;
enum IO_REPARSE_TAG_ONEDRIVE = 0x80000021;
enum IO_REPARSE_TAG_PROJFS_TOMBSTONE = 0xa0000022;
enum IO_REPARSE_TAG_AF_UNIX = 0x80000023;
enum IO_REPARSE_TAG_WCI_LINK = 0xa0000027;
enum IO_REPARSE_TAG_WCI_LINK_1 = 0xa0001027;
enum IO_REPARSE_TAG_DATALESS_CIM = 0xa0000028;
enum SCRUB_DATA_INPUT_FLAG_RESUME = 0x00000001;
enum SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC = 0x00000002;
enum SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA = 0x00000004;
enum SCRUB_DATA_INPUT_FLAG_IGNORE_REDUNDANCY = 0x00000008;
enum SCRUB_DATA_INPUT_FLAG_SKIP_DATA = 0x00000010;
enum SCRUB_DATA_INPUT_FLAG_SCRUB_BY_OBJECT_ID = 0x00000020;
enum SCRUB_DATA_INPUT_FLAG_OPLOCK_NOT_ACQUIRED = 0x00000040;
enum SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE = 0x00000001;
enum SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE = 0x00010000;
enum SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED = 0x00020000;
enum SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED = 0x00040000;
enum SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS = 0x00000001;
enum IO_COMPLETION_MODIFY_STATE = 0x00000002;
enum SMB_CCF_APP_INSTANCE_EA_NAME = "ClusteredApplicationInstance";
enum NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR = 0x00000001;
enum GUID_MAX_POWER_SAVINGS = GUID(0xa1841308, 0x3541, 0x4fab, [0xbc, 0x81, 0xf7, 0x15, 0x56, 0xf2, 0xb, 0x4a]);
enum GUID_MIN_POWER_SAVINGS = GUID(0x8c5e7fda, 0xe8bf, 0x4a96, [0x9a, 0x85, 0xa6, 0xe2, 0x3a, 0x8c, 0x63, 0x5c]);
enum GUID_TYPICAL_POWER_SAVINGS = GUID(0x381b4222, 0xf694, 0x41f0, [0x96, 0x85, 0xff, 0x5b, 0xb2, 0x60, 0xdf, 0x2e]);
enum NO_SUBGROUP_GUID = GUID(0xfea3413e, 0x7e05, 0x4911, [0x9a, 0x71, 0x70, 0x3, 0x31, 0xf1, 0xc2, 0x94]);
enum ALL_POWERSCHEMES_GUID = GUID(0x68a1e95e, 0x13ea, 0x41e1, [0x80, 0x11, 0xc, 0x49, 0x6c, 0xa4, 0x90, 0xb0]);
enum GUID_POWERSCHEME_PERSONALITY = GUID(0x245d8541, 0x3943, 0x4422, [0xb0, 0x25, 0x13, 0xa7, 0x84, 0xf6, 0x79, 0xb7]);
enum GUID_ACTIVE_POWERSCHEME = GUID(0x31f9f286, 0x5084, 0x42fe, [0xb7, 0x20, 0x2b, 0x2, 0x64, 0x99, 0x37, 0x63]);
enum GUID_IDLE_RESILIENCY_SUBGROUP = GUID(0x2e601130, 0x5351, 0x4d9d, [0x8e, 0x4, 0x25, 0x29, 0x66, 0xba, 0xd0, 0x54]);
enum GUID_IDLE_RESILIENCY_PERIOD = GUID(0xc42b79aa, 0xaa3a, 0x484b, [0xa9, 0x8f, 0x2c, 0xf3, 0x2a, 0xa9, 0xa, 0x28]);
enum GUID_DEEP_SLEEP_ENABLED = GUID(0xd502f7ee, 0x1dc7, 0x4efd, [0xa5, 0x5d, 0xf0, 0x4b, 0x6f, 0x5c, 0x5, 0x45]);
enum GUID_DEEP_SLEEP_PLATFORM_STATE = GUID(0xd23f2fb8, 0x9536, 0x4038, [0x9c, 0x94, 0x1c, 0xe0, 0x2e, 0x5c, 0x21, 0x52]);
enum GUID_DISK_COALESCING_POWERDOWN_TIMEOUT = GUID(0xc36f0eb4, 0x2988, 0x4a70, [0x8e, 0xee, 0x8, 0x84, 0xfc, 0x2c, 0x24, 0x33]);
enum GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT = GUID(0x3166bc41, 0x7e98, 0x4e03, [0xb3, 0x4e, 0xec, 0xf, 0x5f, 0x2b, 0x21, 0x8e]);
enum GUID_VIDEO_SUBGROUP = GUID(0x7516b95f, 0xf776, 0x4464, [0x8c, 0x53, 0x6, 0x16, 0x7f, 0x40, 0xcc, 0x99]);
enum GUID_VIDEO_POWERDOWN_TIMEOUT = GUID(0x3c0bc021, 0xc8a8, 0x4e07, [0xa9, 0x73, 0x6b, 0x14, 0xcb, 0xcb, 0x2b, 0x7e]);
enum GUID_VIDEO_ANNOYANCE_TIMEOUT = GUID(0x82dbcf2d, 0xcd67, 0x40c5, [0xbf, 0xdc, 0x9f, 0x1a, 0x5c, 0xcd, 0x46, 0x63]);
enum GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE = GUID(0xeed904df, 0xb142, 0x4183, [0xb1, 0xb, 0x5a, 0x11, 0x97, 0xa3, 0x78, 0x64]);
enum GUID_VIDEO_DIM_TIMEOUT = GUID(0x17aaa29b, 0x8b43, 0x4b94, [0xaa, 0xfe, 0x35, 0xf6, 0x4d, 0xaa, 0xf1, 0xee]);
enum GUID_VIDEO_ADAPTIVE_POWERDOWN = GUID(0x90959d22, 0xd6a1, 0x49b9, [0xaf, 0x93, 0xbc, 0xe8, 0x85, 0xad, 0x33, 0x5b]);
enum GUID_MONITOR_POWER_ON = GUID(0x2731015, 0x4510, 0x4526, [0x99, 0xe6, 0xe5, 0xa1, 0x7e, 0xbd, 0x1a, 0xea]);
enum GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS = GUID(0xaded5e82, 0xb909, 0x4619, [0x99, 0x49, 0xf5, 0xd7, 0x1d, 0xac, 0xb, 0xcb]);
enum GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS = GUID(0xf1fbfde2, 0xa960, 0x4165, [0x9f, 0x88, 0x50, 0x66, 0x79, 0x11, 0xce, 0x96]);
enum GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS = GUID(0x8ffee2c6, 0x2d01, 0x46be, [0xad, 0xb9, 0x39, 0x8a, 0xdd, 0xc5, 0xb4, 0xff]);
enum GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS = GUID(0xfbd9aa66, 0x9553, 0x4097, [0xba, 0x44, 0xed, 0x6e, 0x9d, 0x65, 0xea, 0xb8]);
enum GUID_CONSOLE_DISPLAY_STATE = GUID(0x6fe69556, 0x704a, 0x47a0, [0x8f, 0x24, 0xc2, 0x8d, 0x93, 0x6f, 0xda, 0x47]);
enum GUID_ALLOW_DISPLAY_REQUIRED = GUID(0xa9ceb8da, 0xcd46, 0x44fb, [0xa9, 0x8b, 0x2, 0xaf, 0x69, 0xde, 0x46, 0x23]);
enum GUID_VIDEO_CONSOLE_LOCK_TIMEOUT = GUID(0x8ec4b3a5, 0x6868, 0x48c2, [0xbe, 0x75, 0x4f, 0x30, 0x44, 0xbe, 0x88, 0xa7]);
enum GUID_ADVANCED_COLOR_QUALITY_BIAS = GUID(0x684c3e69, 0xa4f7, 0x4014, [0x87, 0x54, 0xd4, 0x51, 0x79, 0xa5, 0x61, 0x67]);
enum GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP = GUID(0x8619b916, 0xe004, 0x4dd8, [0x9b, 0x66, 0xda, 0xe8, 0x6f, 0x80, 0x66, 0x98]);
enum GUID_NON_ADAPTIVE_INPUT_TIMEOUT = GUID(0x5adbbfbc, 0x74e, 0x4da1, [0xba, 0x38, 0xdb, 0x8b, 0x36, 0xb2, 0xc8, 0xf3]);
enum GUID_ADAPTIVE_INPUT_CONTROLLER_STATE = GUID(0xe98fae9, 0xf45a, 0x4de1, [0xa7, 0x57, 0x60, 0x31, 0xf1, 0x97, 0xf6, 0xea]);
enum GUID_DISK_SUBGROUP = GUID(0x12ee47, 0x9041, 0x4b5d, [0x9b, 0x77, 0x53, 0x5f, 0xba, 0x8b, 0x14, 0x42]);
enum GUID_DISK_MAX_POWER = GUID(0x51dea550, 0xbb38, 0x4bc4, [0x99, 0x1b, 0xea, 0xcf, 0x37, 0xbe, 0x5e, 0xc8]);
enum GUID_DISK_POWERDOWN_TIMEOUT = GUID(0x6738e2c4, 0xe8a5, 0x4a42, [0xb1, 0x6a, 0xe0, 0x40, 0xe7, 0x69, 0x75, 0x6e]);
enum GUID_DISK_IDLE_TIMEOUT = GUID(0x58e39ba8, 0xb8e6, 0x4ef6, [0x90, 0xd0, 0x89, 0xae, 0x32, 0xb2, 0x58, 0xd6]);
enum GUID_DISK_BURST_IGNORE_THRESHOLD = GUID(0x80e3c60e, 0xbb94, 0x4ad8, [0xbb, 0xe0, 0xd, 0x31, 0x95, 0xef, 0xc6, 0x63]);
enum GUID_DISK_ADAPTIVE_POWERDOWN = GUID(0x396a32e1, 0x499a, 0x40b2, [0x91, 0x24, 0xa9, 0x6a, 0xfe, 0x70, 0x76, 0x67]);
enum GUID_DISK_NVME_NOPPME = GUID(0xfc7372b6, 0xab2d, 0x43ee, [0x87, 0x97, 0x15, 0xe9, 0x84, 0x1f, 0x2c, 0xca]);
enum GUID_SLEEP_SUBGROUP = GUID(0x238c9fa8, 0xaad, 0x41ed, [0x83, 0xf4, 0x97, 0xbe, 0x24, 0x2c, 0x8f, 0x20]);
enum GUID_SLEEP_IDLE_THRESHOLD = GUID(0x81cd32e0, 0x7833, 0x44f3, [0x87, 0x37, 0x70, 0x81, 0xf3, 0x8d, 0x1f, 0x70]);
enum GUID_STANDBY_TIMEOUT = GUID(0x29f6c1db, 0x86da, 0x48c5, [0x9f, 0xdb, 0xf2, 0xb6, 0x7b, 0x1f, 0x44, 0xda]);
enum GUID_UNATTEND_SLEEP_TIMEOUT = GUID(0x7bc4a2f9, 0xd8fc, 0x4469, [0xb0, 0x7b, 0x33, 0xeb, 0x78, 0x5a, 0xac, 0xa0]);
enum GUID_HIBERNATE_TIMEOUT = GUID(0x9d7815a6, 0x7ee4, 0x497e, [0x88, 0x88, 0x51, 0x5a, 0x5, 0xf0, 0x23, 0x64]);
enum GUID_HIBERNATE_FASTS4_POLICY = GUID(0x94ac6d29, 0x73ce, 0x41a6, [0x80, 0x9f, 0x63, 0x63, 0xba, 0x21, 0xb4, 0x7e]);
enum GUID_CRITICAL_POWER_TRANSITION = GUID(0xb7a27025, 0xe569, 0x46c2, [0xa5, 0x4, 0x2b, 0x96, 0xca, 0xd2, 0x25, 0xa1]);
enum GUID_SYSTEM_AWAYMODE = GUID(0x98a7f580, 0x1f7, 0x48aa, [0x9c, 0xf, 0x44, 0x35, 0x2c, 0x29, 0xe5, 0xc0]);
enum GUID_ALLOW_AWAYMODE = GUID(0x25dfa149, 0x5dd1, 0x4736, [0xb5, 0xab, 0xe8, 0xa3, 0x7b, 0x5b, 0x81, 0x87]);
enum GUID_USER_PRESENCE_PREDICTION = GUID(0x82011705, 0xfb95, 0x4d46, [0x8d, 0x35, 0x40, 0x42, 0xb1, 0xd2, 0xd, 0xef]);
enum GUID_STANDBY_BUDGET_GRACE_PERIOD = GUID(0x60c07fe1, 0x556, 0x45cf, [0x99, 0x3, 0xd5, 0x6e, 0x32, 0x21, 0x2, 0x42]);
enum GUID_STANDBY_BUDGET_PERCENT = GUID(0x9fe527be, 0x1b70, 0x48da, [0x93, 0xd, 0x7b, 0xcf, 0x17, 0xb4, 0x49, 0x90]);
enum GUID_STANDBY_RESERVE_GRACE_PERIOD = GUID(0xc763ee92, 0x71e8, 0x4127, [0x84, 0xeb, 0xf6, 0xed, 0x4, 0x3a, 0x3e, 0x3d]);
enum GUID_STANDBY_RESERVE_TIME = GUID(0x468fe7e5, 0x1158, 0x46ec, [0x88, 0xbc, 0x5b, 0x96, 0xc9, 0xe4, 0x4f, 0xd0]);
enum GUID_STANDBY_RESET_PERCENT = GUID(0x49cb11a5, 0x56e2, 0x4afb, [0x9d, 0x38, 0x3d, 0xf4, 0x78, 0x72, 0xe2, 0x1b]);
enum GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT = GUID(0xa7d6ab6, 0xac83, 0x4ad1, [0x82, 0x82, 0xec, 0xa5, 0xb5, 0x83, 0x8, 0xf3]);
enum GUID_ALLOW_STANDBY_STATES = GUID(0xabfc2519, 0x3608, 0x4c2a, [0x94, 0xea, 0x17, 0x1b, 0xe, 0xd5, 0x46, 0xab]);
enum GUID_ALLOW_RTC_WAKE = GUID(0xbd3b718a, 0x680, 0x4d9d, [0x8a, 0xb2, 0xe1, 0xd2, 0xb4, 0xac, 0x80, 0x6d]);
enum GUID_LEGACY_RTC_MITIGATION = GUID(0x1a34bdc3, 0x7e6b, 0x442e, [0xa9, 0xd0, 0x64, 0xb6, 0xef, 0x37, 0x8e, 0x84]);
enum GUID_ALLOW_SYSTEM_REQUIRED = GUID(0xa4b195f5, 0x8225, 0x47d8, [0x80, 0x12, 0x9d, 0x41, 0x36, 0x97, 0x86, 0xe2]);
enum GUID_POWER_SAVING_STATUS = GUID(0xe00958c0, 0xc213, 0x4ace, [0xac, 0x77, 0xfe, 0xcc, 0xed, 0x2e, 0xee, 0xa5]);
enum GUID_ENERGY_SAVER_SUBGROUP = GUID(0xde830923, 0xa562, 0x41af, [0xa0, 0x86, 0xe3, 0xa2, 0xc6, 0xba, 0xd2, 0xda]);
enum GUID_ENERGY_SAVER_BATTERY_THRESHOLD = GUID(0xe69653ca, 0xcf7f, 0x4f05, [0xaa, 0x73, 0xcb, 0x83, 0x3f, 0xa9, 0xa, 0xd4]);
enum GUID_ENERGY_SAVER_BRIGHTNESS = GUID(0x13d09884, 0xf74e, 0x474a, [0xa8, 0x52, 0xb6, 0xbd, 0xe8, 0xad, 0x3, 0xa8]);
enum GUID_ENERGY_SAVER_POLICY = GUID(0x5c5bb349, 0xad29, 0x4ee2, [0x9d, 0xb, 0x2b, 0x25, 0x27, 0xf, 0x7a, 0x81]);
enum GUID_SYSTEM_BUTTON_SUBGROUP = GUID(0x4f971e89, 0xeebd, 0x4455, [0xa8, 0xde, 0x9e, 0x59, 0x4, 0xe, 0x73, 0x47]);
enum POWERBUTTON_ACTION_INDEX_NOTHING = 0x00000000;
enum POWERBUTTON_ACTION_INDEX_SLEEP = 0x00000001;
enum POWERBUTTON_ACTION_INDEX_HIBERNATE = 0x00000002;
enum POWERBUTTON_ACTION_INDEX_SHUTDOWN = 0x00000003;
enum POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY = 0x00000004;
enum POWERBUTTON_ACTION_VALUE_NOTHING = 0x00000000;
enum POWERBUTTON_ACTION_VALUE_SLEEP = 0x00000002;
enum POWERBUTTON_ACTION_VALUE_HIBERNATE = 0x00000003;
enum POWERBUTTON_ACTION_VALUE_SHUTDOWN = 0x00000006;
enum POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY = 0x00000008;
enum GUID_POWERBUTTON_ACTION = GUID(0x7648efa3, 0xdd9c, 0x4e3e, [0xb5, 0x66, 0x50, 0xf9, 0x29, 0x38, 0x62, 0x80]);
enum GUID_SLEEPBUTTON_ACTION = GUID(0x96996bc0, 0xad50, 0x47ec, [0x92, 0x3b, 0x6f, 0x41, 0x87, 0x4d, 0xd9, 0xeb]);
enum GUID_USERINTERFACEBUTTON_ACTION = GUID(0xa7066653, 0x8d6c, 0x40a8, [0x91, 0xe, 0xa1, 0xf5, 0x4b, 0x84, 0xc7, 0xe5]);
enum GUID_LIDCLOSE_ACTION = GUID(0x5ca83367, 0x6e45, 0x459f, [0xa2, 0x7b, 0x47, 0x6b, 0x1d, 0x1, 0xc9, 0x36]);
enum GUID_LIDOPEN_POWERSTATE = GUID(0x99ff10e7, 0x23b1, 0x4c07, [0xa9, 0xd1, 0x5c, 0x32, 0x6, 0xd7, 0x41, 0xb4]);
enum GUID_BATTERY_SUBGROUP = GUID(0xe73a048d, 0xbf27, 0x4f12, [0x97, 0x31, 0x8b, 0x20, 0x76, 0xe8, 0x89, 0x1f]);
enum GUID_BATTERY_DISCHARGE_ACTION_0 = GUID(0x637ea02f, 0xbbcb, 0x4015, [0x8e, 0x2c, 0xa1, 0xc7, 0xb9, 0xc0, 0xb5, 0x46]);
enum GUID_BATTERY_DISCHARGE_LEVEL_0 = GUID(0x9a66d8d7, 0x4ff7, 0x4ef9, [0xb5, 0xa2, 0x5a, 0x32, 0x6c, 0xa2, 0xa4, 0x69]);
enum GUID_BATTERY_DISCHARGE_FLAGS_0 = GUID(0x5dbb7c9f, 0x38e9, 0x40d2, [0x97, 0x49, 0x4f, 0x8a, 0xe, 0x9f, 0x64, 0xf]);
enum GUID_BATTERY_DISCHARGE_ACTION_1 = GUID(0xd8742dcb, 0x3e6a, 0x4b3c, [0xb3, 0xfe, 0x37, 0x46, 0x23, 0xcd, 0xcf, 0x6]);
enum GUID_BATTERY_DISCHARGE_LEVEL_1 = GUID(0x8183ba9a, 0xe910, 0x48da, [0x87, 0x69, 0x14, 0xae, 0x6d, 0xc1, 0x17, 0xa]);
enum GUID_BATTERY_DISCHARGE_FLAGS_1 = GUID(0xbcded951, 0x187b, 0x4d05, [0xbc, 0xcc, 0xf7, 0xe5, 0x19, 0x60, 0xc2, 0x58]);
enum GUID_BATTERY_DISCHARGE_ACTION_2 = GUID(0x421cba38, 0x1a8e, 0x4881, [0xac, 0x89, 0xe3, 0x3a, 0x8b, 0x4, 0xec, 0xe4]);
enum GUID_BATTERY_DISCHARGE_LEVEL_2 = GUID(0x7a07ca2, 0xadaf, 0x40d7, [0xb0, 0x77, 0x53, 0x3a, 0xad, 0xed, 0x1b, 0xfa]);
enum GUID_BATTERY_DISCHARGE_FLAGS_2 = GUID(0x7fd2f0c4, 0xfeb7, 0x4da3, [0x81, 0x17, 0xe3, 0xfb, 0xed, 0xc4, 0x65, 0x82]);
enum GUID_BATTERY_DISCHARGE_ACTION_3 = GUID(0x80472613, 0x9780, 0x455e, [0xb3, 0x8, 0x72, 0xd3, 0x0, 0x3c, 0xf2, 0xf8]);
enum GUID_BATTERY_DISCHARGE_LEVEL_3 = GUID(0x58afd5a6, 0xc2dd, 0x47d2, [0x9f, 0xbf, 0xef, 0x70, 0xcc, 0x5c, 0x59, 0x65]);
enum GUID_BATTERY_DISCHARGE_FLAGS_3 = GUID(0x73613ccf, 0xdbfa, 0x4279, [0x83, 0x56, 0x49, 0x35, 0xf6, 0xbf, 0x62, 0xf3]);
enum GUID_PROCESSOR_SETTINGS_SUBGROUP = GUID(0x54533251, 0x82be, 0x4824, [0x96, 0xc1, 0x47, 0xb6, 0xb, 0x74, 0xd, 0x0]);
enum GUID_PROCESSOR_THROTTLE_POLICY = GUID(0x57027304, 0x4af6, 0x4104, [0x92, 0x60, 0xe3, 0xd9, 0x52, 0x48, 0xfc, 0x36]);
enum PERFSTATE_POLICY_CHANGE_IDEAL = 0x00000000;
enum PERFSTATE_POLICY_CHANGE_SINGLE = 0x00000001;
enum PERFSTATE_POLICY_CHANGE_ROCKET = 0x00000002;
enum PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE = 0x00000003;
enum PERFSTATE_POLICY_CHANGE_DECREASE_MAX = 0x00000002;
enum PERFSTATE_POLICY_CHANGE_INCREASE_MAX = 0x00000003;
enum GUID_PROCESSOR_THROTTLE_MAXIMUM = GUID(0xbc5038f7, 0x23e0, 0x4960, [0x96, 0xda, 0x33, 0xab, 0xaf, 0x59, 0x35, 0xec]);
enum GUID_PROCESSOR_THROTTLE_MAXIMUM_1 = GUID(0xbc5038f7, 0x23e0, 0x4960, [0x96, 0xda, 0x33, 0xab, 0xaf, 0x59, 0x35, 0xed]);
enum GUID_PROCESSOR_THROTTLE_MINIMUM = GUID(0x893dee8e, 0x2bef, 0x41e0, [0x89, 0xc6, 0xb5, 0x5d, 0x9, 0x29, 0x96, 0x4c]);
enum GUID_PROCESSOR_THROTTLE_MINIMUM_1 = GUID(0x893dee8e, 0x2bef, 0x41e0, [0x89, 0xc6, 0xb5, 0x5d, 0x9, 0x29, 0x96, 0x4d]);
enum GUID_PROCESSOR_FREQUENCY_LIMIT = GUID(0x75b0ae3f, 0xbce0, 0x45a7, [0x8c, 0x89, 0xc9, 0x61, 0x1c, 0x25, 0xe1, 0x0]);
enum GUID_PROCESSOR_FREQUENCY_LIMIT_1 = GUID(0x75b0ae3f, 0xbce0, 0x45a7, [0x8c, 0x89, 0xc9, 0x61, 0x1c, 0x25, 0xe1, 0x1]);
enum GUID_PROCESSOR_ALLOW_THROTTLING = GUID(0x3b04d4fd, 0x1cc7, 0x4f23, [0xab, 0x1c, 0xd1, 0x33, 0x78, 0x19, 0xc4, 0xbb]);
enum PROCESSOR_THROTTLE_DISABLED = 0x00000000;
enum PROCESSOR_THROTTLE_ENABLED = 0x00000001;
enum PROCESSOR_THROTTLE_AUTOMATIC = 0x00000002;
enum GUID_PROCESSOR_IDLESTATE_POLICY = GUID(0x68f262a7, 0xf621, 0x4069, [0xb9, 0xa5, 0x48, 0x74, 0x16, 0x9b, 0xe2, 0x3c]);
enum GUID_PROCESSOR_PERFSTATE_POLICY = GUID(0xbbdc3814, 0x18e9, 0x4463, [0x8a, 0x55, 0xd1, 0x97, 0x32, 0x7c, 0x45, 0xc0]);
enum GUID_PROCESSOR_PERF_INCREASE_THRESHOLD = GUID(0x6cadf0e, 0x64ed, 0x448a, [0x89, 0x27, 0xce, 0x7b, 0xf9, 0xe, 0xb3, 0x5d]);
enum GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1 = GUID(0x6cadf0e, 0x64ed, 0x448a, [0x89, 0x27, 0xce, 0x7b, 0xf9, 0xe, 0xb3, 0x5e]);
enum GUID_PROCESSOR_PERF_DECREASE_THRESHOLD = GUID(0x12a0ab44, 0xfe28, 0x4fa9, [0xb3, 0xbd, 0x4b, 0x64, 0xf4, 0x49, 0x60, 0xa6]);
enum GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1 = GUID(0x12a0ab44, 0xfe28, 0x4fa9, [0xb3, 0xbd, 0x4b, 0x64, 0xf4, 0x49, 0x60, 0xa7]);
enum GUID_PROCESSOR_PERF_INCREASE_POLICY = GUID(0x465e1f50, 0xb610, 0x473a, [0xab, 0x58, 0x0, 0xd1, 0x7, 0x7d, 0xc4, 0x18]);
enum GUID_PROCESSOR_PERF_INCREASE_POLICY_1 = GUID(0x465e1f50, 0xb610, 0x473a, [0xab, 0x58, 0x0, 0xd1, 0x7, 0x7d, 0xc4, 0x19]);
enum GUID_PROCESSOR_PERF_DECREASE_POLICY = GUID(0x40fbefc7, 0x2e9d, 0x4d25, [0xa1, 0x85, 0xc, 0xfd, 0x85, 0x74, 0xba, 0xc6]);
enum GUID_PROCESSOR_PERF_DECREASE_POLICY_1 = GUID(0x40fbefc7, 0x2e9d, 0x4d25, [0xa1, 0x85, 0xc, 0xfd, 0x85, 0x74, 0xba, 0xc7]);
enum GUID_PROCESSOR_PERF_INCREASE_TIME = GUID(0x984cf492, 0x3bed, 0x4488, [0xa8, 0xf9, 0x42, 0x86, 0xc9, 0x7b, 0xf5, 0xaa]);
enum GUID_PROCESSOR_PERF_INCREASE_TIME_1 = GUID(0x984cf492, 0x3bed, 0x4488, [0xa8, 0xf9, 0x42, 0x86, 0xc9, 0x7b, 0xf5, 0xab]);
enum GUID_PROCESSOR_PERF_DECREASE_TIME = GUID(0xd8edeb9b, 0x95cf, 0x4f95, [0xa7, 0x3c, 0xb0, 0x61, 0x97, 0x36, 0x93, 0xc8]);
enum GUID_PROCESSOR_PERF_DECREASE_TIME_1 = GUID(0xd8edeb9b, 0x95cf, 0x4f95, [0xa7, 0x3c, 0xb0, 0x61, 0x97, 0x36, 0x93, 0xc9]);
enum GUID_PROCESSOR_PERF_TIME_CHECK = GUID(0x4d2b0152, 0x7d5c, 0x498b, [0x88, 0xe2, 0x34, 0x34, 0x53, 0x92, 0xa2, 0xc5]);
enum GUID_PROCESSOR_PERF_BOOST_POLICY = GUID(0x45bcc044, 0xd885, 0x43e2, [0x86, 0x5, 0xee, 0xe, 0xc6, 0xe9, 0x6b, 0x59]);
enum PROCESSOR_PERF_BOOST_POLICY_DISABLED = 0x00000000;
enum PROCESSOR_PERF_BOOST_POLICY_MAX = 0x00000064;
enum GUID_PROCESSOR_PERF_BOOST_MODE = GUID(0xbe337238, 0xd82, 0x4146, [0xa9, 0x60, 0x4f, 0x37, 0x49, 0xd4, 0x70, 0xc7]);
enum PROCESSOR_PERF_BOOST_MODE_DISABLED = 0x00000000;
enum PROCESSOR_PERF_BOOST_MODE_ENABLED = 0x00000001;
enum PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE = 0x00000002;
enum PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED = 0x00000003;
enum PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE = 0x00000004;
enum PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED = 0x00000005;
enum PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED = 0x00000006;
enum PROCESSOR_PERF_BOOST_MODE_MAX = 0x00000006;
enum GUID_PROCESSOR_PERF_AUTONOMOUS_MODE = GUID(0x8baa4a8a, 0x14c6, 0x4451, [0x8e, 0x8b, 0x14, 0xbd, 0xbd, 0x19, 0x75, 0x37]);
enum PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED = 0x00000000;
enum PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED = 0x00000001;
enum GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE = GUID(0x36687f9e, 0xe3a5, 0x4dbf, [0xb1, 0xdc, 0x15, 0xeb, 0x38, 0x1c, 0x68, 0x63]);
enum GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1 = GUID(0x36687f9e, 0xe3a5, 0x4dbf, [0xb1, 0xdc, 0x15, 0xeb, 0x38, 0x1c, 0x68, 0x64]);
enum PROCESSOR_PERF_PERFORMANCE_PREFERENCE = 0x000000ff;
enum PROCESSOR_PERF_ENERGY_PREFERENCE = 0x00000000;
enum GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW = GUID(0xcfeda3d0, 0x7697, 0x4566, [0xa9, 0x22, 0xa9, 0x8, 0x6c, 0xd4, 0x9d, 0xfa]);
enum PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW = 0x00000000;
enum PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW = 0x4bb2a980;
enum GUID_PROCESSOR_DUTY_CYCLING = GUID(0x4e4450b3, 0x6179, 0x4e91, [0xb8, 0xf1, 0x5b, 0xb9, 0x93, 0x8f, 0x81, 0xa1]);
enum PROCESSOR_DUTY_CYCLING_DISABLED = 0x00000000;
enum PROCESSOR_DUTY_CYCLING_ENABLED = 0x00000001;
enum GUID_PROCESSOR_IDLE_ALLOW_SCALING = GUID(0x6c2993b0, 0x8f48, 0x481f, [0xbc, 0xc6, 0x0, 0xdd, 0x27, 0x42, 0xaa, 0x6]);
enum GUID_PROCESSOR_IDLE_DISABLE = GUID(0x5d76a2ca, 0xe8c0, 0x402f, [0xa1, 0x33, 0x21, 0x58, 0x49, 0x2d, 0x58, 0xad]);
enum GUID_PROCESSOR_IDLE_STATE_MAXIMUM = GUID(0x9943e905, 0x9a30, 0x4ec1, [0x9b, 0x99, 0x44, 0xdd, 0x3b, 0x76, 0xf7, 0xa2]);
enum GUID_PROCESSOR_IDLE_TIME_CHECK = GUID(0xc4581c31, 0x89ab, 0x4597, [0x8e, 0x2b, 0x9c, 0x9c, 0xab, 0x44, 0xe, 0x6b]);
enum GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD = GUID(0x4b92d758, 0x5a24, 0x4851, [0xa4, 0x70, 0x81, 0x5d, 0x78, 0xae, 0xe1, 0x19]);
enum GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD = GUID(0x7b224883, 0xb3cc, 0x4d79, [0x81, 0x9f, 0x83, 0x74, 0x15, 0x2c, 0xbe, 0x7c]);
enum GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD = GUID(0xdf142941, 0x20f3, 0x4edf, [0x9a, 0x4a, 0x9c, 0x83, 0xd3, 0xd7, 0x17, 0xd1]);
enum GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD = GUID(0x68dd2f27, 0xa4ce, 0x4e11, [0x84, 0x87, 0x37, 0x94, 0xe4, 0x13, 0x5d, 0xfa]);
enum GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY = GUID(0xc7be0679, 0x2817, 0x4d69, [0x9d, 0x2, 0x51, 0x9a, 0x53, 0x7e, 0xd0, 0xc6]);
enum CORE_PARKING_POLICY_CHANGE_IDEAL = 0x00000000;
enum CORE_PARKING_POLICY_CHANGE_SINGLE = 0x00000001;
enum CORE_PARKING_POLICY_CHANGE_ROCKET = 0x00000002;
enum CORE_PARKING_POLICY_CHANGE_MULTISTEP = 0x00000003;
enum CORE_PARKING_POLICY_CHANGE_MAX = 0x00000003;
enum GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY = GUID(0x71021b41, 0xc749, 0x4d21, [0xbe, 0x74, 0xa0, 0xf, 0x33, 0x5d, 0x58, 0x2b]);
enum GUID_PROCESSOR_CORE_PARKING_MAX_CORES = GUID(0xea062031, 0xe34, 0x4ff1, [0x9b, 0x6d, 0xeb, 0x10, 0x59, 0x33, 0x40, 0x28]);
enum GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1 = GUID(0xea062031, 0xe34, 0x4ff1, [0x9b, 0x6d, 0xeb, 0x10, 0x59, 0x33, 0x40, 0x29]);
enum GUID_PROCESSOR_CORE_PARKING_MIN_CORES = GUID(0xcc5b647, 0xc1df, 0x4637, [0x89, 0x1a, 0xde, 0xc3, 0x5c, 0x31, 0x85, 0x83]);
enum GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1 = GUID(0xcc5b647, 0xc1df, 0x4637, [0x89, 0x1a, 0xde, 0xc3, 0x5c, 0x31, 0x85, 0x84]);
enum GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME = GUID(0x2ddd5a84, 0x5a71, 0x437e, [0x91, 0x2a, 0xdb, 0xb, 0x8c, 0x78, 0x87, 0x32]);
enum GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME = GUID(0xdfd10d17, 0xd5eb, 0x45dd, [0x87, 0x7a, 0x9a, 0x34, 0xdd, 0xd1, 0x5c, 0x82]);
enum GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR = GUID(0x8f7b45e3, 0xc393, 0x480a, [0x87, 0x8c, 0xf6, 0x7a, 0xc3, 0xd0, 0x70, 0x82]);
enum GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD = GUID(0x5b33697b, 0xe89d, 0x4d38, [0xaa, 0x46, 0x9e, 0x7d, 0xfb, 0x7c, 0xd2, 0xf9]);
enum GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING = GUID(0xe70867f1, 0xfa2f, 0x4f4e, [0xae, 0xa1, 0x4d, 0x8a, 0xb, 0xa2, 0x3b, 0x20]);
enum GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR = GUID(0x1299023c, 0xbc28, 0x4f0a, [0x81, 0xec, 0xd3, 0x29, 0x5a, 0x8d, 0x81, 0x5d]);
enum GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD = GUID(0x9ac18e92, 0xaa3c, 0x4e27, [0xb3, 0x7, 0x1, 0xae, 0x37, 0x30, 0x71, 0x29]);
enum GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING = GUID(0x8809c2d8, 0xb155, 0x42d4, [0xbc, 0xda, 0xd, 0x34, 0x56, 0x51, 0xb1, 0xdb]);
enum GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD = GUID(0x943c8cb6, 0x6f93, 0x4227, [0xad, 0x87, 0xe9, 0xa3, 0xfe, 0xec, 0x8, 0xd1]);
enum GUID_PROCESSOR_PARKING_CORE_OVERRIDE = GUID(0xa55612aa, 0xf624, 0x42c6, [0xa4, 0x43, 0x73, 0x97, 0xd0, 0x64, 0xc0, 0x4f]);
enum GUID_PROCESSOR_PARKING_PERF_STATE = GUID(0x447235c7, 0x6a8d, 0x4cc0, [0x8e, 0x24, 0x9e, 0xaf, 0x70, 0xb9, 0x6e, 0x2b]);
enum GUID_PROCESSOR_PARKING_PERF_STATE_1 = GUID(0x447235c7, 0x6a8d, 0x4cc0, [0x8e, 0x24, 0x9e, 0xaf, 0x70, 0xb9, 0x6e, 0x2c]);
enum GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD = GUID(0x2430ab6f, 0xa520, 0x44a2, [0x96, 0x1, 0xf7, 0xf2, 0x3b, 0x51, 0x34, 0xb1]);
enum GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD = GUID(0xf735a673, 0x2066, 0x4f80, [0xa0, 0xc5, 0xdd, 0xee, 0xc, 0xf1, 0xbf, 0x5d]);
enum GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD = GUID(0x4bdaf4e9, 0xd103, 0x46d7, [0xa5, 0xf0, 0x62, 0x80, 0x12, 0x16, 0x16, 0xef]);
enum GUID_PROCESSOR_SOFT_PARKING_LATENCY = GUID(0x97cfac41, 0x2217, 0x47eb, [0x99, 0x2d, 0x61, 0x8b, 0x19, 0x77, 0xc9, 0x7]);
enum GUID_PROCESSOR_PERF_HISTORY = GUID(0x7d24baa7, 0xb84, 0x480f, [0x84, 0xc, 0x1b, 0x7, 0x43, 0xc0, 0xf, 0x5f]);
enum GUID_PROCESSOR_PERF_HISTORY_1 = GUID(0x7d24baa7, 0xb84, 0x480f, [0x84, 0xc, 0x1b, 0x7, 0x43, 0xc0, 0xf, 0x60]);
enum GUID_PROCESSOR_PERF_INCREASE_HISTORY = GUID(0x99b3ef01, 0x752f, 0x46a1, [0x80, 0xfb, 0x77, 0x30, 0x1, 0x1f, 0x23, 0x54]);
enum GUID_PROCESSOR_PERF_DECREASE_HISTORY = GUID(0x300f6f8, 0xabd6, 0x45a9, [0xb7, 0x4f, 0x49, 0x8, 0x69, 0x1a, 0x40, 0xb5]);
enum GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY = GUID(0x77d7f282, 0x8f1a, 0x42cd, [0x85, 0x37, 0x45, 0x45, 0xa, 0x83, 0x9b, 0xe8]);
enum GUID_PROCESSOR_PERF_LATENCY_HINT = GUID(0x822df31, 0x9c83, 0x441c, [0xa0, 0x79, 0xd, 0xe4, 0xcf, 0x0, 0x9c, 0x7b]);
enum GUID_PROCESSOR_PERF_LATENCY_HINT_PERF = GUID(0x619b7505, 0x3b, 0x4e82, [0xb7, 0xa6, 0x4d, 0xd2, 0x9c, 0x30, 0x9, 0x71]);
enum GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1 = GUID(0x619b7505, 0x3b, 0x4e82, [0xb7, 0xa6, 0x4d, 0xd2, 0x9c, 0x30, 0x9, 0x72]);
enum GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK = GUID(0x616cdaa5, 0x695e, 0x4545, [0x97, 0xad, 0x97, 0xdc, 0x2d, 0x1b, 0xdd, 0x88]);
enum GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1 = GUID(0x616cdaa5, 0x695e, 0x4545, [0x97, 0xad, 0x97, 0xdc, 0x2d, 0x1b, 0xdd, 0x89]);
enum GUID_PROCESSOR_DISTRIBUTE_UTILITY = GUID(0xe0007330, 0xf589, 0x42ed, [0xa4, 0x1, 0x5d, 0xdb, 0x10, 0xe7, 0x85, 0xd3]);
enum GUID_PROCESSOR_HETEROGENEOUS_POLICY = GUID(0x7f2f5cfa, 0xf10c, 0x4823, [0xb5, 0xe1, 0xe9, 0x3a, 0xe8, 0x5f, 0x46, 0xb5]);
enum GUID_PROCESSOR_HETERO_DECREASE_TIME = GUID(0x7f2492b6, 0x60b1, 0x45e5, [0xae, 0x55, 0x77, 0x3f, 0x8c, 0xd5, 0xca, 0xec]);
enum GUID_PROCESSOR_HETERO_INCREASE_TIME = GUID(0x4009efa7, 0xe72d, 0x4cba, [0x9e, 0xdf, 0x91, 0x8, 0x4e, 0xa8, 0xcb, 0xc3]);
enum GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD = GUID(0xf8861c27, 0x95e7, 0x475c, [0x86, 0x5b, 0x13, 0xc0, 0xcb, 0x3f, 0x9d, 0x6b]);
enum GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD = GUID(0xb000397d, 0x9b0b, 0x483d, [0x98, 0xc9, 0x69, 0x2a, 0x60, 0x60, 0xcf, 0xbf]);
enum GUID_PROCESSOR_CLASS0_FLOOR_PERF = GUID(0xfddc842b, 0x8364, 0x4edc, [0x94, 0xcf, 0xc1, 0x7f, 0x60, 0xde, 0x1c, 0x80]);
enum GUID_PROCESSOR_CLASS1_INITIAL_PERF = GUID(0x1facfc65, 0xa930, 0x4bc5, [0x9f, 0x38, 0x50, 0x4e, 0xc0, 0x97, 0xbb, 0xc0]);
enum GUID_PROCESSOR_THREAD_SCHEDULING_POLICY = GUID(0x93b8b6dc, 0x698, 0x4d1c, [0x9e, 0xe4, 0x6, 0x44, 0xe9, 0x0, 0xc8, 0x5d]);
enum GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY = GUID(0xbae08b81, 0x2d5e, 0x4688, [0xad, 0x6a, 0x13, 0x24, 0x33, 0x56, 0x65, 0x4b]);
enum GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD = GUID(0xd92998c2, 0x6a48, 0x49ca, [0x85, 0xd4, 0x8c, 0xce, 0xec, 0x29, 0x45, 0x70]);
enum GUID_SYSTEM_COOLING_POLICY = GUID(0x94d3a615, 0xa899, 0x4ac5, [0xae, 0x2b, 0xe4, 0xd8, 0xf6, 0x34, 0x36, 0x7f]);
enum GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD = GUID(0x38b8383d, 0xcce0, 0x4c79, [0x9e, 0x3e, 0x56, 0xa4, 0xf1, 0x7c, 0xc4, 0x80]);
enum GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1 = GUID(0x38b8383d, 0xcce0, 0x4c79, [0x9e, 0x3e, 0x56, 0xa4, 0xf1, 0x7c, 0xc4, 0x81]);
enum GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD = GUID(0x3d44e256, 0x7222, 0x4415, [0xa9, 0xed, 0x9c, 0x45, 0xfa, 0x3d, 0xd8, 0x30]);
enum GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1 = GUID(0x3d44e256, 0x7222, 0x4415, [0xa9, 0xed, 0x9c, 0x45, 0xfa, 0x3d, 0xd8, 0x31]);
enum GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME = GUID(0xf565999f, 0x3fb0, 0x411a, [0xa2, 0x26, 0x3f, 0x1, 0x98, 0xde, 0xc1, 0x30]);
enum GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1 = GUID(0xf565999f, 0x3fb0, 0x411a, [0xa2, 0x26, 0x3f, 0x1, 0x98, 0xde, 0xc1, 0x31]);
enum GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME = GUID(0x3d915188, 0x7830, 0x49ae, [0xa7, 0x9a, 0xf, 0xb0, 0xa1, 0xe5, 0xa2, 0x0]);
enum GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1 = GUID(0x3d915188, 0x7830, 0x49ae, [0xa7, 0x9a, 0xf, 0xb0, 0xa1, 0xe5, 0xa2, 0x1]);
enum GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING = GUID(0x4427c73b, 0x9756, 0x4a5c, [0xb8, 0x4b, 0xc7, 0xbd, 0xa7, 0x9c, 0x73, 0x20]);
enum GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1 = GUID(0x4427c73b, 0x9756, 0x4a5c, [0xb8, 0x4b, 0xc7, 0xbd, 0xa7, 0x9c, 0x73, 0x21]);
enum GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR = GUID(0xce8e92ee, 0x6a86, 0x4572, [0xbf, 0xe0, 0x20, 0xc2, 0x1d, 0x3, 0xcd, 0x40]);
enum GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1 = GUID(0xce8e92ee, 0x6a86, 0x4572, [0xbf, 0xe0, 0x20, 0xc2, 0x1d, 0x3, 0xcd, 0x41]);
enum GUID_LOCK_CONSOLE_ON_WAKE = GUID(0xe796bdb, 0x100d, 0x47d6, [0xa2, 0xd5, 0xf7, 0xd2, 0xda, 0xa5, 0x1f, 0x51]);
enum GUID_DEVICE_IDLE_POLICY = GUID(0x4faab71a, 0x92e5, 0x4726, [0xb5, 0x31, 0x22, 0x45, 0x59, 0x67, 0x2d, 0x19]);
enum POWER_DEVICE_IDLE_POLICY_PERFORMANCE = 0x00000000;
enum POWER_DEVICE_IDLE_POLICY_CONSERVATIVE = 0x00000001;
enum GUID_CONNECTIVITY_IN_STANDBY = GUID(0xf15576e8, 0x98b7, 0x4186, [0xb9, 0x44, 0xea, 0xfa, 0x66, 0x44, 0x2, 0xd9]);
enum POWER_CONNECTIVITY_IN_STANDBY_DISABLED = 0x00000000;
enum POWER_CONNECTIVITY_IN_STANDBY_ENABLED = 0x00000001;
enum POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED = 0x00000002;
enum GUID_DISCONNECTED_STANDBY_MODE = GUID(0x68afb2d9, 0xee95, 0x47a8, [0x8f, 0x50, 0x41, 0x15, 0x8, 0x80, 0x73, 0xb1]);
enum POWER_DISCONNECTED_STANDBY_MODE_NORMAL = 0x00000000;
enum POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE = 0x00000001;
enum GUID_ACDC_POWER_SOURCE = GUID(0x5d3e9a59, 0xe9d5, 0x4b00, [0xa6, 0xbd, 0xff, 0x34, 0xff, 0x51, 0x65, 0x48]);
enum GUID_LIDSWITCH_STATE_CHANGE = GUID(0xba3e0f4d, 0xb817, 0x4094, [0xa2, 0xd1, 0xd5, 0x63, 0x79, 0xe6, 0xa0, 0xf3]);
enum GUID_LIDSWITCH_STATE_RELIABILITY = GUID(0xae4c4ff1, 0xd361, 0x43f4, [0x80, 0xaa, 0xbb, 0xb6, 0xeb, 0x3, 0xde, 0x94]);
enum GUID_BATTERY_PERCENTAGE_REMAINING = GUID(0xa7ad8041, 0xb45a, 0x4cae, [0x87, 0xa3, 0xee, 0xcb, 0xb4, 0x68, 0xa9, 0xe1]);
enum GUID_BATTERY_COUNT = GUID(0x7d263f15, 0xfca4, 0x49e5, [0x85, 0x4b, 0xa9, 0xf2, 0xbf, 0xbd, 0x5c, 0x24]);
enum GUID_GLOBAL_USER_PRESENCE = GUID(0x786e8a1d, 0xb427, 0x4344, [0x92, 0x7, 0x9, 0xe7, 0xb, 0xdc, 0xbe, 0xa9]);
enum GUID_SESSION_DISPLAY_STATUS = GUID(0x2b84c20e, 0xad23, 0x4ddf, [0x93, 0xdb, 0x5, 0xff, 0xbd, 0x7e, 0xfc, 0xa5]);
enum GUID_SESSION_USER_PRESENCE = GUID(0x3c0f4548, 0xc03f, 0x4c4d, [0xb9, 0xf2, 0x23, 0x7e, 0xde, 0x68, 0x63, 0x76]);
enum GUID_IDLE_BACKGROUND_TASK = GUID(0x515c31d8, 0xf734, 0x163d, [0xa0, 0xfd, 0x11, 0xa0, 0x8c, 0x91, 0xe8, 0xf1]);
enum GUID_BACKGROUND_TASK_NOTIFICATION = GUID(0xcf23f240, 0x2a54, 0x48d8, [0xb1, 0x14, 0xde, 0x15, 0x18, 0xff, 0x5, 0x2e]);
enum GUID_APPLAUNCH_BUTTON = GUID(0x1a689231, 0x7399, 0x4e9a, [0x8f, 0x99, 0xb7, 0x1f, 0x99, 0x9d, 0xb3, 0xfa]);
enum GUID_PCIEXPRESS_SETTINGS_SUBGROUP = GUID(0x501a4d13, 0x42af, 0x4429, [0x9f, 0xd1, 0xa8, 0x21, 0x8c, 0x26, 0x8e, 0x20]);
enum GUID_PCIEXPRESS_ASPM_POLICY = GUID(0xee12f906, 0xd277, 0x404b, [0xb6, 0xda, 0xe5, 0xfa, 0x1a, 0x57, 0x6d, 0xf5]);
enum GUID_ENABLE_SWITCH_FORCED_SHUTDOWN = GUID(0x833a6b62, 0xdfa4, 0x46d1, [0x82, 0xf8, 0xe0, 0x9e, 0x34, 0xd0, 0x29, 0xd6]);
enum GUID_INTSTEER_SUBGROUP = GUID(0x48672f38, 0x7a9a, 0x4bb2, [0x8b, 0xf8, 0x3d, 0x85, 0xbe, 0x19, 0xde, 0x4e]);
enum GUID_INTSTEER_MODE = GUID(0x2bfc24f9, 0x5ea2, 0x4801, [0x82, 0x13, 0x3d, 0xba, 0xe0, 0x1a, 0xa3, 0x9d]);
enum GUID_INTSTEER_LOAD_PER_PROC_TRIGGER = GUID(0x73cde64d, 0xd720, 0x4bb2, [0xa8, 0x60, 0xc7, 0x55, 0xaf, 0xe7, 0x7e, 0xf2]);
enum GUID_INTSTEER_TIME_UNPARK_TRIGGER = GUID(0xd6ba4903, 0x386f, 0x4c2c, [0x8a, 0xdb, 0x5c, 0x21, 0xb3, 0x32, 0x8d, 0x25]);
enum GUID_GRAPHICS_SUBGROUP = GUID(0x5fb4938d, 0x1ee8, 0x4b0f, [0x9a, 0x3c, 0x50, 0x36, 0xb0, 0xab, 0x99, 0x5c]);
enum GUID_GPU_PREFERENCE_POLICY = GUID(0xdd848b2a, 0x8a5d, 0x4451, [0x9a, 0xe2, 0x39, 0xcd, 0x41, 0x65, 0x8f, 0x6c]);
enum GUID_MIXED_REALITY_MODE = GUID(0x1e626b4e, 0xcf04, 0x4f8d, [0x9c, 0xc7, 0xc9, 0x7c, 0x5b, 0xf, 0x23, 0x91]);
enum GUID_SPR_ACTIVE_SESSION_CHANGE = GUID(0xe24ce38, 0xc393, 0x4742, [0xbd, 0xb1, 0x74, 0x4f, 0x4b, 0x9e, 0xe0, 0x8e]);
enum POWER_SYSTEM_MAXIMUM = 0x00000007;
enum DIAGNOSTIC_REASON_VERSION = 0x00000000;
enum DIAGNOSTIC_REASON_SIMPLE_STRING = 0x00000001;
enum DIAGNOSTIC_REASON_DETAILED_STRING = 0x00000002;
enum DIAGNOSTIC_REASON_NOT_SPECIFIED = 0x80000000;
enum POWER_REQUEST_CONTEXT_VERSION = 0x00000000;
enum PDCAP_D0_SUPPORTED = 0x00000001;
enum PDCAP_D1_SUPPORTED = 0x00000002;
enum PDCAP_D2_SUPPORTED = 0x00000004;
enum PDCAP_D3_SUPPORTED = 0x00000008;
enum PDCAP_WAKE_FROM_D0_SUPPORTED = 0x00000010;
enum PDCAP_WAKE_FROM_D1_SUPPORTED = 0x00000020;
enum PDCAP_WAKE_FROM_D2_SUPPORTED = 0x00000040;
enum PDCAP_WAKE_FROM_D3_SUPPORTED = 0x00000080;
enum PDCAP_WARM_EJECT_SUPPORTED = 0x00000100;
enum POWER_SETTING_VALUE_VERSION = 0x00000001;
enum PROC_IDLE_BUCKET_COUNT = 0x00000006;
enum PROC_IDLE_BUCKET_COUNT_EX = 0x00000010;
enum ACPI_PPM_SOFTWARE_ALL = 0x000000fc;
enum ACPI_PPM_SOFTWARE_ANY = 0x000000fd;
enum ACPI_PPM_HARDWARE_ALL = 0x000000fe;
enum MS_PPM_SOFTWARE_ALL = 0x00000001;
enum PPM_FIRMWARE_ACPI1C2 = 0x00000001;
enum PPM_FIRMWARE_ACPI1C3 = 0x00000002;
enum PPM_FIRMWARE_ACPI1TSTATES = 0x00000004;
enum PPM_FIRMWARE_CST = 0x00000008;
enum PPM_FIRMWARE_CSD = 0x00000010;
enum PPM_FIRMWARE_PCT = 0x00000020;
enum PPM_FIRMWARE_PSS = 0x00000040;
enum PPM_FIRMWARE_XPSS = 0x00000080;
enum PPM_FIRMWARE_PPC = 0x00000100;
enum PPM_FIRMWARE_PSD = 0x00000200;
enum PPM_FIRMWARE_PTC = 0x00000400;
enum PPM_FIRMWARE_TSS = 0x00000800;
enum PPM_FIRMWARE_TPC = 0x00001000;
enum PPM_FIRMWARE_TSD = 0x00002000;
enum PPM_FIRMWARE_PCCH = 0x00004000;
enum PPM_FIRMWARE_PCCP = 0x00008000;
enum PPM_FIRMWARE_OSC = 0x00010000;
enum PPM_FIRMWARE_PDC = 0x00020000;
enum PPM_FIRMWARE_CPC = 0x00040000;
enum PPM_FIRMWARE_LPI = 0x00080000;
enum PPM_PERFORMANCE_IMPLEMENTATION_NONE = 0x00000000;
enum PPM_PERFORMANCE_IMPLEMENTATION_PSTATES = 0x00000001;
enum PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 = 0x00000002;
enum PPM_PERFORMANCE_IMPLEMENTATION_CPPC = 0x00000003;
enum PPM_PERFORMANCE_IMPLEMENTATION_PEP = 0x00000004;
enum PPM_IDLE_IMPLEMENTATION_NONE = 0x00000000;
enum PPM_IDLE_IMPLEMENTATION_CSTATES = 0x00000001;
enum PPM_IDLE_IMPLEMENTATION_PEP = 0x00000002;
enum PPM_IDLE_IMPLEMENTATION_MICROPEP = 0x00000003;
enum PPM_IDLE_IMPLEMENTATION_LPISTATES = 0x00000004;
enum PPM_PERFSTATE_CHANGE_GUID = GUID(0xa5b32ddd, 0x7f39, 0x4abc, [0xb8, 0x92, 0x90, 0xe, 0x43, 0xb5, 0x9e, 0xbb]);
enum PPM_PERFSTATE_DOMAIN_CHANGE_GUID = GUID(0x995e6b7f, 0xd653, 0x497a, [0xb9, 0x78, 0x36, 0xa3, 0xc, 0x29, 0xbf, 0x1]);
enum PPM_IDLESTATE_CHANGE_GUID = GUID(0x4838fe4f, 0xf71c, 0x4e51, [0x9e, 0xcc, 0x84, 0x30, 0xa7, 0xac, 0x4c, 0x6c]);
enum PPM_PERFSTATES_DATA_GUID = GUID(0x5708cc20, 0x7d40, 0x4bf4, [0xb4, 0xaa, 0x2b, 0x1, 0x33, 0x8d, 0x1, 0x26]);
enum PPM_IDLESTATES_DATA_GUID = GUID(0xba138e10, 0xe250, 0x4ad7, [0x86, 0x16, 0xcf, 0x1a, 0x7a, 0xd4, 0x10, 0xe7]);
enum PPM_IDLE_ACCOUNTING_GUID = GUID(0xe2a26f78, 0xae07, 0x4ee0, [0xa3, 0xf, 0xce, 0x54, 0xf5, 0x5a, 0x94, 0xcd]);
enum PPM_IDLE_ACCOUNTING_EX_GUID = GUID(0xd67abd39, 0x81f8, 0x4a5e, [0x81, 0x52, 0x72, 0xe3, 0x1e, 0xc9, 0x12, 0xee]);
enum PPM_THERMALCONSTRAINT_GUID = GUID(0xa852c2c8, 0x1a4c, 0x423b, [0x8c, 0x2c, 0xf3, 0xd, 0x82, 0x93, 0x1a, 0x88]);
enum PPM_PERFMON_PERFSTATE_GUID = GUID(0x7fd18652, 0xcfe, 0x40d2, [0xb0, 0xa1, 0xb, 0x6, 0x6a, 0x87, 0x75, 0x9e]);
enum PPM_THERMAL_POLICY_CHANGE_GUID = GUID(0x48f377b8, 0x6880, 0x4c7b, [0x8b, 0xdc, 0x38, 0x1, 0x76, 0xc6, 0x65, 0x4d]);
enum POWER_ACTION_QUERY_ALLOWED = 0x00000001;
enum POWER_ACTION_UI_ALLOWED = 0x00000002;
enum POWER_ACTION_OVERRIDE_APPS = 0x00000004;
enum POWER_ACTION_HIBERBOOT = 0x00000008;
enum POWER_ACTION_USER_NOTIFY = 0x00000010;
enum POWER_ACTION_DOZE_TO_HIBERNATE = 0x00000020;
enum POWER_ACTION_ACPI_CRITICAL = 0x01000000;
enum POWER_ACTION_ACPI_USER_NOTIFY = 0x02000000;
enum POWER_ACTION_DIRECTED_DRIPS = 0x04000000;
enum POWER_ACTION_PSEUDO_TRANSITION = 0x08000000;
enum POWER_ACTION_LIGHTEST_FIRST = 0x10000000;
enum POWER_ACTION_LOCK_CONSOLE = 0x20000000;
enum POWER_ACTION_DISABLE_WAKES = 0x40000000;
enum POWER_ACTION_CRITICAL = 0x80000000;
enum POWER_USER_NOTIFY_FORCED_SHUTDOWN = 0x00000020;
enum BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK = 0x00000007;
enum BATTERY_DISCHARGE_FLAGS_ENABLE = 0x80000000;
enum NUM_DISCHARGE_POLICIES = 0x00000004;
enum DISCHARGE_POLICY_CRITICAL = 0x00000000;
enum DISCHARGE_POLICY_LOW = 0x00000001;
enum PROCESSOR_IDLESTATE_POLICY_COUNT = 0x00000003;
enum PO_THROTTLE_NONE = 0x00000000;
enum PO_THROTTLE_CONSTANT = 0x00000001;
enum PO_THROTTLE_DEGRADE = 0x00000002;
enum PO_THROTTLE_ADAPTIVE = 0x00000003;
enum PO_THROTTLE_MAXIMUM = 0x00000004;
enum HIBERFILE_TYPE_NONE = 0x00000000;
enum HIBERFILE_TYPE_REDUCED = 0x00000001;
enum HIBERFILE_TYPE_FULL = 0x00000002;
enum HIBERFILE_TYPE_MAX = 0x00000003;
enum IMAGE_DOS_SIGNATURE = 0x5a4d;
enum IMAGE_OS2_SIGNATURE = 0x454e;
enum IMAGE_OS2_SIGNATURE_LE = 0x454c;
enum IMAGE_VXD_SIGNATURE = 0x454c;
enum IMAGE_NT_SIGNATURE = 0x00004550;
enum IMAGE_SIZEOF_FILE_HEADER = 0x00000014;
enum IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 0x00000010;
enum IMAGE_SIZEOF_SHORT_NAME = 0x00000008;
enum IMAGE_SIZEOF_SECTION_HEADER = 0x00000028;
enum IMAGE_SIZEOF_SYMBOL = 0x00000012;
enum IMAGE_SYM_SECTION_MAX = 0x0000feff;
enum IMAGE_SYM_SECTION_MAX_EX = 0x7fffffff;
enum IMAGE_SYM_TYPE_NULL = 0x00000000;
enum IMAGE_SYM_TYPE_VOID = 0x00000001;
enum IMAGE_SYM_TYPE_CHAR = 0x00000002;
enum IMAGE_SYM_TYPE_SHORT = 0x00000003;
enum IMAGE_SYM_TYPE_INT = 0x00000004;
enum IMAGE_SYM_TYPE_LONG = 0x00000005;
enum IMAGE_SYM_TYPE_FLOAT = 0x00000006;
enum IMAGE_SYM_TYPE_DOUBLE = 0x00000007;
enum IMAGE_SYM_TYPE_STRUCT = 0x00000008;
enum IMAGE_SYM_TYPE_UNION = 0x00000009;
enum IMAGE_SYM_TYPE_ENUM = 0x0000000a;
enum IMAGE_SYM_TYPE_MOE = 0x0000000b;
enum IMAGE_SYM_TYPE_BYTE = 0x0000000c;
enum IMAGE_SYM_TYPE_WORD = 0x0000000d;
enum IMAGE_SYM_TYPE_UINT = 0x0000000e;
enum IMAGE_SYM_TYPE_DWORD = 0x0000000f;
enum IMAGE_SYM_TYPE_PCODE = 0x00008000;
enum IMAGE_SYM_DTYPE_NULL = 0x00000000;
enum IMAGE_SYM_DTYPE_POINTER = 0x00000001;
enum IMAGE_SYM_DTYPE_FUNCTION = 0x00000002;
enum IMAGE_SYM_DTYPE_ARRAY = 0x00000003;
enum IMAGE_SYM_CLASS_NULL = 0x00000000;
enum IMAGE_SYM_CLASS_AUTOMATIC = 0x00000001;
enum IMAGE_SYM_CLASS_EXTERNAL = 0x00000002;
enum IMAGE_SYM_CLASS_STATIC = 0x00000003;
enum IMAGE_SYM_CLASS_REGISTER = 0x00000004;
enum IMAGE_SYM_CLASS_EXTERNAL_DEF = 0x00000005;
enum IMAGE_SYM_CLASS_LABEL = 0x00000006;
enum IMAGE_SYM_CLASS_UNDEFINED_LABEL = 0x00000007;
enum IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 0x00000008;
enum IMAGE_SYM_CLASS_ARGUMENT = 0x00000009;
enum IMAGE_SYM_CLASS_STRUCT_TAG = 0x0000000a;
enum IMAGE_SYM_CLASS_MEMBER_OF_UNION = 0x0000000b;
enum IMAGE_SYM_CLASS_UNION_TAG = 0x0000000c;
enum IMAGE_SYM_CLASS_TYPE_DEFINITION = 0x0000000d;
enum IMAGE_SYM_CLASS_UNDEFINED_STATIC = 0x0000000e;
enum IMAGE_SYM_CLASS_ENUM_TAG = 0x0000000f;
enum IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 0x00000010;
enum IMAGE_SYM_CLASS_REGISTER_PARAM = 0x00000011;
enum IMAGE_SYM_CLASS_BIT_FIELD = 0x00000012;
enum IMAGE_SYM_CLASS_FAR_EXTERNAL = 0x00000044;
enum IMAGE_SYM_CLASS_BLOCK = 0x00000064;
enum IMAGE_SYM_CLASS_FUNCTION = 0x00000065;
enum IMAGE_SYM_CLASS_END_OF_STRUCT = 0x00000066;
enum IMAGE_SYM_CLASS_FILE = 0x00000067;
enum IMAGE_SYM_CLASS_SECTION = 0x00000068;
enum IMAGE_SYM_CLASS_WEAK_EXTERNAL = 0x00000069;
enum IMAGE_SYM_CLASS_CLR_TOKEN = 0x0000006b;
enum N_BTMASK = 0x0000000f;
enum N_TMASK = 0x00000030;
enum N_TMASK1 = 0x000000c0;
enum N_TMASK2 = 0x000000f0;
enum N_BTSHFT = 0x00000004;
enum N_TSHIFT = 0x00000002;
enum IMAGE_COMDAT_SELECT_NODUPLICATES = 0x00000001;
enum IMAGE_COMDAT_SELECT_ANY = 0x00000002;
enum IMAGE_COMDAT_SELECT_SAME_SIZE = 0x00000003;
enum IMAGE_COMDAT_SELECT_EXACT_MATCH = 0x00000004;
enum IMAGE_COMDAT_SELECT_ASSOCIATIVE = 0x00000005;
enum IMAGE_COMDAT_SELECT_LARGEST = 0x00000006;
enum IMAGE_COMDAT_SELECT_NEWEST = 0x00000007;
enum IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 0x00000001;
enum IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 0x00000002;
enum IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 0x00000003;
enum IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY = 0x00000004;
enum IMAGE_REL_I386_ABSOLUTE = 0x00000000;
enum IMAGE_REL_I386_DIR16 = 0x00000001;
enum IMAGE_REL_I386_REL16 = 0x00000002;
enum IMAGE_REL_I386_DIR32 = 0x00000006;
enum IMAGE_REL_I386_DIR32NB = 0x00000007;
enum IMAGE_REL_I386_SEG12 = 0x00000009;
enum IMAGE_REL_I386_SECTION = 0x0000000a;
enum IMAGE_REL_I386_SECREL = 0x0000000b;
enum IMAGE_REL_I386_TOKEN = 0x0000000c;
enum IMAGE_REL_I386_SECREL7 = 0x0000000d;
enum IMAGE_REL_I386_REL32 = 0x00000014;
enum IMAGE_REL_MIPS_ABSOLUTE = 0x00000000;
enum IMAGE_REL_MIPS_REFHALF = 0x00000001;
enum IMAGE_REL_MIPS_REFWORD = 0x00000002;
enum IMAGE_REL_MIPS_JMPADDR = 0x00000003;
enum IMAGE_REL_MIPS_REFHI = 0x00000004;
enum IMAGE_REL_MIPS_REFLO = 0x00000005;
enum IMAGE_REL_MIPS_GPREL = 0x00000006;
enum IMAGE_REL_MIPS_LITERAL = 0x00000007;
enum IMAGE_REL_MIPS_SECTION = 0x0000000a;
enum IMAGE_REL_MIPS_SECREL = 0x0000000b;
enum IMAGE_REL_MIPS_SECRELLO = 0x0000000c;
enum IMAGE_REL_MIPS_SECRELHI = 0x0000000d;
enum IMAGE_REL_MIPS_TOKEN = 0x0000000e;
enum IMAGE_REL_MIPS_JMPADDR16 = 0x00000010;
enum IMAGE_REL_MIPS_REFWORDNB = 0x00000022;
enum IMAGE_REL_MIPS_PAIR = 0x00000025;
enum IMAGE_REL_ALPHA_ABSOLUTE = 0x00000000;
enum IMAGE_REL_ALPHA_REFLONG = 0x00000001;
enum IMAGE_REL_ALPHA_REFQUAD = 0x00000002;
enum IMAGE_REL_ALPHA_GPREL32 = 0x00000003;
enum IMAGE_REL_ALPHA_LITERAL = 0x00000004;
enum IMAGE_REL_ALPHA_LITUSE = 0x00000005;
enum IMAGE_REL_ALPHA_GPDISP = 0x00000006;
enum IMAGE_REL_ALPHA_BRADDR = 0x00000007;
enum IMAGE_REL_ALPHA_HINT = 0x00000008;
enum IMAGE_REL_ALPHA_INLINE_REFLONG = 0x00000009;
enum IMAGE_REL_ALPHA_REFHI = 0x0000000a;
enum IMAGE_REL_ALPHA_REFLO = 0x0000000b;
enum IMAGE_REL_ALPHA_PAIR = 0x0000000c;
enum IMAGE_REL_ALPHA_MATCH = 0x0000000d;
enum IMAGE_REL_ALPHA_SECTION = 0x0000000e;
enum IMAGE_REL_ALPHA_SECREL = 0x0000000f;
enum IMAGE_REL_ALPHA_REFLONGNB = 0x00000010;
enum IMAGE_REL_ALPHA_SECRELLO = 0x00000011;
enum IMAGE_REL_ALPHA_SECRELHI = 0x00000012;
enum IMAGE_REL_ALPHA_REFQ3 = 0x00000013;
enum IMAGE_REL_ALPHA_REFQ2 = 0x00000014;
enum IMAGE_REL_ALPHA_REFQ1 = 0x00000015;
enum IMAGE_REL_ALPHA_GPRELLO = 0x00000016;
enum IMAGE_REL_ALPHA_GPRELHI = 0x00000017;
enum IMAGE_REL_PPC_ABSOLUTE = 0x00000000;
enum IMAGE_REL_PPC_ADDR64 = 0x00000001;
enum IMAGE_REL_PPC_ADDR32 = 0x00000002;
enum IMAGE_REL_PPC_ADDR24 = 0x00000003;
enum IMAGE_REL_PPC_ADDR16 = 0x00000004;
enum IMAGE_REL_PPC_ADDR14 = 0x00000005;
enum IMAGE_REL_PPC_REL24 = 0x00000006;
enum IMAGE_REL_PPC_REL14 = 0x00000007;
enum IMAGE_REL_PPC_TOCREL16 = 0x00000008;
enum IMAGE_REL_PPC_TOCREL14 = 0x00000009;
enum IMAGE_REL_PPC_ADDR32NB = 0x0000000a;
enum IMAGE_REL_PPC_SECREL = 0x0000000b;
enum IMAGE_REL_PPC_SECTION = 0x0000000c;
enum IMAGE_REL_PPC_IFGLUE = 0x0000000d;
enum IMAGE_REL_PPC_IMGLUE = 0x0000000e;
enum IMAGE_REL_PPC_SECREL16 = 0x0000000f;
enum IMAGE_REL_PPC_REFHI = 0x00000010;
enum IMAGE_REL_PPC_REFLO = 0x00000011;
enum IMAGE_REL_PPC_PAIR = 0x00000012;
enum IMAGE_REL_PPC_SECRELLO = 0x00000013;
enum IMAGE_REL_PPC_SECRELHI = 0x00000014;
enum IMAGE_REL_PPC_GPREL = 0x00000015;
enum IMAGE_REL_PPC_TOKEN = 0x00000016;
enum IMAGE_REL_PPC_TYPEMASK = 0x000000ff;
enum IMAGE_REL_PPC_NEG = 0x00000100;
enum IMAGE_REL_PPC_BRTAKEN = 0x00000200;
enum IMAGE_REL_PPC_BRNTAKEN = 0x00000400;
enum IMAGE_REL_PPC_TOCDEFN = 0x00000800;
enum IMAGE_REL_SH3_ABSOLUTE = 0x00000000;
enum IMAGE_REL_SH3_DIRECT16 = 0x00000001;
enum IMAGE_REL_SH3_DIRECT32 = 0x00000002;
enum IMAGE_REL_SH3_DIRECT8 = 0x00000003;
enum IMAGE_REL_SH3_DIRECT8_WORD = 0x00000004;
enum IMAGE_REL_SH3_DIRECT8_LONG = 0x00000005;
enum IMAGE_REL_SH3_DIRECT4 = 0x00000006;
enum IMAGE_REL_SH3_DIRECT4_WORD = 0x00000007;
enum IMAGE_REL_SH3_DIRECT4_LONG = 0x00000008;
enum IMAGE_REL_SH3_PCREL8_WORD = 0x00000009;
enum IMAGE_REL_SH3_PCREL8_LONG = 0x0000000a;
enum IMAGE_REL_SH3_PCREL12_WORD = 0x0000000b;
enum IMAGE_REL_SH3_STARTOF_SECTION = 0x0000000c;
enum IMAGE_REL_SH3_SIZEOF_SECTION = 0x0000000d;
enum IMAGE_REL_SH3_SECTION = 0x0000000e;
enum IMAGE_REL_SH3_SECREL = 0x0000000f;
enum IMAGE_REL_SH3_DIRECT32_NB = 0x00000010;
enum IMAGE_REL_SH3_GPREL4_LONG = 0x00000011;
enum IMAGE_REL_SH3_TOKEN = 0x00000012;
enum IMAGE_REL_SHM_PCRELPT = 0x00000013;
enum IMAGE_REL_SHM_REFLO = 0x00000014;
enum IMAGE_REL_SHM_REFHALF = 0x00000015;
enum IMAGE_REL_SHM_RELLO = 0x00000016;
enum IMAGE_REL_SHM_RELHALF = 0x00000017;
enum IMAGE_REL_SHM_PAIR = 0x00000018;
enum IMAGE_REL_SH_NOMODE = 0x00008000;
enum IMAGE_REL_ARM_ABSOLUTE = 0x00000000;
enum IMAGE_REL_ARM_ADDR32 = 0x00000001;
enum IMAGE_REL_ARM_ADDR32NB = 0x00000002;
enum IMAGE_REL_ARM_BRANCH24 = 0x00000003;
enum IMAGE_REL_ARM_BRANCH11 = 0x00000004;
enum IMAGE_REL_ARM_TOKEN = 0x00000005;
enum IMAGE_REL_ARM_GPREL12 = 0x00000006;
enum IMAGE_REL_ARM_GPREL7 = 0x00000007;
enum IMAGE_REL_ARM_BLX24 = 0x00000008;
enum IMAGE_REL_ARM_BLX11 = 0x00000009;
enum IMAGE_REL_ARM_SECTION = 0x0000000e;
enum IMAGE_REL_ARM_SECREL = 0x0000000f;
enum IMAGE_REL_ARM_MOV32A = 0x00000010;
enum IMAGE_REL_ARM_MOV32 = 0x00000010;
enum IMAGE_REL_ARM_MOV32T = 0x00000011;
enum IMAGE_REL_THUMB_MOV32 = 0x00000011;
enum IMAGE_REL_ARM_BRANCH20T = 0x00000012;
enum IMAGE_REL_THUMB_BRANCH20 = 0x00000012;
enum IMAGE_REL_ARM_BRANCH24T = 0x00000014;
enum IMAGE_REL_THUMB_BRANCH24 = 0x00000014;
enum IMAGE_REL_ARM_BLX23T = 0x00000015;
enum IMAGE_REL_THUMB_BLX23 = 0x00000015;
enum IMAGE_REL_AM_ABSOLUTE = 0x00000000;
enum IMAGE_REL_AM_ADDR32 = 0x00000001;
enum IMAGE_REL_AM_ADDR32NB = 0x00000002;
enum IMAGE_REL_AM_CALL32 = 0x00000003;
enum IMAGE_REL_AM_FUNCINFO = 0x00000004;
enum IMAGE_REL_AM_REL32_1 = 0x00000005;
enum IMAGE_REL_AM_REL32_2 = 0x00000006;
enum IMAGE_REL_AM_SECREL = 0x00000007;
enum IMAGE_REL_AM_SECTION = 0x00000008;
enum IMAGE_REL_AM_TOKEN = 0x00000009;
enum IMAGE_REL_ARM64_ABSOLUTE = 0x00000000;
enum IMAGE_REL_ARM64_ADDR32 = 0x00000001;
enum IMAGE_REL_ARM64_ADDR32NB = 0x00000002;
enum IMAGE_REL_ARM64_BRANCH26 = 0x00000003;
enum IMAGE_REL_ARM64_PAGEBASE_REL21 = 0x00000004;
enum IMAGE_REL_ARM64_REL21 = 0x00000005;
enum IMAGE_REL_ARM64_PAGEOFFSET_12A = 0x00000006;
enum IMAGE_REL_ARM64_PAGEOFFSET_12L = 0x00000007;
enum IMAGE_REL_ARM64_SECREL = 0x00000008;
enum IMAGE_REL_ARM64_SECREL_LOW12A = 0x00000009;
enum IMAGE_REL_ARM64_SECREL_HIGH12A = 0x0000000a;
enum IMAGE_REL_ARM64_SECREL_LOW12L = 0x0000000b;
enum IMAGE_REL_ARM64_TOKEN = 0x0000000c;
enum IMAGE_REL_ARM64_SECTION = 0x0000000d;
enum IMAGE_REL_ARM64_ADDR64 = 0x0000000e;
enum IMAGE_REL_ARM64_BRANCH19 = 0x0000000f;
enum IMAGE_REL_AMD64_ABSOLUTE = 0x00000000;
enum IMAGE_REL_AMD64_ADDR64 = 0x00000001;
enum IMAGE_REL_AMD64_ADDR32 = 0x00000002;
enum IMAGE_REL_AMD64_ADDR32NB = 0x00000003;
enum IMAGE_REL_AMD64_REL32 = 0x00000004;
enum IMAGE_REL_AMD64_REL32_1 = 0x00000005;
enum IMAGE_REL_AMD64_REL32_2 = 0x00000006;
enum IMAGE_REL_AMD64_REL32_3 = 0x00000007;
enum IMAGE_REL_AMD64_REL32_4 = 0x00000008;
enum IMAGE_REL_AMD64_REL32_5 = 0x00000009;
enum IMAGE_REL_AMD64_SECTION = 0x0000000a;
enum IMAGE_REL_AMD64_SECREL = 0x0000000b;
enum IMAGE_REL_AMD64_SECREL7 = 0x0000000c;
enum IMAGE_REL_AMD64_TOKEN = 0x0000000d;
enum IMAGE_REL_AMD64_SREL32 = 0x0000000e;
enum IMAGE_REL_AMD64_PAIR = 0x0000000f;
enum IMAGE_REL_AMD64_SSPAN32 = 0x00000010;
enum IMAGE_REL_AMD64_EHANDLER = 0x00000011;
enum IMAGE_REL_AMD64_IMPORT_BR = 0x00000012;
enum IMAGE_REL_AMD64_IMPORT_CALL = 0x00000013;
enum IMAGE_REL_AMD64_CFG_BR = 0x00000014;
enum IMAGE_REL_AMD64_CFG_BR_REX = 0x00000015;
enum IMAGE_REL_AMD64_CFG_CALL = 0x00000016;
enum IMAGE_REL_AMD64_INDIR_BR = 0x00000017;
enum IMAGE_REL_AMD64_INDIR_BR_REX = 0x00000018;
enum IMAGE_REL_AMD64_INDIR_CALL = 0x00000019;
enum IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST = 0x00000020;
enum IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST = 0x0000002f;
enum IMAGE_REL_IA64_ABSOLUTE = 0x00000000;
enum IMAGE_REL_IA64_IMM14 = 0x00000001;
enum IMAGE_REL_IA64_IMM22 = 0x00000002;
enum IMAGE_REL_IA64_IMM64 = 0x00000003;
enum IMAGE_REL_IA64_DIR32 = 0x00000004;
enum IMAGE_REL_IA64_DIR64 = 0x00000005;
enum IMAGE_REL_IA64_PCREL21B = 0x00000006;
enum IMAGE_REL_IA64_PCREL21M = 0x00000007;
enum IMAGE_REL_IA64_PCREL21F = 0x00000008;
enum IMAGE_REL_IA64_GPREL22 = 0x00000009;
enum IMAGE_REL_IA64_LTOFF22 = 0x0000000a;
enum IMAGE_REL_IA64_SECTION = 0x0000000b;
enum IMAGE_REL_IA64_SECREL22 = 0x0000000c;
enum IMAGE_REL_IA64_SECREL64I = 0x0000000d;
enum IMAGE_REL_IA64_SECREL32 = 0x0000000e;
enum IMAGE_REL_IA64_DIR32NB = 0x00000010;
enum IMAGE_REL_IA64_SREL14 = 0x00000011;
enum IMAGE_REL_IA64_SREL22 = 0x00000012;
enum IMAGE_REL_IA64_SREL32 = 0x00000013;
enum IMAGE_REL_IA64_UREL32 = 0x00000014;
enum IMAGE_REL_IA64_PCREL60X = 0x00000015;
enum IMAGE_REL_IA64_PCREL60B = 0x00000016;
enum IMAGE_REL_IA64_PCREL60F = 0x00000017;
enum IMAGE_REL_IA64_PCREL60I = 0x00000018;
enum IMAGE_REL_IA64_PCREL60M = 0x00000019;
enum IMAGE_REL_IA64_IMMGPREL64 = 0x0000001a;
enum IMAGE_REL_IA64_TOKEN = 0x0000001b;
enum IMAGE_REL_IA64_GPREL32 = 0x0000001c;
enum IMAGE_REL_IA64_ADDEND = 0x0000001f;
enum IMAGE_REL_CEF_ABSOLUTE = 0x00000000;
enum IMAGE_REL_CEF_ADDR32 = 0x00000001;
enum IMAGE_REL_CEF_ADDR64 = 0x00000002;
enum IMAGE_REL_CEF_ADDR32NB = 0x00000003;
enum IMAGE_REL_CEF_SECTION = 0x00000004;
enum IMAGE_REL_CEF_SECREL = 0x00000005;
enum IMAGE_REL_CEF_TOKEN = 0x00000006;
enum IMAGE_REL_CEE_ABSOLUTE = 0x00000000;
enum IMAGE_REL_CEE_ADDR32 = 0x00000001;
enum IMAGE_REL_CEE_ADDR64 = 0x00000002;
enum IMAGE_REL_CEE_ADDR32NB = 0x00000003;
enum IMAGE_REL_CEE_SECTION = 0x00000004;
enum IMAGE_REL_CEE_SECREL = 0x00000005;
enum IMAGE_REL_CEE_TOKEN = 0x00000006;
enum IMAGE_REL_M32R_ABSOLUTE = 0x00000000;
enum IMAGE_REL_M32R_ADDR32 = 0x00000001;
enum IMAGE_REL_M32R_ADDR32NB = 0x00000002;
enum IMAGE_REL_M32R_ADDR24 = 0x00000003;
enum IMAGE_REL_M32R_GPREL16 = 0x00000004;
enum IMAGE_REL_M32R_PCREL24 = 0x00000005;
enum IMAGE_REL_M32R_PCREL16 = 0x00000006;
enum IMAGE_REL_M32R_PCREL8 = 0x00000007;
enum IMAGE_REL_M32R_REFHALF = 0x00000008;
enum IMAGE_REL_M32R_REFHI = 0x00000009;
enum IMAGE_REL_M32R_REFLO = 0x0000000a;
enum IMAGE_REL_M32R_PAIR = 0x0000000b;
enum IMAGE_REL_M32R_SECTION = 0x0000000c;
enum IMAGE_REL_M32R_SECREL32 = 0x0000000d;
enum IMAGE_REL_M32R_TOKEN = 0x0000000e;
enum IMAGE_REL_EBC_ABSOLUTE = 0x00000000;
enum IMAGE_REL_EBC_ADDR32NB = 0x00000001;
enum IMAGE_REL_EBC_REL32 = 0x00000002;
enum IMAGE_REL_EBC_SECTION = 0x00000003;
enum IMAGE_REL_EBC_SECREL = 0x00000004;
enum EMARCH_ENC_I17_IMM7B_INST_WORD_X = 0x00000003;
enum EMARCH_ENC_I17_IMM7B_SIZE_X = 0x00000007;
enum EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X = 0x00000004;
enum EMARCH_ENC_I17_IMM7B_VAL_POS_X = 0x00000000;
enum EMARCH_ENC_I17_IMM9D_INST_WORD_X = 0x00000003;
enum EMARCH_ENC_I17_IMM9D_SIZE_X = 0x00000009;
enum EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X = 0x00000012;
enum EMARCH_ENC_I17_IMM9D_VAL_POS_X = 0x00000007;
enum EMARCH_ENC_I17_IMM5C_INST_WORD_X = 0x00000003;
enum EMARCH_ENC_I17_IMM5C_SIZE_X = 0x00000005;
enum EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X = 0x0000000d;
enum EMARCH_ENC_I17_IMM5C_VAL_POS_X = 0x00000010;
enum EMARCH_ENC_I17_IC_INST_WORD_X = 0x00000003;
enum EMARCH_ENC_I17_IC_SIZE_X = 0x00000001;
enum EMARCH_ENC_I17_IC_INST_WORD_POS_X = 0x0000000c;
enum EMARCH_ENC_I17_IC_VAL_POS_X = 0x00000015;
enum EMARCH_ENC_I17_IMM41a_INST_WORD_X = 0x00000001;
enum EMARCH_ENC_I17_IMM41a_SIZE_X = 0x0000000a;
enum EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X = 0x0000000e;
enum EMARCH_ENC_I17_IMM41a_VAL_POS_X = 0x00000016;
enum EMARCH_ENC_I17_IMM41b_INST_WORD_X = 0x00000001;
enum EMARCH_ENC_I17_IMM41b_SIZE_X = 0x00000008;
enum EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X = 0x00000018;
enum EMARCH_ENC_I17_IMM41b_VAL_POS_X = 0x00000020;
enum EMARCH_ENC_I17_IMM41c_INST_WORD_X = 0x00000002;
enum EMARCH_ENC_I17_IMM41c_SIZE_X = 0x00000017;
enum EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X = 0x00000000;
enum EMARCH_ENC_I17_IMM41c_VAL_POS_X = 0x00000028;
enum EMARCH_ENC_I17_SIGN_INST_WORD_X = 0x00000003;
enum EMARCH_ENC_I17_SIGN_SIZE_X = 0x00000001;
enum EMARCH_ENC_I17_SIGN_INST_WORD_POS_X = 0x0000001b;
enum EMARCH_ENC_I17_SIGN_VAL_POS_X = 0x0000003f;
enum X3_OPCODE_INST_WORD_X = 0x00000003;
enum X3_OPCODE_SIZE_X = 0x00000004;
enum X3_OPCODE_INST_WORD_POS_X = 0x0000001c;
enum X3_OPCODE_SIGN_VAL_POS_X = 0x00000000;
enum X3_I_INST_WORD_X = 0x00000003;
enum X3_I_SIZE_X = 0x00000001;
enum X3_I_INST_WORD_POS_X = 0x0000001b;
enum X3_I_SIGN_VAL_POS_X = 0x0000003b;
enum X3_D_WH_INST_WORD_X = 0x00000003;
enum X3_D_WH_SIZE_X = 0x00000003;
enum X3_D_WH_INST_WORD_POS_X = 0x00000018;
enum X3_D_WH_SIGN_VAL_POS_X = 0x00000000;
enum X3_IMM20_INST_WORD_X = 0x00000003;
enum X3_IMM20_SIZE_X = 0x00000014;
enum X3_IMM20_INST_WORD_POS_X = 0x00000004;
enum X3_IMM20_SIGN_VAL_POS_X = 0x00000000;
enum X3_IMM39_1_INST_WORD_X = 0x00000002;
enum X3_IMM39_1_SIZE_X = 0x00000017;
enum X3_IMM39_1_INST_WORD_POS_X = 0x00000000;
enum X3_IMM39_1_SIGN_VAL_POS_X = 0x00000024;
enum X3_IMM39_2_INST_WORD_X = 0x00000001;
enum X3_IMM39_2_SIZE_X = 0x00000010;
enum X3_IMM39_2_INST_WORD_POS_X = 0x00000010;
enum X3_IMM39_2_SIGN_VAL_POS_X = 0x00000014;
enum X3_P_INST_WORD_X = 0x00000003;
enum X3_P_SIZE_X = 0x00000004;
enum X3_P_INST_WORD_POS_X = 0x00000000;
enum X3_P_SIGN_VAL_POS_X = 0x00000000;
enum X3_TMPLT_INST_WORD_X = 0x00000000;
enum X3_TMPLT_SIZE_X = 0x00000004;
enum X3_TMPLT_INST_WORD_POS_X = 0x00000000;
enum X3_TMPLT_SIGN_VAL_POS_X = 0x00000000;
enum X3_BTYPE_QP_INST_WORD_X = 0x00000002;
enum X3_BTYPE_QP_SIZE_X = 0x00000009;
enum X3_BTYPE_QP_INST_WORD_POS_X = 0x00000017;
enum X3_BTYPE_QP_INST_VAL_POS_X = 0x00000000;
enum X3_EMPTY_INST_WORD_X = 0x00000001;
enum X3_EMPTY_SIZE_X = 0x00000002;
enum X3_EMPTY_INST_WORD_POS_X = 0x0000000e;
enum X3_EMPTY_INST_VAL_POS_X = 0x00000000;
enum IMAGE_REL_BASED_ABSOLUTE = 0x00000000;
enum IMAGE_REL_BASED_HIGH = 0x00000001;
enum IMAGE_REL_BASED_LOW = 0x00000002;
enum IMAGE_REL_BASED_HIGHLOW = 0x00000003;
enum IMAGE_REL_BASED_HIGHADJ = 0x00000004;
enum IMAGE_REL_BASED_MACHINE_SPECIFIC_5 = 0x00000005;
enum IMAGE_REL_BASED_RESERVED = 0x00000006;
enum IMAGE_REL_BASED_MACHINE_SPECIFIC_7 = 0x00000007;
enum IMAGE_REL_BASED_MACHINE_SPECIFIC_8 = 0x00000008;
enum IMAGE_REL_BASED_MACHINE_SPECIFIC_9 = 0x00000009;
enum IMAGE_REL_BASED_DIR64 = 0x0000000a;
enum IMAGE_REL_BASED_IA64_IMM64 = 0x00000009;
enum IMAGE_REL_BASED_MIPS_JMPADDR = 0x00000005;
enum IMAGE_REL_BASED_MIPS_JMPADDR16 = 0x00000009;
enum IMAGE_REL_BASED_ARM_MOV32 = 0x00000005;
enum IMAGE_REL_BASED_THUMB_MOV32 = 0x00000007;
enum IMAGE_ARCHIVE_START_SIZE = 0x00000008;
enum IMAGE_ARCHIVE_START = "!<arch>
";
enum IMAGE_ARCHIVE_END = "`
";
enum IMAGE_ARCHIVE_PAD = "
";
enum IMAGE_ARCHIVE_LINKER_MEMBER = "/               ";
enum IMAGE_ARCHIVE_LONGNAMES_MEMBER = "//              ";
enum IMAGE_ARCHIVE_HYBRIDMAP_MEMBER = "/<HYBRIDMAP>/   ";
enum IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 0x0000003c;
enum IMAGE_ORDINAL_FLAG64 = 0x8000000000000000;
enum IMAGE_ORDINAL_FLAG32 = 0x80000000;
enum IMAGE_ORDINAL_FLAG = 0x8000000000000000;
enum IMAGE_RESOURCE_NAME_IS_STRING = 0x80000000;
enum IMAGE_RESOURCE_DATA_IS_DIRECTORY = 0x80000000;
enum IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE = 0x00000001;
enum IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE = 0x00000002;
enum IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER = 0x00000003;
enum IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER = 0x00000004;
enum IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH = 0x00000005;
enum IMAGE_HOT_PATCH_BASE_OBLIGATORY = 0x00000001;
enum IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK = 0x00000002;
enum IMAGE_HOT_PATCH_CHUNK_INVERSE = 0x80000000;
enum IMAGE_HOT_PATCH_CHUNK_OBLIGATORY = 0x40000000;
enum IMAGE_HOT_PATCH_CHUNK_RESERVED = 0x3ff03000;
enum IMAGE_HOT_PATCH_CHUNK_TYPE = 0x000fc000;
enum IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA = 0x00008000;
enum IMAGE_HOT_PATCH_CHUNK_TARGET_RVA = 0x00004000;
enum IMAGE_HOT_PATCH_CHUNK_SIZE = 0x00000fff;
enum IMAGE_HOT_PATCH_NONE = 0x00000000;
enum IMAGE_HOT_PATCH_FUNCTION = 0x0001c000;
enum IMAGE_HOT_PATCH_ABSOLUTE = 0x0002c000;
enum IMAGE_HOT_PATCH_REL32 = 0x0003c000;
enum IMAGE_HOT_PATCH_CALL_TARGET = 0x00044000;
enum IMAGE_HOT_PATCH_INDIRECT = 0x0005c000;
enum IMAGE_HOT_PATCH_NO_CALL_TARGET = 0x00064000;
enum IMAGE_HOT_PATCH_DYNAMIC_VALUE = 0x00078000;
enum IMAGE_GUARD_CF_INSTRUMENTED = 0x00000100;
enum IMAGE_GUARD_CFW_INSTRUMENTED = 0x00000200;
enum IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT = 0x00000400;
enum IMAGE_GUARD_SECURITY_COOKIE_UNUSED = 0x00000800;
enum IMAGE_GUARD_PROTECT_DELAYLOAD_IAT = 0x00001000;
enum IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION = 0x00002000;
enum IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT = 0x00004000;
enum IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION = 0x00008000;
enum IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT = 0x00010000;
enum IMAGE_GUARD_RF_INSTRUMENTED = 0x00020000;
enum IMAGE_GUARD_RF_ENABLE = 0x00040000;
enum IMAGE_GUARD_RF_STRICT = 0x00080000;
enum IMAGE_GUARD_RETPOLINE_PRESENT = 0x00100000;
enum IMAGE_GUARD_EH_CONTINUATION_TABLE_PRESENT = 0x00400000;
enum IMAGE_GUARD_XFG_ENABLED = 0x00800000;
enum IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK = 0xf0000000;
enum IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT = 0x0000001c;
enum IMAGE_GUARD_FLAG_FID_SUPPRESSED = 0x00000001;
enum IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED = 0x00000002;
enum IMAGE_GUARD_FLAG_FID_LANGEXCPTHANDLER = 0x00000004;
enum IMAGE_GUARD_FLAG_FID_XFG = 0x00000008;
enum IMAGE_ENCLAVE_LONG_ID_LENGTH = 0x00000020;
enum IMAGE_ENCLAVE_SHORT_ID_LENGTH = 0x00000010;
enum IMAGE_ENCLAVE_POLICY_DEBUGGABLE = 0x00000001;
enum IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE = 0x00000001;
enum IMAGE_ENCLAVE_IMPORT_MATCH_NONE = 0x00000000;
enum IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID = 0x00000001;
enum IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID = 0x00000002;
enum IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID = 0x00000003;
enum IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID = 0x00000004;
enum IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 0x00000007;
enum IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 0x00000008;
enum IMAGE_DEBUG_TYPE_RESERVED10 = 0x0000000a;
enum IMAGE_DEBUG_TYPE_CLSID = 0x0000000b;
enum IMAGE_DEBUG_TYPE_VC_FEATURE = 0x0000000c;
enum IMAGE_DEBUG_TYPE_POGO = 0x0000000d;
enum IMAGE_DEBUG_TYPE_ILTCG = 0x0000000e;
enum IMAGE_DEBUG_TYPE_MPX = 0x0000000f;
enum IMAGE_DEBUG_TYPE_REPRO = 0x00000010;
enum IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS = 0x00000014;
enum FRAME_FPO = 0x00000000;
enum FRAME_TRAP = 0x00000001;
enum FRAME_TSS = 0x00000002;
enum FRAME_NONFPO = 0x00000003;
enum SIZEOF_RFPO_DATA = 0x00000010;
enum IMAGE_DEBUG_MISC_EXENAME = 0x00000001;
enum IMAGE_SEPARATE_DEBUG_SIGNATURE = 0x00004944;
enum NON_PAGED_DEBUG_SIGNATURE = 0x0000494e;
enum IMAGE_SEPARATE_DEBUG_FLAGS_MASK = 0x00008000;
enum IMAGE_SEPARATE_DEBUG_MISMATCH = 0x00008000;
enum IMPORT_OBJECT_HDR_SIG2 = 0x0000ffff;
enum UNWIND_HISTORY_TABLE_SIZE = 0x0000000c;
enum RTL_RUN_ONCE_CHECK_ONLY = 0x00000001;
enum RTL_RUN_ONCE_ASYNC = 0x00000002;
enum RTL_RUN_ONCE_INIT_FAILED = 0x00000004;
enum RTL_RUN_ONCE_CTX_RESERVED_BITS = 0x00000002;
enum FAST_FAIL_LEGACY_GS_VIOLATION = 0x00000000;
enum FAST_FAIL_VTGUARD_CHECK_FAILURE = 0x00000001;
enum FAST_FAIL_STACK_COOKIE_CHECK_FAILURE = 0x00000002;
enum FAST_FAIL_CORRUPT_LIST_ENTRY = 0x00000003;
enum FAST_FAIL_INCORRECT_STACK = 0x00000004;
enum FAST_FAIL_INVALID_ARG = 0x00000005;
enum FAST_FAIL_GS_COOKIE_INIT = 0x00000006;
enum FAST_FAIL_FATAL_APP_EXIT = 0x00000007;
enum FAST_FAIL_RANGE_CHECK_FAILURE = 0x00000008;
enum FAST_FAIL_UNSAFE_REGISTRY_ACCESS = 0x00000009;
enum FAST_FAIL_GUARD_ICALL_CHECK_FAILURE = 0x0000000a;
enum FAST_FAIL_GUARD_WRITE_CHECK_FAILURE = 0x0000000b;
enum FAST_FAIL_INVALID_FIBER_SWITCH = 0x0000000c;
enum FAST_FAIL_INVALID_SET_OF_CONTEXT = 0x0000000d;
enum FAST_FAIL_INVALID_REFERENCE_COUNT = 0x0000000e;
enum FAST_FAIL_INVALID_JUMP_BUFFER = 0x00000012;
enum FAST_FAIL_MRDATA_MODIFIED = 0x00000013;
enum FAST_FAIL_CERTIFICATION_FAILURE = 0x00000014;
enum FAST_FAIL_INVALID_EXCEPTION_CHAIN = 0x00000015;
enum FAST_FAIL_CRYPTO_LIBRARY = 0x00000016;
enum FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT = 0x00000017;
enum FAST_FAIL_INVALID_IMAGE_BASE = 0x00000018;
enum FAST_FAIL_DLOAD_PROTECTION_FAILURE = 0x00000019;
enum FAST_FAIL_UNSAFE_EXTENSION_CALL = 0x0000001a;
enum FAST_FAIL_DEPRECATED_SERVICE_INVOKED = 0x0000001b;
enum FAST_FAIL_INVALID_BUFFER_ACCESS = 0x0000001c;
enum FAST_FAIL_INVALID_BALANCED_TREE = 0x0000001d;
enum FAST_FAIL_INVALID_NEXT_THREAD = 0x0000001e;
enum FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED = 0x0000001f;
enum FAST_FAIL_APCS_DISABLED = 0x00000020;
enum FAST_FAIL_INVALID_IDLE_STATE = 0x00000021;
enum FAST_FAIL_MRDATA_PROTECTION_FAILURE = 0x00000022;
enum FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION = 0x00000023;
enum FAST_FAIL_INVALID_LOCK_STATE = 0x00000024;
enum FAST_FAIL_GUARD_JUMPTABLE = 0x00000025;
enum FAST_FAIL_INVALID_LONGJUMP_TARGET = 0x00000026;
enum FAST_FAIL_INVALID_DISPATCH_CONTEXT = 0x00000027;
enum FAST_FAIL_INVALID_THREAD = 0x00000028;
enum FAST_FAIL_INVALID_SYSCALL_NUMBER = 0x00000029;
enum FAST_FAIL_INVALID_FILE_OPERATION = 0x0000002a;
enum FAST_FAIL_LPAC_ACCESS_DENIED = 0x0000002b;
enum FAST_FAIL_GUARD_SS_FAILURE = 0x0000002c;
enum FAST_FAIL_LOADER_CONTINUITY_FAILURE = 0x0000002d;
enum FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE = 0x0000002e;
enum FAST_FAIL_INVALID_CONTROL_STACK = 0x0000002f;
enum FAST_FAIL_SET_CONTEXT_DENIED = 0x00000030;
enum FAST_FAIL_INVALID_IAT = 0x00000031;
enum FAST_FAIL_HEAP_METADATA_CORRUPTION = 0x00000032;
enum FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION = 0x00000033;
enum FAST_FAIL_LOW_LABEL_ACCESS_DENIED = 0x00000034;
enum FAST_FAIL_ENCLAVE_CALL_FAILURE = 0x00000035;
enum FAST_FAIL_UNHANDLED_LSS_EXCEPTON = 0x00000036;
enum FAST_FAIL_ADMINLESS_ACCESS_DENIED = 0x00000037;
enum FAST_FAIL_UNEXPECTED_CALL = 0x00000038;
enum FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS = 0x00000039;
enum FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR = 0x0000003a;
enum FAST_FAIL_FLAGS_CORRUPTION = 0x0000003b;
enum FAST_FAIL_VEH_CORRUPTION = 0x0000003c;
enum FAST_FAIL_ETW_CORRUPTION = 0x0000003d;
enum FAST_FAIL_RIO_ABORT = 0x0000003e;
enum FAST_FAIL_INVALID_PFN = 0x0000003f;
enum FAST_FAIL_GUARD_ICALL_CHECK_FAILURE_XFG = 0x00000040;
enum FAST_FAIL_CAST_GUARD = 0x00000041;
enum FAST_FAIL_HOST_VISIBILITY_CHANGE = 0x00000042;
enum FAST_FAIL_KERNEL_CET_SHADOW_STACK_ASSIST = 0x00000043;
enum FAST_FAIL_PATCH_CALLBACK_FAILED = 0x00000044;
enum FAST_FAIL_NTDLL_PATCH_FAILED = 0x00000045;
enum FAST_FAIL_INVALID_FLS_DATA = 0x00000046;
enum FAST_FAIL_INVALID_FAST_FAIL_CODE = 0xffffffff;
enum IS_TEXT_UNICODE_DBCS_LEADBYTE = 0x00000400;
enum IS_TEXT_UNICODE_UTF8 = 0x00000800;
enum COMPRESSION_FORMAT_NONE = 0x00000000;
enum COMPRESSION_FORMAT_DEFAULT = 0x00000001;
enum COMPRESSION_FORMAT_LZNT1 = 0x00000002;
enum COMPRESSION_FORMAT_XPRESS = 0x00000003;
enum COMPRESSION_FORMAT_XPRESS_HUFF = 0x00000004;
enum COMPRESSION_FORMAT_XP10 = 0x00000005;
enum COMPRESSION_ENGINE_STANDARD = 0x00000000;
enum COMPRESSION_ENGINE_MAXIMUM = 0x00000100;
enum COMPRESSION_ENGINE_HIBER = 0x00000200;
enum SEF_AI_USE_EXTRA_PARAMS = 0x00000800;
enum SEF_FORCE_USER_MODE = 0x00002000;
enum MESSAGE_RESOURCE_UNICODE = 0x00000001;
enum MESSAGE_RESOURCE_UTF8 = 0x00000002;
enum VER_EQUAL = 0x00000001;
enum VER_GREATER = 0x00000002;
enum VER_GREATER_EQUAL = 0x00000003;
enum VER_LESS = 0x00000004;
enum VER_LESS_EQUAL = 0x00000005;
enum VER_AND = 0x00000006;
enum VER_OR = 0x00000007;
enum VER_CONDITION_MASK = 0x00000007;
enum VER_NUM_BITS_PER_CONDITION_MASK = 0x00000003;
enum VER_NT_WORKSTATION = 0x00000001;
enum VER_NT_DOMAIN_CONTROLLER = 0x00000002;
enum VER_NT_SERVER = 0x00000003;
enum RTL_UMS_VERSION = 0x00000100;
enum VRL_PREDEFINED_CLASS_BEGIN = 0x00000001;
enum VRL_CUSTOM_CLASS_BEGIN = 0x00000100;
enum VRL_ENABLE_KERNEL_BREAKS = 0x80000000;
enum CTMF_INCLUDE_APPCONTAINER = 0x00000001;
enum CTMF_INCLUDE_LPAC = 0x00000002;
enum FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN = 0x00000001;
enum WRITE_NV_MEMORY_FLAG_FLUSH = 0x00000001;
enum WRITE_NV_MEMORY_FLAG_NON_TEMPORAL = 0x00000002;
enum WRITE_NV_MEMORY_FLAG_NO_DRAIN = 0x00000100;
enum FILL_NV_MEMORY_FLAG_FLUSH = 0x00000001;
enum FILL_NV_MEMORY_FLAG_NON_TEMPORAL = 0x00000002;
enum FILL_NV_MEMORY_FLAG_NO_DRAIN = 0x00000100;
enum IMAGE_POLICY_METADATA_VERSION = 0x00000001;
enum IMAGE_POLICY_SECTION_NAME = ".tPolicy";
enum RTL_VIRTUAL_UNWIND2_VALIDATE_PAC = 0x00000001;
enum RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO = 0x01000000;
enum RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN = 0x02000000;
enum RTL_CRITICAL_SECTION_FLAG_STATIC_INIT = 0x04000000;
enum RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE = 0x08000000;
enum RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO = 0x10000000;
enum RTL_CRITICAL_SECTION_ALL_FLAG_BITS = 0xff000000;
enum RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT = 0x00000001;
enum RTL_CONDITION_VARIABLE_LOCKMODE_SHARED = 0x00000001;
enum HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION = 0x00000001;
enum WT_EXECUTEINUITHREAD = 0x00000002;
enum WT_EXECUTEINPERSISTENTIOTHREAD = 0x00000040;
enum WT_EXECUTEINLONGTHREAD = 0x00000010;
enum WT_EXECUTEDELETEWAIT = 0x00000008;
enum ACTIVATION_CONTEXT_PATH_TYPE_NONE = 0x00000001;
enum ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = 0x00000002;
enum ACTIVATION_CONTEXT_PATH_TYPE_URL = 0x00000003;
enum ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = 0x00000004;
enum CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID = 0x00000001;
enum PERFORMANCE_DATA_VERSION = 0x00000001;
enum READ_THREAD_PROFILING_FLAG_DISPATCHING = 0x00000001;
enum READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS = 0x00000002;
enum UNIFIEDBUILDREVISION_KEY = "\\Registry\\Machine\\Software\\Microsoft\\Windows NT\\CurrentVersion";
enum UNIFIEDBUILDREVISION_VALUE = "UBR";
enum UNIFIEDBUILDREVISION_MIN = 0x00000000;
enum DEVICEFAMILYDEVICEFORM_KEY = "\\Registry\\Machine\\Software\\Microsoft\\Windows NT\\CurrentVersion\\OEM";
enum DEVICEFAMILYDEVICEFORM_VALUE = "DeviceForm";
enum DLL_PROCESS_ATTACH = 0x00000001;
enum DLL_THREAD_ATTACH = 0x00000002;
enum DLL_THREAD_DETACH = 0x00000003;
enum DLL_PROCESS_DETACH = 0x00000000;
enum EVENTLOG_FORWARDS_READ = 0x00000004;
enum EVENTLOG_BACKWARDS_READ = 0x00000008;
enum EVENTLOG_START_PAIRED_EVENT = 0x00000001;
enum EVENTLOG_END_PAIRED_EVENT = 0x00000002;
enum EVENTLOG_END_ALL_PAIRED_EVENTS = 0x00000004;
enum EVENTLOG_PAIRED_EVENT_ACTIVE = 0x00000008;
enum EVENTLOG_PAIRED_EVENT_INACTIVE = 0x00000010;
enum MAXLOGICALLOGNAMESIZE = 0x00000100;
enum REG_REFRESH_HIVE = 0x00000002;
enum REG_NO_LAZY_FLUSH = 0x00000004;
enum REG_APP_HIVE = 0x00000010;
enum REG_PROCESS_PRIVATE = 0x00000020;
enum REG_START_JOURNAL = 0x00000040;
enum REG_HIVE_EXACT_FILE_GROWTH = 0x00000080;
enum REG_HIVE_NO_RM = 0x00000100;
enum REG_HIVE_SINGLE_LOG = 0x00000200;
enum REG_BOOT_HIVE = 0x00000400;
enum REG_LOAD_HIVE_OPEN_HANDLE = 0x00000800;
enum REG_FLUSH_HIVE_FILE_GROWTH = 0x00001000;
enum REG_OPEN_READ_ONLY = 0x00002000;
enum REG_IMMUTABLE = 0x00004000;
enum REG_NO_IMPERSONATION_FALLBACK = 0x00008000;
enum REG_APP_HIVE_OPEN_READ_ONLY = 0x00002000;
enum REG_FORCE_UNLOAD = 0x00000001;
enum REG_UNLOAD_LEGAL_FLAGS = 0x00000001;
enum SERVICE_USER_SERVICE = 0x00000040;
enum SERVICE_USERSERVICE_INSTANCE = 0x00000080;
enum SERVICE_INTERACTIVE_PROCESS = 0x00000100;
enum SERVICE_PKG_SERVICE = 0x00000200;
enum CM_SERVICE_NETWORK_BOOT_LOAD = 0x00000001;
enum CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD = 0x00000002;
enum CM_SERVICE_USB_DISK_BOOT_LOAD = 0x00000004;
enum CM_SERVICE_SD_DISK_BOOT_LOAD = 0x00000008;
enum CM_SERVICE_USB3_DISK_BOOT_LOAD = 0x00000010;
enum CM_SERVICE_MEASURED_BOOT_LOAD = 0x00000020;
enum CM_SERVICE_VERIFIER_BOOT_LOAD = 0x00000040;
enum CM_SERVICE_WINPE_BOOT_LOAD = 0x00000080;
enum CM_SERVICE_RAM_DISK_BOOT_LOAD = 0x00000100;
enum TAPE_PSEUDO_LOGICAL_POSITION = 0x00000002;
enum TAPE_PSEUDO_LOGICAL_BLOCK = 0x00000003;
enum TAPE_DRIVE_FIXED = 0x00000001;
enum TAPE_DRIVE_SELECT = 0x00000002;
enum TAPE_DRIVE_INITIATOR = 0x00000004;
enum TAPE_DRIVE_ERASE_SHORT = 0x00000010;
enum TAPE_DRIVE_ERASE_LONG = 0x00000020;
enum TAPE_DRIVE_ERASE_BOP_ONLY = 0x00000040;
enum TAPE_DRIVE_ERASE_IMMEDIATE = 0x00000080;
enum TAPE_DRIVE_TAPE_CAPACITY = 0x00000100;
enum TAPE_DRIVE_TAPE_REMAINING = 0x00000200;
enum TAPE_DRIVE_FIXED_BLOCK = 0x00000400;
enum TAPE_DRIVE_VARIABLE_BLOCK = 0x00000800;
enum TAPE_DRIVE_WRITE_PROTECT = 0x00001000;
enum TAPE_DRIVE_EOT_WZ_SIZE = 0x00002000;
enum TAPE_DRIVE_ECC = 0x00010000;
enum TAPE_DRIVE_COMPRESSION = 0x00020000;
enum TAPE_DRIVE_PADDING = 0x00040000;
enum TAPE_DRIVE_REPORT_SMKS = 0x00080000;
enum TAPE_DRIVE_GET_ABSOLUTE_BLK = 0x00100000;
enum TAPE_DRIVE_GET_LOGICAL_BLK = 0x00200000;
enum TAPE_DRIVE_SET_EOT_WZ_SIZE = 0x00400000;
enum TAPE_DRIVE_EJECT_MEDIA = 0x01000000;
enum TAPE_DRIVE_CLEAN_REQUESTS = 0x02000000;
enum TAPE_DRIVE_SET_CMP_BOP_ONLY = 0x04000000;
enum TAPE_DRIVE_RESERVED_BIT = 0x80000000;
enum TAPE_DRIVE_FORMAT = 0xa0000000;
enum TAPE_DRIVE_FORMAT_IMMEDIATE = 0xc0000000;
enum TAPE_DRIVE_HIGH_FEATURES = 0x80000000;
enum TAPE_QUERY_DRIVE_PARAMETERS = 0x00000000;
enum TAPE_QUERY_MEDIA_CAPACITY = 0x00000001;
enum TAPE_CHECK_FOR_DRIVE_PROBLEM = 0x00000002;
enum TAPE_QUERY_IO_ERROR_DATA = 0x00000003;
enum TAPE_QUERY_DEVICE_ERROR_DATA = 0x00000004;
enum TRANSACTIONMANAGER_QUERY_INFORMATION = 0x00000001;
enum TRANSACTIONMANAGER_SET_INFORMATION = 0x00000002;
enum TRANSACTIONMANAGER_RECOVER = 0x00000004;
enum TRANSACTIONMANAGER_RENAME = 0x00000008;
enum TRANSACTIONMANAGER_CREATE_RM = 0x00000010;
enum TRANSACTIONMANAGER_BIND_TRANSACTION = 0x00000020;
enum TRANSACTION_QUERY_INFORMATION = 0x00000001;
enum TRANSACTION_SET_INFORMATION = 0x00000002;
enum TRANSACTION_ENLIST = 0x00000004;
enum TRANSACTION_COMMIT = 0x00000008;
enum TRANSACTION_ROLLBACK = 0x00000010;
enum TRANSACTION_PROPAGATE = 0x00000020;
enum TRANSACTION_RIGHT_RESERVED1 = 0x00000040;
enum RESOURCEMANAGER_QUERY_INFORMATION = 0x00000001;
enum RESOURCEMANAGER_SET_INFORMATION = 0x00000002;
enum RESOURCEMANAGER_RECOVER = 0x00000004;
enum RESOURCEMANAGER_ENLIST = 0x00000008;
enum RESOURCEMANAGER_GET_NOTIFICATION = 0x00000010;
enum RESOURCEMANAGER_REGISTER_PROTOCOL = 0x00000020;
enum RESOURCEMANAGER_COMPLETE_PROPAGATION = 0x00000040;
enum ENLISTMENT_QUERY_INFORMATION = 0x00000001;
enum ENLISTMENT_SET_INFORMATION = 0x00000002;
enum ENLISTMENT_RECOVER = 0x00000004;
enum ENLISTMENT_SUBORDINATE_RIGHTS = 0x00000008;
enum ENLISTMENT_SUPERIOR_RIGHTS = 0x00000010;
enum PcTeb = 0x00000018;
enum ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = 0x00000001;
enum ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = 0x00000002;
enum ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = 0x00000003;
enum ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = 0x00000004;
enum ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = 0x00000005;
enum ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = 0x00000006;
enum ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = 0x00000007;
enum ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = 0x00000008;
enum ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = 0x00000009;
enum ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = 0x0000000a;
enum ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = 0x0000000b;
enum ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES = 0x0000000c;
enum BSF_MSGSRV32ISOK = 0x80000000;
enum BSF_MSGSRV32ISOK_BIT = 0x0000001f;
enum DBT_APPYBEGIN = 0x00000000;
enum DBT_APPYEND = 0x00000001;
enum DBT_DEVNODES_CHANGED = 0x00000007;
enum DBT_QUERYCHANGECONFIG = 0x00000017;
enum DBT_CONFIGCHANGED = 0x00000018;
enum DBT_CONFIGCHANGECANCELED = 0x00000019;
enum DBT_MONITORCHANGE = 0x0000001b;
enum DBT_SHELLLOGGEDON = 0x00000020;
enum DBT_CONFIGMGAPI32 = 0x00000022;
enum DBT_VXDINITCOMPLETE = 0x00000023;
enum DBT_VOLLOCKQUERYLOCK = 0x00008041;
enum DBT_VOLLOCKLOCKTAKEN = 0x00008042;
enum DBT_VOLLOCKLOCKFAILED = 0x00008043;
enum DBT_VOLLOCKQUERYUNLOCK = 0x00008044;
enum DBT_VOLLOCKLOCKRELEASED = 0x00008045;
enum DBT_VOLLOCKUNLOCKFAILED = 0x00008046;
enum LOCKP_ALLOW_WRITES = 0x00000001;
enum LOCKP_FAIL_WRITES = 0x00000000;
enum LOCKP_FAIL_MEM_MAPPING = 0x00000002;
enum LOCKP_ALLOW_MEM_MAPPING = 0x00000000;
enum LOCKP_USER_MASK = 0x00000003;
enum LOCKP_LOCK_FOR_FORMAT = 0x00000004;
enum LOCKF_LOGICAL_LOCK = 0x00000000;
enum LOCKF_PHYSICAL_LOCK = 0x00000001;
enum DBT_NO_DISK_SPACE = 0x00000047;
enum DBT_LOW_DISK_SPACE = 0x00000048;
enum DBT_CONFIGMGPRIVATE = 0x00007fff;
enum DBT_DEVICEARRIVAL = 0x00008000;
enum DBT_DEVICEQUERYREMOVE = 0x00008001;
enum DBT_DEVICEQUERYREMOVEFAILED = 0x00008002;
enum DBT_DEVICEREMOVEPENDING = 0x00008003;
enum DBT_DEVICEREMOVECOMPLETE = 0x00008004;
enum DBT_DEVICETYPESPECIFIC = 0x00008005;
enum DBT_CUSTOMEVENT = 0x00008006;
enum DBT_DEVTYP_DEVNODE = 0x00000001;
enum DBT_DEVTYP_NET = 0x00000004;
enum DBTF_RESOURCE = 0x00000001;
enum DBTF_XPORT = 0x00000002;
enum DBTF_SLOWNET = 0x00000004;
enum DBT_VPOWERDAPI = 0x00008100;
enum DBT_USERDEFINED = 0x0000ffff;
enum GUID_IO_VOLUME_CHANGE = GUID(0x7373654a, 0x812a, 0x11d0, [0xbe, 0xc7, 0x8, 0x0, 0x2b, 0xe2, 0x9, 0x2f]);
enum GUID_IO_VOLUME_DISMOUNT = GUID(0xd16a55e8, 0x1059, 0x11d2, [0x8f, 0xfd, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_DISMOUNT_FAILED = GUID(0xe3c5b178, 0x105d, 0x11d2, [0x8f, 0xfd, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_MOUNT = GUID(0xb5804878, 0x1a96, 0x11d2, [0x8f, 0xfd, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_LOCK = GUID(0x50708874, 0xc9af, 0x11d1, [0x8f, 0xef, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_LOCK_FAILED = GUID(0xae2eed10, 0xba8, 0x11d2, [0x8f, 0xfb, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_UNLOCK = GUID(0x9a8c3d68, 0xd0cb, 0x11d1, [0x8f, 0xef, 0x0, 0xa0, 0xc9, 0xa0, 0x6d, 0x32]);
enum GUID_IO_VOLUME_NAME_CHANGE = GUID(0x2de97f83, 0x4c06, 0x11d2, [0xa5, 0x32, 0x0, 0x60, 0x97, 0x13, 0x5, 0x5a]);
enum GUID_IO_VOLUME_NEED_CHKDSK = GUID(0x799a0960, 0xa0b, 0x4e03, [0xad, 0x88, 0x2f, 0xa7, 0xc6, 0xce, 0x74, 0x8a]);
enum GUID_IO_VOLUME_WORM_NEAR_FULL = GUID(0xf3bfff82, 0xf3de, 0x48d2, [0xaf, 0x95, 0x45, 0x7f, 0x80, 0xb7, 0x63, 0xf2]);
enum GUID_IO_VOLUME_WEARING_OUT = GUID(0x873113ca, 0x1486, 0x4508, [0x82, 0xac, 0xc3, 0xb2, 0xe5, 0x29, 0x7a, 0xaa]);
enum GUID_IO_VOLUME_FORCE_CLOSED = GUID(0x411ad84f, 0x433e, 0x4dc2, [0xa5, 0xae, 0x4a, 0x2d, 0x1a, 0x2d, 0xe6, 0x54]);
enum GUID_IO_VOLUME_INFO_MAKE_COMPAT = GUID(0x3ab9a0d2, 0xef80, 0x45cf, [0x8c, 0xdc, 0xcb, 0xe0, 0x2a, 0x21, 0x29, 0x6]);
enum GUID_IO_VOLUME_PREPARING_EJECT = GUID(0xc79eb16e, 0xdac, 0x4e7a, [0xa8, 0x6c, 0xb2, 0x5c, 0xee, 0xaa, 0x88, 0xf6]);
enum GUID_IO_VOLUME_BACKGROUND_FORMAT = GUID(0xa2e5fc86, 0xd5cd, 0x4038, [0xb2, 0xe3, 0x44, 0x45, 0x6, 0x5c, 0x23, 0x77]);
enum GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE = GUID(0x2de97f84, 0x4c06, 0x11d2, [0xa5, 0x32, 0x0, 0x60, 0x97, 0x13, 0x5, 0x5a]);
enum GUID_IO_VOLUME_UNIQUE_ID_CHANGE = GUID(0xaf39da42, 0x6622, 0x41f5, [0x97, 0xb, 0x13, 0x9d, 0x9, 0x2f, 0xa3, 0xd9]);
enum GUID_IO_VOLUME_FVE_STATUS_CHANGE = GUID(0x62998b2, 0xee1f, 0x4b6a, [0xb8, 0x57, 0xe7, 0x6c, 0xbb, 0xe9, 0xa6, 0xda]);
enum GUID_IO_VOLUME_DEVICE_INTERFACE = GUID(0x53f5630d, 0xb6bf, 0x11d0, [0x94, 0xf2, 0x0, 0xa0, 0xc9, 0x1e, 0xfb, 0x8b]);
enum GUID_IO_VOLUME_CHANGE_SIZE = GUID(0x3a1625be, 0xad03, 0x49f1, [0x8e, 0xf8, 0x6b, 0xba, 0xc1, 0x82, 0xd1, 0xfd]);
enum GUID_IO_MEDIA_ARRIVAL = GUID(0xd07433c0, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_MEDIA_REMOVAL = GUID(0xd07433c1, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_CDROM_EXCLUSIVE_LOCK = GUID(0xbc56c139, 0x7a10, 0x47ee, [0xa2, 0x94, 0x4c, 0x6a, 0x38, 0xf0, 0x14, 0x9a]);
enum GUID_IO_CDROM_EXCLUSIVE_UNLOCK = GUID(0xa3b6d27d, 0x5e35, 0x4885, [0x81, 0xe5, 0xee, 0x18, 0xc0, 0xe, 0xd7, 0x79]);
enum GUID_IO_DEVICE_BECOMING_READY = GUID(0xd07433f0, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_DEVICE_EXTERNAL_REQUEST = GUID(0xd07433d0, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_MEDIA_EJECT_REQUEST = GUID(0xd07433d1, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_DRIVE_REQUIRES_CLEANING = GUID(0x7207877c, 0x90ed, 0x44e5, [0xa0, 0x0, 0x81, 0x42, 0x8d, 0x4c, 0x79, 0xbb]);
enum GUID_IO_TAPE_ERASE = GUID(0x852d11eb, 0x4bb8, 0x4507, [0x9d, 0x9b, 0x41, 0x7c, 0xc2, 0xb1, 0xb4, 0x38]);
enum GUID_DEVICE_EVENT_RBC = GUID(0xd0744792, 0xa98e, 0x11d2, [0x91, 0x7a, 0x0, 0xa0, 0xc9, 0x6, 0x8f, 0xf3]);
enum GUID_IO_DISK_CLONE_ARRIVAL = GUID(0x6a61885b, 0x7c39, 0x43dd, [0x9b, 0x56, 0xb8, 0xac, 0x22, 0xa5, 0x49, 0xaa]);
enum GUID_IO_DISK_LAYOUT_CHANGE = GUID(0x11dff54c, 0x8469, 0x41f9, [0xb3, 0xde, 0xef, 0x83, 0x64, 0x87, 0xc5, 0x4a]);
enum GUID_IO_DISK_HEALTH_NOTIFICATION = GUID(0xf1bd644, 0x3916, 0x49c5, [0xb0, 0x63, 0x99, 0x19, 0x40, 0x11, 0x8f, 0xb2]);
enum D3DNTHAL_NUMCLIPVERTICES = 0x00000014;
enum D3DNTHAL_SCENE_CAPTURE_START = 0x00000000;
enum D3DNTHAL_SCENE_CAPTURE_END = 0x00000001;
enum D3DNTHAL_CONTEXT_BAD = 0x0000000000000200;
enum D3DNTHAL_OUTOFCONTEXTS = 0x0000000000000201;
enum D3DNTHAL2_CB32_SETRENDERTARGET = 0x00000001;
enum D3DHAL_STATESETBEGIN = 0x00000000;
enum D3DHAL_STATESETEND = 0x00000001;
enum D3DHAL_STATESETDELETE = 0x00000002;
enum D3DHAL_STATESETEXECUTE = 0x00000003;
enum D3DHAL_STATESETCAPTURE = 0x00000004;
enum D3DNTHALDP2_USERMEMVERTICES = 0x00000001;
enum D3DNTHALDP2_EXECUTEBUFFER = 0x00000002;
enum D3DNTHALDP2_SWAPVERTEXBUFFER = 0x00000004;
enum D3DNTHALDP2_SWAPCOMMANDBUFFER = 0x00000008;
enum D3DNTHALDP2_REQVERTEXBUFSIZE = 0x00000010;
enum D3DNTHALDP2_REQCOMMANDBUFSIZE = 0x00000020;
enum D3DNTHALDP2_VIDMEMVERTEXBUF = 0x00000040;
enum D3DNTHALDP2_VIDMEMCOMMANDBUF = 0x00000080;
enum D3DNTHAL3_CB32_CLEAR2 = 0x00000001;
enum D3DNTHAL3_CB32_RESERVED = 0x00000002;
enum D3DNTHAL3_CB32_VALIDATETEXTURESTAGESTATE = 0x00000004;
enum D3DNTHAL3_CB32_DRAWPRIMITIVES2 = 0x00000008;
enum D3DNTHAL_TSS_RENDERSTATEBASE = 0x00000100;
enum D3DNTHAL_TSS_MAXSTAGES = 0x00000008;
enum D3DNTHAL_TSS_STATESPERSTAGE = 0x00000040;
enum D3DTSS_TEXTUREMAP = 0x00000000;
enum D3DHAL_SAMPLER_MAXSAMP = 0x00000010;
enum D3DHAL_SAMPLER_MAXVERTEXSAMP = 0x00000004;
enum D3DPMISCCAPS_LINEPATTERNREP = 0x00000004;
enum D3DRS_MAXVERTEXSHADERINST = 0x000000c4;
enum D3DRS_MAXPIXELSHADERINST = 0x000000c5;
enum D3DRENDERSTATE_EVICTMANAGEDTEXTURES = 0x0000003d;
enum D3DRENDERSTATE_SCENECAPTURE = 0x0000003e;
enum _NT_D3DRS_DELETERTPATCH = 0x000000a9;
enum D3DINFINITEINSTRUCTIONS = 0xffffffff;
enum D3DNTHAL_STATESETCREATE = 0x00000005;
enum D3DNTCLEAR_COMPUTERECTS = 0x00000008;
enum _NT_RTPATCHFLAG_HASSEGS = 0x00000001;
enum _NT_RTPATCHFLAG_HASINFO = 0x00000002;
enum D3DNTHAL_ROW_WEIGHTS = 0x00000001;
enum D3DNTHAL_COL_WEIGHTS = 0x00000002;
enum DP2BLT_POINT = 0x00000001;
enum DP2BLT_LINEAR = 0x00000002;
enum DDBLT_EXTENDED_PRESENTATION_STRETCHFACTOR = 0x00000010;
enum _NT_D3DGDI2_MAGIC = 0xffffffff;
enum _NT_D3DGDI2_TYPE_GETD3DCAPS8 = 0x00000001;
enum _NT_D3DGDI2_TYPE_GETFORMATCOUNT = 0x00000002;
enum _NT_D3DGDI2_TYPE_GETFORMAT = 0x00000003;
enum _NT_D3DGDI2_TYPE_DXVERSION = 0x00000004;
enum _NT_D3DGDI2_TYPE_DEFERRED_AGP_AWARE = 0x00000018;
enum _NT_D3DGDI2_TYPE_FREE_DEFERRED_AGP = 0x00000019;
enum _NT_D3DGDI2_TYPE_DEFER_AGP_FREES = 0x00000020;
enum _NT_D3DGDI2_TYPE_GETD3DCAPS9 = 0x00000010;
enum _NT_D3DGDI2_TYPE_GETEXTENDEDMODECOUNT = 0x00000011;
enum _NT_D3DGDI2_TYPE_GETEXTENDEDMODE = 0x00000012;
enum _NT_D3DGDI2_TYPE_GETADAPTERGROUP = 0x00000013;
enum _NT_D3DGDI2_TYPE_GETMULTISAMPLEQUALITYLEVELS = 0x00000016;
enum _NT_D3DGDI2_TYPE_GETD3DQUERYCOUNT = 0x00000021;
enum _NT_D3DGDI2_TYPE_GETD3DQUERY = 0x00000022;
enum _NT_D3DGDI2_TYPE_GETDDIVERSION = 0x00000023;
enum DX9_DDI_VERSION = 0x00000004;
enum _NT_D3DDEVCAPS_HWVERTEXBUFFER = 0x02000000;
enum _NT_D3DDEVCAPS_HWINDEXBUFFER = 0x04000000;
enum _NT_D3DDEVCAPS_SUBVOLUMELOCK = 0x08000000;
enum _NT_D3DPMISCCAPS_FOGINFVF = 0x00002000;
enum _NT_D3DFVF_FOG = 0x00002000;
enum D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE = 0x00800000;
enum _NT_D3DVS_MAXINSTRUCTIONCOUNT_V1_1 = 0x00000080;
enum _NT_D3DVS_LABEL_MAX_V3_0 = 0x00000800;
enum _NT_D3DVS_TCRDOUTREG_MAX_V1_1 = 0x00000008;
enum _NT_D3DVS_TCRDOUTREG_MAX_V2_0 = 0x00000008;
enum _NT_D3DVS_TCRDOUTREG_MAX_V2_1 = 0x00000008;
enum _NT_D3DVS_OUTPUTREG_MAX_V3_0 = 0x0000000c;
enum _NT_D3DVS_OUTPUTREG_MAX_SW_DX9 = 0x00000010;
enum _NT_D3DVS_ATTROUTREG_MAX_V1_1 = 0x00000002;
enum _NT_D3DVS_ATTROUTREG_MAX_V2_0 = 0x00000002;
enum _NT_D3DVS_ATTROUTREG_MAX_V2_1 = 0x00000002;
enum _NT_D3DVS_INPUTREG_MAX_V1_1 = 0x00000010;
enum _NT_D3DVS_INPUTREG_MAX_V2_0 = 0x00000010;
enum _NT_D3DVS_INPUTREG_MAX_V2_1 = 0x00000010;
enum _NT_D3DVS_INPUTREG_MAX_V3_0 = 0x00000010;
enum _NT_D3DVS_TEMPREG_MAX_V1_1 = 0x0000000c;
enum _NT_D3DVS_TEMPREG_MAX_V2_0 = 0x0000000c;
enum _NT_D3DVS_TEMPREG_MAX_V2_1 = 0x00000020;
enum _NT_D3DVS_TEMPREG_MAX_V3_0 = 0x00000020;
enum _NT_D3DVS_CONSTREG_MAX_V1_1 = 0x00000060;
enum _NT_D3DVS_CONSTREG_MAX_V2_0 = 0x00002000;
enum _NT_D3DVS_CONSTREG_MAX_V2_1 = 0x00002000;
enum _NT_D3DVS_CONSTREG_MAX_V3_0 = 0x00002000;
enum _NT_D3DVS_CONSTINTREG_MAX_SW_DX9 = 0x00000800;
enum _NT_D3DVS_CONSTINTREG_MAX_V2_0 = 0x00000010;
enum _NT_D3DVS_CONSTINTREG_MAX_V2_1 = 0x00000010;
enum _NT_D3DVS_CONSTINTREG_MAX_V3_0 = 0x00000010;
enum _NT_D3DVS_CONSTBOOLREG_MAX_SW_DX9 = 0x00000800;
enum _NT_D3DVS_CONSTBOOLREG_MAX_V2_0 = 0x00000010;
enum _NT_D3DVS_CONSTBOOLREG_MAX_V2_1 = 0x00000010;
enum _NT_D3DVS_CONSTBOOLREG_MAX_V3_0 = 0x00000010;
enum _NT_D3DVS_ADDRREG_MAX_V1_1 = 0x00000001;
enum _NT_D3DVS_ADDRREG_MAX_V2_0 = 0x00000001;
enum _NT_D3DVS_ADDRREG_MAX_V2_1 = 0x00000001;
enum _NT_D3DVS_ADDRREG_MAX_V3_0 = 0x00000001;
enum _NT_D3DVS_MAXLOOPSTEP_V2_0 = 0x00000080;
enum _NT_D3DVS_MAXLOOPSTEP_V2_1 = 0x00000080;
enum _NT_D3DVS_MAXLOOPSTEP_V3_0 = 0x00000080;
enum _NT_D3DVS_MAXLOOPINITVALUE_V2_0 = 0x000000ff;
enum _NT_D3DVS_MAXLOOPINITVALUE_V2_1 = 0x000000ff;
enum _NT_D3DVS_MAXLOOPINITVALUE_V3_0 = 0x000000ff;
enum _NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_0 = 0x000000ff;
enum _NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_1 = 0x000000ff;
enum _NT_D3DVS_MAXLOOPITERATIONCOUNT_V3_0 = 0x000000ff;
enum _NT_D3DVS_PREDICATE_MAX_V2_1 = 0x00000001;
enum _NT_D3DVS_PREDICATE_MAX_V3_0 = 0x00000001;
enum _NT_D3DPS_INPUTREG_MAX_V1_1 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V1_2 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V1_3 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V1_4 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V2_0 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V2_1 = 0x00000002;
enum _NT_D3DPS_INPUTREG_MAX_V3_0 = 0x0000000c;
enum _NT_D3DPS_TEMPREG_MAX_V1_1 = 0x00000002;
enum _NT_D3DPS_TEMPREG_MAX_V1_2 = 0x00000002;
enum _NT_D3DPS_TEMPREG_MAX_V1_3 = 0x00000002;
enum _NT_D3DPS_TEMPREG_MAX_V1_4 = 0x00000006;
enum _NT_D3DPS_TEMPREG_MAX_V2_0 = 0x0000000c;
enum _NT_D3DPS_TEMPREG_MAX_V2_1 = 0x00000020;
enum _NT_D3DPS_TEMPREG_MAX_V3_0 = 0x00000020;
enum _NT_D3DPS_TEXTUREREG_MAX_V1_1 = 0x00000004;
enum _NT_D3DPS_TEXTUREREG_MAX_V1_2 = 0x00000004;
enum _NT_D3DPS_TEXTUREREG_MAX_V1_3 = 0x00000004;
enum _NT_D3DPS_TEXTUREREG_MAX_V1_4 = 0x00000006;
enum _NT_D3DPS_TEXTUREREG_MAX_V2_0 = 0x00000008;
enum _NT_D3DPS_TEXTUREREG_MAX_V2_1 = 0x00000008;
enum _NT_D3DPS_TEXTUREREG_MAX_V3_0 = 0x00000000;
enum _NT_D3DPS_COLOROUT_MAX_V2_0 = 0x00000004;
enum _NT_D3DPS_COLOROUT_MAX_V2_1 = 0x00000004;
enum _NT_D3DPS_COLOROUT_MAX_V3_0 = 0x00000004;
enum _NT_D3DPS_PREDICATE_MAX_V2_1 = 0x00000001;
enum _NT_D3DPS_PREDICATE_MAX_V3_0 = 0x00000001;
enum _NT_D3DPS_CONSTREG_MAX_SW_DX9 = 0x00002000;
enum _NT_D3DPS_CONSTREG_MAX_V1_1 = 0x00000008;
enum _NT_D3DPS_CONSTREG_MAX_V1_2 = 0x00000008;
enum _NT_D3DPS_CONSTREG_MAX_V1_3 = 0x00000008;
enum _NT_D3DPS_CONSTREG_MAX_V1_4 = 0x00000008;
enum _NT_D3DPS_CONSTREG_MAX_V2_0 = 0x00000020;
enum _NT_D3DPS_CONSTREG_MAX_V2_1 = 0x00000020;
enum _NT_D3DPS_CONSTREG_MAX_V3_0 = 0x000000e0;
enum _NT_D3DPS_CONSTBOOLREG_MAX_SW_DX9 = 0x00000800;
enum _NT_D3DPS_CONSTBOOLREG_MAX_V2_1 = 0x00000010;
enum _NT_D3DPS_CONSTBOOLREG_MAX_V3_0 = 0x00000010;
enum _NT_D3DPS_CONSTINTREG_MAX_SW_DX9 = 0x00000800;
enum _NT_D3DPS_CONSTINTREG_MAX_V2_1 = 0x00000010;
enum _NT_D3DPS_CONSTINTREG_MAX_V3_0 = 0x00000010;
enum _NT_D3DPS_MAXLOOPSTEP_V2_1 = 0x00000080;
enum _NT_D3DPS_MAXLOOPSTEP_V3_0 = 0x00000080;
enum _NT_D3DPS_MAXLOOPINITVALUE_V2_1 = 0x000000ff;
enum _NT_D3DPS_MAXLOOPINITVALUE_V3_0 = 0x000000ff;
enum _NT_D3DPS_MAXLOOPITERATIONCOUNT_V2_1 = 0x000000ff;
enum _NT_D3DPS_MAXLOOPITERATIONCOUNT_V3_0 = 0x000000ff;
enum _NT_D3DPS_INPUTREG_MAX_DX8 = 0x00000008;
enum _NT_D3DPS_TEMPREG_MAX_DX8 = 0x00000008;
enum _NT_D3DPS_CONSTREG_MAX_DX8 = 0x00000008;
enum _NT_D3DPS_TEXTUREREG_MAX_DX8 = 0x00000008;
enum D3DVSDT_FLOAT1 = 0x00000000;
enum D3DVSDT_FLOAT2 = 0x00000001;
enum D3DVSDT_FLOAT3 = 0x00000002;
enum D3DVSDT_FLOAT4 = 0x00000003;
enum D3DVSDT_D3DCOLOR = 0x00000004;
enum D3DVSDT_UBYTE4 = 0x00000005;
enum D3DVSDT_SHORT2 = 0x00000006;
enum D3DVSDT_SHORT4 = 0x00000007;
enum D3DVSDE_POSITION = 0x00000000;
enum D3DVSDE_BLENDWEIGHT = 0x00000001;
enum D3DVSDE_BLENDINDICES = 0x00000002;
enum D3DVSDE_NORMAL = 0x00000003;
enum D3DVSDE_PSIZE = 0x00000004;
enum D3DVSDE_DIFFUSE = 0x00000005;
enum D3DVSDE_SPECULAR = 0x00000006;
enum D3DVSDE_TEXCOORD0 = 0x00000007;
enum D3DVSDE_TEXCOORD1 = 0x00000008;
enum D3DVSDE_TEXCOORD2 = 0x00000009;
enum D3DVSDE_TEXCOORD3 = 0x0000000a;
enum D3DVSDE_TEXCOORD4 = 0x0000000b;
enum D3DVSDE_TEXCOORD5 = 0x0000000c;
enum D3DVSDE_TEXCOORD6 = 0x0000000d;
enum D3DVSDE_TEXCOORD7 = 0x0000000e;
enum D3DVSDE_POSITION2 = 0x0000000f;
enum D3DVSDE_NORMAL2 = 0x00000010;
enum D3DVSD_TOKENTYPESHIFT = 0x0000001d;
enum D3DVSD_STREAMNUMBERSHIFT = 0x00000000;
enum D3DVSD_DATALOADTYPESHIFT = 0x0000001c;
enum D3DVSD_DATATYPESHIFT = 0x00000010;
enum D3DVSD_SKIPCOUNTSHIFT = 0x00000010;
enum D3DVSD_VERTEXREGSHIFT = 0x00000000;
enum D3DVSD_VERTEXREGINSHIFT = 0x00000014;
enum D3DVSD_CONSTCOUNTSHIFT = 0x00000019;
enum D3DVSD_CONSTADDRESSSHIFT = 0x00000000;
enum D3DVSD_CONSTRSSHIFT = 0x00000010;
enum D3DVSD_EXTCOUNTSHIFT = 0x00000018;
enum D3DVSD_EXTINFOSHIFT = 0x00000000;
enum D3DVSD_STREAMTESSSHIFT = 0x0000001c;
enum DIRECT3D_VERSION = 0x00000700;
enum D3DTRANSFORMCAPS_CLIP = 0x00000001;
enum D3DLIGHTINGMODEL_RGB = 0x00000001;
enum D3DLIGHTINGMODEL_MONO = 0x00000002;
enum D3DLIGHTCAPS_POINT = 0x00000001;
enum D3DLIGHTCAPS_SPOT = 0x00000002;
enum D3DLIGHTCAPS_DIRECTIONAL = 0x00000004;
enum D3DLIGHTCAPS_PARALLELPOINT = 0x00000008;
enum D3DLIGHTCAPS_GLSPOT = 0x00000010;
enum D3DPMISCCAPS_MASKPLANES = 0x00000001;
enum D3DPMISCCAPS_MASKZ = 0x00000002;
enum D3DPMISCCAPS_CONFORMANT = 0x00000008;
enum D3DPMISCCAPS_CULLNONE = 0x00000010;
enum D3DPMISCCAPS_CULLCW = 0x00000020;
enum D3DPMISCCAPS_CULLCCW = 0x00000040;
enum D3DPRASTERCAPS_DITHER = 0x00000001;
enum D3DPRASTERCAPS_ROP2 = 0x00000002;
enum D3DPRASTERCAPS_XOR = 0x00000004;
enum D3DPRASTERCAPS_PAT = 0x00000008;
enum D3DPRASTERCAPS_ZTEST = 0x00000010;
enum D3DPRASTERCAPS_SUBPIXEL = 0x00000020;
enum D3DPRASTERCAPS_SUBPIXELX = 0x00000040;
enum D3DPRASTERCAPS_FOGVERTEX = 0x00000080;
enum D3DPRASTERCAPS_FOGTABLE = 0x00000100;
enum D3DPRASTERCAPS_STIPPLE = 0x00000200;
enum D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT = 0x00000400;
enum D3DPRASTERCAPS_ANTIALIASSORTINDEPENDENT = 0x00000800;
enum D3DPRASTERCAPS_ANTIALIASEDGES = 0x00001000;
enum D3DPRASTERCAPS_MIPMAPLODBIAS = 0x00002000;
enum D3DPRASTERCAPS_ZBIAS = 0x00004000;
enum D3DPRASTERCAPS_ZBUFFERLESSHSR = 0x00008000;
enum D3DPRASTERCAPS_FOGRANGE = 0x00010000;
enum D3DPRASTERCAPS_ANISOTROPY = 0x00020000;
enum D3DPRASTERCAPS_WBUFFER = 0x00040000;
enum D3DPRASTERCAPS_TRANSLUCENTSORTINDEPENDENT = 0x00080000;
enum D3DPRASTERCAPS_WFOG = 0x00100000;
enum D3DPRASTERCAPS_ZFOG = 0x00200000;
enum D3DPCMPCAPS_NEVER = 0x00000001;
enum D3DPCMPCAPS_LESS = 0x00000002;
enum D3DPCMPCAPS_EQUAL = 0x00000004;
enum D3DPCMPCAPS_LESSEQUAL = 0x00000008;
enum D3DPCMPCAPS_GREATER = 0x00000010;
enum D3DPCMPCAPS_NOTEQUAL = 0x00000020;
enum D3DPCMPCAPS_GREATEREQUAL = 0x00000040;
enum D3DPCMPCAPS_ALWAYS = 0x00000080;
enum D3DPBLENDCAPS_ZERO = 0x00000001;
enum D3DPBLENDCAPS_ONE = 0x00000002;
enum D3DPBLENDCAPS_SRCCOLOR = 0x00000004;
enum D3DPBLENDCAPS_INVSRCCOLOR = 0x00000008;
enum D3DPBLENDCAPS_SRCALPHA = 0x00000010;
enum D3DPBLENDCAPS_INVSRCALPHA = 0x00000020;
enum D3DPBLENDCAPS_DESTALPHA = 0x00000040;
enum D3DPBLENDCAPS_INVDESTALPHA = 0x00000080;
enum D3DPBLENDCAPS_DESTCOLOR = 0x00000100;
enum D3DPBLENDCAPS_INVDESTCOLOR = 0x00000200;
enum D3DPBLENDCAPS_SRCALPHASAT = 0x00000400;
enum D3DPBLENDCAPS_BOTHSRCALPHA = 0x00000800;
enum D3DPBLENDCAPS_BOTHINVSRCALPHA = 0x00001000;
enum D3DPSHADECAPS_COLORFLATMONO = 0x00000001;
enum D3DPSHADECAPS_COLORFLATRGB = 0x00000002;
enum D3DPSHADECAPS_COLORGOURAUDMONO = 0x00000004;
enum D3DPSHADECAPS_COLORGOURAUDRGB = 0x00000008;
enum D3DPSHADECAPS_COLORPHONGMONO = 0x00000010;
enum D3DPSHADECAPS_COLORPHONGRGB = 0x00000020;
enum D3DPSHADECAPS_SPECULARFLATMONO = 0x00000040;
enum D3DPSHADECAPS_SPECULARFLATRGB = 0x00000080;
enum D3DPSHADECAPS_SPECULARGOURAUDMONO = 0x00000100;
enum D3DPSHADECAPS_SPECULARGOURAUDRGB = 0x00000200;
enum D3DPSHADECAPS_SPECULARPHONGMONO = 0x00000400;
enum D3DPSHADECAPS_SPECULARPHONGRGB = 0x00000800;
enum D3DPSHADECAPS_ALPHAFLATBLEND = 0x00001000;
enum D3DPSHADECAPS_ALPHAFLATSTIPPLED = 0x00002000;
enum D3DPSHADECAPS_ALPHAGOURAUDBLEND = 0x00004000;
enum D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED = 0x00008000;
enum D3DPSHADECAPS_ALPHAPHONGBLEND = 0x00010000;
enum D3DPSHADECAPS_ALPHAPHONGSTIPPLED = 0x00020000;
enum D3DPSHADECAPS_FOGFLAT = 0x00040000;
enum D3DPSHADECAPS_FOGGOURAUD = 0x00080000;
enum D3DPSHADECAPS_FOGPHONG = 0x00100000;
enum D3DPTEXTURECAPS_PERSPECTIVE = 0x00000001;
enum D3DPTEXTURECAPS_POW2 = 0x00000002;
enum D3DPTEXTURECAPS_ALPHA = 0x00000004;
enum D3DPTEXTURECAPS_TRANSPARENCY = 0x00000008;
enum D3DPTEXTURECAPS_BORDER = 0x00000010;
enum D3DPTEXTURECAPS_SQUAREONLY = 0x00000020;
enum D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE = 0x00000040;
enum D3DPTEXTURECAPS_ALPHAPALETTE = 0x00000080;
enum D3DPTEXTURECAPS_NONPOW2CONDITIONAL = 0x00000100;
enum D3DPTEXTURECAPS_PROJECTED = 0x00000400;
enum D3DPTEXTURECAPS_CUBEMAP = 0x00000800;
enum D3DPTEXTURECAPS_COLORKEYBLEND = 0x00001000;
enum D3DPTFILTERCAPS_NEAREST = 0x00000001;
enum D3DPTFILTERCAPS_LINEAR = 0x00000002;
enum D3DPTFILTERCAPS_MIPNEAREST = 0x00000004;
enum D3DPTFILTERCAPS_MIPLINEAR = 0x00000008;
enum D3DPTFILTERCAPS_LINEARMIPNEAREST = 0x00000010;
enum D3DPTFILTERCAPS_LINEARMIPLINEAR = 0x00000020;
enum D3DPTFILTERCAPS_MINFPOINT = 0x00000100;
enum D3DPTFILTERCAPS_MINFLINEAR = 0x00000200;
enum D3DPTFILTERCAPS_MINFANISOTROPIC = 0x00000400;
enum D3DPTFILTERCAPS_MIPFPOINT = 0x00010000;
enum D3DPTFILTERCAPS_MIPFLINEAR = 0x00020000;
enum D3DPTFILTERCAPS_MAGFPOINT = 0x01000000;
enum D3DPTFILTERCAPS_MAGFLINEAR = 0x02000000;
enum D3DPTFILTERCAPS_MAGFANISOTROPIC = 0x04000000;
enum D3DPTFILTERCAPS_MAGFAFLATCUBIC = 0x08000000;
enum D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC = 0x10000000;
enum D3DPTBLENDCAPS_DECAL = 0x00000001;
enum D3DPTBLENDCAPS_MODULATE = 0x00000002;
enum D3DPTBLENDCAPS_DECALALPHA = 0x00000004;
enum D3DPTBLENDCAPS_MODULATEALPHA = 0x00000008;
enum D3DPTBLENDCAPS_DECALMASK = 0x00000010;
enum D3DPTBLENDCAPS_MODULATEMASK = 0x00000020;
enum D3DPTBLENDCAPS_COPY = 0x00000040;
enum D3DPTBLENDCAPS_ADD = 0x00000080;
enum D3DPTADDRESSCAPS_WRAP = 0x00000001;
enum D3DPTADDRESSCAPS_MIRROR = 0x00000002;
enum D3DPTADDRESSCAPS_CLAMP = 0x00000004;
enum D3DPTADDRESSCAPS_BORDER = 0x00000008;
enum D3DPTADDRESSCAPS_INDEPENDENTUV = 0x00000010;
enum D3DSTENCILCAPS_KEEP = 0x00000001;
enum D3DSTENCILCAPS_ZERO = 0x00000002;
enum D3DSTENCILCAPS_REPLACE = 0x00000004;
enum D3DSTENCILCAPS_INCRSAT = 0x00000008;
enum D3DSTENCILCAPS_DECRSAT = 0x00000010;
enum D3DSTENCILCAPS_INVERT = 0x00000020;
enum D3DSTENCILCAPS_INCR = 0x00000040;
enum D3DSTENCILCAPS_DECR = 0x00000080;
enum D3DTEXOPCAPS_DISABLE = 0x00000001;
enum D3DTEXOPCAPS_SELECTARG1 = 0x00000002;
enum D3DTEXOPCAPS_SELECTARG2 = 0x00000004;
enum D3DTEXOPCAPS_MODULATE = 0x00000008;
enum D3DTEXOPCAPS_MODULATE2X = 0x00000010;
enum D3DTEXOPCAPS_MODULATE4X = 0x00000020;
enum D3DTEXOPCAPS_ADD = 0x00000040;
enum D3DTEXOPCAPS_ADDSIGNED = 0x00000080;
enum D3DTEXOPCAPS_ADDSIGNED2X = 0x00000100;
enum D3DTEXOPCAPS_SUBTRACT = 0x00000200;
enum D3DTEXOPCAPS_ADDSMOOTH = 0x00000400;
enum D3DTEXOPCAPS_BLENDDIFFUSEALPHA = 0x00000800;
enum D3DTEXOPCAPS_BLENDTEXTUREALPHA = 0x00001000;
enum D3DTEXOPCAPS_BLENDFACTORALPHA = 0x00002000;
enum D3DTEXOPCAPS_BLENDTEXTUREALPHAPM = 0x00004000;
enum D3DTEXOPCAPS_BLENDCURRENTALPHA = 0x00008000;
enum D3DTEXOPCAPS_PREMODULATE = 0x00010000;
enum D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR = 0x00020000;
enum D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA = 0x00040000;
enum D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR = 0x00080000;
enum D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA = 0x00100000;
enum D3DTEXOPCAPS_BUMPENVMAP = 0x00200000;
enum D3DTEXOPCAPS_BUMPENVMAPLUMINANCE = 0x00400000;
enum D3DTEXOPCAPS_DOTPRODUCT3 = 0x00800000;
enum D3DFVFCAPS_TEXCOORDCOUNTMASK = 0x0000ffff;
enum D3DFVFCAPS_DONOTSTRIPELEMENTS = 0x00080000;
enum D3DDD_COLORMODEL = 0x00000001;
enum D3DDD_DEVCAPS = 0x00000002;
enum D3DDD_TRANSFORMCAPS = 0x00000004;
enum D3DDD_LIGHTINGCAPS = 0x00000008;
enum D3DDD_BCLIPPING = 0x00000010;
enum D3DDD_LINECAPS = 0x00000020;
enum D3DDD_TRICAPS = 0x00000040;
enum D3DDD_DEVICERENDERBITDEPTH = 0x00000080;
enum D3DDD_DEVICEZBUFFERBITDEPTH = 0x00000100;
enum D3DDD_MAXBUFFERSIZE = 0x00000200;
enum D3DDD_MAXVERTEXCOUNT = 0x00000400;
enum D3DDEVCAPS_FLOATTLVERTEX = 0x00000001;
enum D3DDEVCAPS_SORTINCREASINGZ = 0x00000002;
enum D3DDEVCAPS_SORTDECREASINGZ = 0x00000004;
enum D3DDEVCAPS_SORTEXACT = 0x00000008;
enum D3DDEVCAPS_EXECUTESYSTEMMEMORY = 0x00000010;
enum D3DDEVCAPS_EXECUTEVIDEOMEMORY = 0x00000020;
enum D3DDEVCAPS_TLVERTEXSYSTEMMEMORY = 0x00000040;
enum D3DDEVCAPS_TLVERTEXVIDEOMEMORY = 0x00000080;
enum D3DDEVCAPS_TEXTURESYSTEMMEMORY = 0x00000100;
enum D3DDEVCAPS_TEXTUREVIDEOMEMORY = 0x00000200;
enum D3DDEVCAPS_DRAWPRIMTLVERTEX = 0x00000400;
enum D3DDEVCAPS_CANRENDERAFTERFLIP = 0x00000800;
enum D3DDEVCAPS_TEXTURENONLOCALVIDMEM = 0x00001000;
enum D3DDEVCAPS_DRAWPRIMITIVES2 = 0x00002000;
enum D3DDEVCAPS_SEPARATETEXTUREMEMORIES = 0x00004000;
enum D3DDEVCAPS_DRAWPRIMITIVES2EX = 0x00008000;
enum D3DDEVCAPS_HWTRANSFORMANDLIGHT = 0x00010000;
enum D3DDEVCAPS_CANBLTSYSTONONLOCAL = 0x00020000;
enum D3DDEVCAPS_HWRASTERIZATION = 0x00080000;
enum D3DVTXPCAPS_TEXGEN = 0x00000001;
enum D3DVTXPCAPS_MATERIALSOURCE7 = 0x00000002;
enum D3DVTXPCAPS_VERTEXFOG = 0x00000004;
enum D3DVTXPCAPS_DIRECTIONALLIGHTS = 0x00000008;
enum D3DVTXPCAPS_POSITIONALLIGHTS = 0x00000010;
enum D3DVTXPCAPS_LOCALVIEWER = 0x00000020;
enum D3DFDS_COLORMODEL = 0x00000001;
enum D3DFDS_GUID = 0x00000002;
enum D3DFDS_HARDWARE = 0x00000004;
enum D3DFDS_TRIANGLES = 0x00000008;
enum D3DFDS_LINES = 0x00000010;
enum D3DFDS_MISCCAPS = 0x00000020;
enum D3DFDS_RASTERCAPS = 0x00000040;
enum D3DFDS_ZCMPCAPS = 0x00000080;
enum D3DFDS_ALPHACMPCAPS = 0x00000100;
enum D3DFDS_SRCBLENDCAPS = 0x00000200;
enum D3DFDS_DSTBLENDCAPS = 0x00000400;
enum D3DFDS_SHADECAPS = 0x00000800;
enum D3DFDS_TEXTURECAPS = 0x00001000;
enum D3DFDS_TEXTUREFILTERCAPS = 0x00002000;
enum D3DFDS_TEXTUREBLENDCAPS = 0x00004000;
enum D3DFDS_TEXTUREADDRESSCAPS = 0x00008000;
enum D3DDEB_BUFSIZE = 0x00000001;
enum D3DDEB_CAPS = 0x00000002;
enum D3DDEB_LPDATA = 0x00000004;
enum D3DDEBCAPS_SYSTEMMEMORY = 0x00000001;
enum D3DDEBCAPS_VIDEOMEMORY = 0x00000002;
enum D3DMAXUSERCLIPPLANES = 0x00000020;
enum D3DCLIPPLANE0 = 0x00000001;
enum D3DCLIPPLANE1 = 0x00000002;
enum D3DCLIPPLANE2 = 0x00000004;
enum D3DCLIPPLANE3 = 0x00000008;
enum D3DCLIPPLANE4 = 0x00000010;
enum D3DCLIPPLANE5 = 0x00000020;
enum D3DCLIP_LEFT = 0x00000001;
enum D3DCLIP_RIGHT = 0x00000002;
enum D3DCLIP_TOP = 0x00000004;
enum D3DCLIP_BOTTOM = 0x00000008;
enum D3DCLIP_FRONT = 0x00000010;
enum D3DCLIP_BACK = 0x00000020;
enum D3DCLIP_GEN0 = 0x00000040;
enum D3DCLIP_GEN1 = 0x00000080;
enum D3DCLIP_GEN2 = 0x00000100;
enum D3DCLIP_GEN3 = 0x00000200;
enum D3DCLIP_GEN4 = 0x00000400;
enum D3DCLIP_GEN5 = 0x00000800;
enum D3DSTATUS_CLIPUNIONLEFT = 0x00000001;
enum D3DSTATUS_CLIPUNIONRIGHT = 0x00000002;
enum D3DSTATUS_CLIPUNIONTOP = 0x00000004;
enum D3DSTATUS_CLIPUNIONBOTTOM = 0x00000008;
enum D3DSTATUS_CLIPUNIONFRONT = 0x00000010;
enum D3DSTATUS_CLIPUNIONBACK = 0x00000020;
enum D3DSTATUS_CLIPUNIONGEN0 = 0x00000040;
enum D3DSTATUS_CLIPUNIONGEN1 = 0x00000080;
enum D3DSTATUS_CLIPUNIONGEN2 = 0x00000100;
enum D3DSTATUS_CLIPUNIONGEN3 = 0x00000200;
enum D3DSTATUS_CLIPUNIONGEN4 = 0x00000400;
enum D3DSTATUS_CLIPUNIONGEN5 = 0x00000800;
enum D3DSTATUS_CLIPINTERSECTIONLEFT = 0x00001000;
enum D3DSTATUS_CLIPINTERSECTIONRIGHT = 0x00002000;
enum D3DSTATUS_CLIPINTERSECTIONTOP = 0x00004000;
enum D3DSTATUS_CLIPINTERSECTIONBOTTOM = 0x00008000;
enum D3DSTATUS_CLIPINTERSECTIONFRONT = 0x00010000;
enum D3DSTATUS_CLIPINTERSECTIONBACK = 0x00020000;
enum D3DSTATUS_CLIPINTERSECTIONGEN0 = 0x00040000;
enum D3DSTATUS_CLIPINTERSECTIONGEN1 = 0x00080000;
enum D3DSTATUS_CLIPINTERSECTIONGEN2 = 0x00100000;
enum D3DSTATUS_CLIPINTERSECTIONGEN3 = 0x00200000;
enum D3DSTATUS_CLIPINTERSECTIONGEN4 = 0x00400000;
enum D3DSTATUS_CLIPINTERSECTIONGEN5 = 0x00800000;
enum D3DSTATUS_ZNOTVISIBLE = 0x01000000;
enum D3DTRANSFORM_CLIPPED = 0x00000001;
enum D3DTRANSFORM_UNCLIPPED = 0x00000002;
enum D3DLIGHT_ACTIVE = 0x00000001;
enum D3DLIGHT_NO_SPECULAR = 0x00000002;
enum D3DCOLOR_MONO = 0x00000001;
enum D3DCOLOR_RGB = 0x00000002;
enum D3DCLEAR_TARGET = 0x00000001;
enum D3DCLEAR_ZBUFFER = 0x00000002;
enum D3DCLEAR_STENCIL = 0x00000004;
enum D3DSTATE_OVERRIDE_BIAS = 0x00000100;
enum D3DRENDERSTATE_WRAPBIAS = 0x00000080;
enum D3DWRAP_U = 0x00000001;
enum D3DWRAP_V = 0x00000002;
enum D3DWRAPCOORD_0 = 0x00000001;
enum D3DWRAPCOORD_1 = 0x00000002;
enum D3DWRAPCOORD_2 = 0x00000004;
enum D3DWRAPCOORD_3 = 0x00000008;
enum D3DPROCESSVERTICES_TRANSFORMLIGHT = 0x00000000;
enum D3DPROCESSVERTICES_TRANSFORM = 0x00000001;
enum D3DPROCESSVERTICES_COPY = 0x00000002;
enum D3DPROCESSVERTICES_OPMASK = 0x00000007;
enum D3DPROCESSVERTICES_UPDATEEXTENTS = 0x00000008;
enum D3DPROCESSVERTICES_NOCOLOR = 0x00000010;
enum D3DTSS_TCI_PASSTHRU = 0x00000000;
enum D3DTSS_TCI_CAMERASPACENORMAL = 0x00010000;
enum D3DTSS_TCI_CAMERASPACEPOSITION = 0x00020000;
enum D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR = 0x00030000;
enum D3DTA_SELECTMASK = 0x0000000f;
enum D3DTA_DIFFUSE = 0x00000000;
enum D3DTA_CURRENT = 0x00000001;
enum D3DTA_TEXTURE = 0x00000002;
enum D3DTA_TFACTOR = 0x00000003;
enum D3DTA_SPECULAR = 0x00000004;
enum D3DTA_COMPLEMENT = 0x00000010;
enum D3DTA_ALPHAREPLICATE = 0x00000020;
enum D3DTRIFLAG_START = 0x00000000;
enum D3DTRIFLAG_ODD = 0x0000001e;
enum D3DTRIFLAG_EVEN = 0x0000001f;
enum D3DTRIFLAG_EDGEENABLE1 = 0x00000100;
enum D3DTRIFLAG_EDGEENABLE2 = 0x00000200;
enum D3DTRIFLAG_EDGEENABLE3 = 0x00000400;
enum D3DSETSTATUS_STATUS = 0x00000001;
enum D3DSETSTATUS_EXTENTS = 0x00000002;
enum D3DCLIPSTATUS_STATUS = 0x00000001;
enum D3DCLIPSTATUS_EXTENTS2 = 0x00000002;
enum D3DCLIPSTATUS_EXTENTS3 = 0x00000004;
enum D3DEXECUTE_CLIPPED = 0x00000001;
enum D3DEXECUTE_UNCLIPPED = 0x00000002;
enum D3DPAL_FREE = 0x00000000;
enum D3DPAL_READONLY = 0x00000040;
enum D3DPAL_RESERVED = 0x00000080;
enum D3DVBCAPS_SYSTEMMEMORY = 0x00000800;
enum D3DVBCAPS_WRITEONLY = 0x00010000;
enum D3DVBCAPS_OPTIMIZED = 0xffffffff80000000;
enum D3DVBCAPS_DONOTCLIP = 0x00000001;
enum D3DVOP_LIGHT = 0x00000400;
enum D3DVOP_TRANSFORM = 0x00000001;
enum D3DVOP_CLIP = 0x00000004;
enum D3DVOP_EXTENTS = 0x00000008;
enum D3DPV_DONOTCOPYDATA = 0x00000001;
enum D3DFVF_RESERVED0 = 0x00000001;
enum D3DFVF_POSITION_MASK = 0x0000000e;
enum D3DFVF_XYZ = 0x00000002;
enum D3DFVF_XYZRHW = 0x00000004;
enum D3DFVF_XYZB1 = 0x00000006;
enum D3DFVF_XYZB2 = 0x00000008;
enum D3DFVF_XYZB3 = 0x0000000a;
enum D3DFVF_XYZB4 = 0x0000000c;
enum D3DFVF_XYZB5 = 0x0000000e;
enum D3DFVF_NORMAL = 0x00000010;
enum D3DFVF_RESERVED1 = 0x00000020;
enum D3DFVF_DIFFUSE = 0x00000040;
enum D3DFVF_SPECULAR = 0x00000080;
enum D3DFVF_TEXCOUNT_MASK = 0x00000f00;
enum D3DFVF_TEXCOUNT_SHIFT = 0x00000008;
enum D3DFVF_TEX0 = 0x00000000;
enum D3DFVF_TEX1 = 0x00000100;
enum D3DFVF_TEX2 = 0x00000200;
enum D3DFVF_TEX3 = 0x00000300;
enum D3DFVF_TEX4 = 0x00000400;
enum D3DFVF_TEX5 = 0x00000500;
enum D3DFVF_TEX6 = 0x00000600;
enum D3DFVF_TEX7 = 0x00000700;
enum D3DFVF_TEX8 = 0x00000800;
enum D3DFVF_RESERVED2 = 0x0000f000;
enum D3DDP_MAXTEXCOORD = 0x00000008;
enum D3DVIS_INSIDE_FRUSTUM = 0x00000000;
enum D3DVIS_INTERSECT_FRUSTUM = 0x00000001;
enum D3DVIS_OUTSIDE_FRUSTUM = 0x00000002;
enum D3DVIS_INSIDE_LEFT = 0x00000000;
enum D3DVIS_INTERSECT_LEFT = 0x00000004;
enum D3DVIS_OUTSIDE_LEFT = 0x00000008;
enum D3DVIS_INSIDE_RIGHT = 0x00000000;
enum D3DVIS_INTERSECT_RIGHT = 0x00000010;
enum D3DVIS_OUTSIDE_RIGHT = 0x00000020;
enum D3DVIS_INSIDE_TOP = 0x00000000;
enum D3DVIS_INTERSECT_TOP = 0x00000040;
enum D3DVIS_OUTSIDE_TOP = 0x00000080;
enum D3DVIS_INSIDE_BOTTOM = 0x00000000;
enum D3DVIS_INTERSECT_BOTTOM = 0x00000100;
enum D3DVIS_OUTSIDE_BOTTOM = 0x00000200;
enum D3DVIS_INSIDE_NEAR = 0x00000000;
enum D3DVIS_INTERSECT_NEAR = 0x00000400;
enum D3DVIS_OUTSIDE_NEAR = 0x00000800;
enum D3DVIS_INSIDE_FAR = 0x00000000;
enum D3DVIS_INTERSECT_FAR = 0x00001000;
enum D3DVIS_OUTSIDE_FAR = 0x00002000;
enum D3DVIS_MASK_FRUSTUM = 0x00000003;
enum D3DVIS_MASK_LEFT = 0x0000000c;
enum D3DVIS_MASK_RIGHT = 0x00000030;
enum D3DVIS_MASK_TOP = 0x000000c0;
enum D3DVIS_MASK_BOTTOM = 0x00000300;
enum D3DVIS_MASK_NEAR = 0x00000c00;
enum D3DVIS_MASK_FAR = 0x00003000;
enum D3DDEVINFOID_TEXTUREMANAGER = 0x00000001;
enum D3DDEVINFOID_D3DTEXTUREMANAGER = 0x00000002;
enum D3DDEVINFOID_TEXTURING = 0x00000003;
enum D3DFVF_TEXTUREFORMAT2 = 0x00000000;
enum D3DFVF_TEXTUREFORMAT1 = 0x00000003;
enum D3DFVF_TEXTUREFORMAT3 = 0x00000001;
enum D3DFVF_TEXTUREFORMAT4 = 0x00000002;
enum ROT_COMPARE_MAX = 0x00000800;
enum WDT_INPROC_CALL = 0x48746457;
enum WDT_REMOTE_CALL = 0x52746457;
enum WDT_INPROC64_CALL = 0x50746457;
enum PROCESS_HEAP_REGION = 0x00000001;
enum PROCESS_HEAP_UNCOMMITTED_RANGE = 0x00000002;
enum PROCESS_HEAP_ENTRY_BUSY = 0x00000004;
enum PROCESS_HEAP_SEG_ALLOC = 0x00000008;
enum PROCESS_HEAP_ENTRY_MOVEABLE = 0x00000010;
enum PROCESS_HEAP_ENTRY_DDESHARE = 0x00000020;
enum LMEM_NOCOMPACT = 0x00000010;
enum LMEM_NODISCARD = 0x00000020;
enum LMEM_MODIFY = 0x00000080;
enum LMEM_DISCARDABLE = 0x00000f00;
enum LMEM_VALID_FLAGS = 0x00000f72;
enum LMEM_INVALID_HANDLE = 0x00008000;
enum LMEM_DISCARDED = 0x00004000;
enum LMEM_LOCKCOUNT = 0x000000ff;
enum NUMA_NO_PREFERRED_NODE = 0xffffffff;
enum REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO_VERSION = 0x00000001;
enum FACILITY_MCA_ERROR_CODE = 0x00000005;
enum IO_ERR_INSUFFICIENT_RESOURCES = 0xffffffffc0040002;
enum IO_ERR_DRIVER_ERROR = 0xffffffffc0040004;
enum IO_ERR_SEEK_ERROR = 0xffffffffc0040006;
enum IO_ERR_BAD_BLOCK = 0xffffffffc0040007;
enum IO_ERR_TIMEOUT = 0xffffffffc0040009;
enum IO_ERR_CONTROLLER_ERROR = 0xffffffffc004000b;
enum IO_ERR_NOT_READY = 0xffffffffc004000f;
enum IO_ERR_INVALID_REQUEST = 0xffffffffc0040010;
enum IO_ERR_RESET = 0xffffffffc0040013;
enum IO_ERR_BAD_FIRMWARE = 0xffffffffc0040019;
enum IO_WRN_BAD_FIRMWARE = 0xffffffff8004001a;
enum IO_WRITE_CACHE_ENABLED = 0xffffffff80040020;
enum IO_RECOVERED_VIA_ECC = 0xffffffff80040021;
enum IO_WRITE_CACHE_DISABLED = 0xffffffff80040022;
enum IO_WARNING_PAGING_FAILURE = 0xffffffff80040033;
enum IO_WRN_FAILURE_PREDICTED = 0xffffffff80040034;
enum IO_WARNING_ALLOCATION_FAILED = 0xffffffff80040038;
enum IO_WARNING_DUPLICATE_SIGNATURE = 0xffffffff8004003a;
enum IO_WARNING_DUPLICATE_PATH = 0xffffffff8004003b;
enum IO_WARNING_WRITE_FUA_PROBLEM = 0xffffffff80040084;
enum IO_WARNING_VOLUME_LOST_DISK_EXTENT = 0xffffffff8004008e;
enum IO_WARNING_DEVICE_HAS_INTERNAL_DUMP = 0xffffffff8004008f;
enum IO_WARNING_SOFT_THRESHOLD_REACHED = 0xffffffff80040090;
enum IO_WARNING_SOFT_THRESHOLD_REACHED_EX = 0xffffffff80040091;
enum IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_LUN = 0xffffffff80040092;
enum IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_POOL = 0xffffffff80040093;
enum IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_LUN = 0xffffffff80040094;
enum IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_POOL = 0xffffffff80040095;
enum IO_ERROR_DISK_RESOURCES_EXHAUSTED = 0xffffffffc0040096;
enum IO_WARNING_DISK_CAPACITY_CHANGED = 0xffffffff80040097;
enum IO_WARNING_DISK_PROVISIONING_TYPE_CHANGED = 0xffffffff80040098;
enum IO_WARNING_IO_OPERATION_RETRIED = 0xffffffff80040099;
enum IO_ERROR_IO_HARDWARE_ERROR = 0xffffffffc004009a;
enum IO_WARNING_COMPLETION_TIME = 0xffffffff8004009b;
enum IO_WARNING_DISK_SURPRISE_REMOVED = 0xffffffff8004009d;
enum IO_WARNING_REPEATED_DISK_GUID = 0xffffffff8004009e;
enum IO_WARNING_DISK_FIRMWARE_UPDATED = 0x4004009f;
enum IO_ERR_RETRY_SUCCEEDED = 0x00040001;
enum IO_DUMP_CREATION_SUCCESS = 0x000400a2;
enum IO_FILE_QUOTA_THRESHOLD = 0x40040024;
enum IO_FILE_QUOTA_LIMIT = 0x40040025;
enum IO_FILE_QUOTA_STARTED = 0x40040026;
enum IO_FILE_QUOTA_SUCCEEDED = 0x40040027;
enum IO_INFO_THROTTLE_COMPLETE = 0x40040077;
enum IO_CDROM_EXCLUSIVE_LOCK = 0x40040085;
enum IO_WARNING_ADAPTER_FIRMWARE_UPDATED = 0x400400a0;
enum IO_FILE_QUOTA_FAILED = 0xffffffff80040028;
enum IO_LOST_DELAYED_WRITE = 0xffffffff80040032;
enum IO_WARNING_INTERRUPT_STILL_PENDING = 0xffffffff80040035;
enum IO_DRIVER_CANCEL_TIMEOUT = 0xffffffff80040036;
enum IO_WARNING_LOG_FLUSH_FAILED = 0xffffffff80040039;
enum IO_WARNING_BUS_RESET = 0xffffffff80040076;
enum IO_WARNING_RESET = 0xffffffff80040081;
enum IO_LOST_DELAYED_WRITE_NETWORK_DISCONNECTED = 0xffffffff8004008b;
enum IO_LOST_DELAYED_WRITE_NETWORK_SERVER_ERROR = 0xffffffff8004008c;
enum IO_LOST_DELAYED_WRITE_NETWORK_LOCAL_DISK_ERROR = 0xffffffff8004008d;
enum IO_WARNING_DUMP_DISABLED_DEVICE_GONE = 0xffffffff8004009c;
enum IO_ERR_CONFIGURATION_ERROR = 0xffffffffc0040003;
enum IO_ERR_PARITY = 0xffffffffc0040005;
enum IO_ERR_OVERRUN_ERROR = 0xffffffffc0040008;
enum IO_ERR_SEQUENCE = 0xffffffffc004000a;
enum IO_ERR_INTERNAL_ERROR = 0xffffffffc004000c;
enum IO_ERR_INCORRECT_IRQL = 0xffffffffc004000d;
enum IO_ERR_INVALID_IOBASE = 0xffffffffc004000e;
enum IO_ERR_VERSION = 0xffffffffc0040011;
enum IO_ERR_LAYERED_FAILURE = 0xffffffffc0040012;
enum IO_ERR_PROTOCOL = 0xffffffffc0040014;
enum IO_ERR_MEMORY_CONFLICT_DETECTED = 0xffffffffc0040015;
enum IO_ERR_PORT_CONFLICT_DETECTED = 0xffffffffc0040016;
enum IO_ERR_DMA_CONFLICT_DETECTED = 0xffffffffc0040017;
enum IO_ERR_IRQ_CONFLICT_DETECTED = 0xffffffffc0040018;
enum IO_ERR_DMA_RESOURCE_CONFLICT = 0xffffffffc004001b;
enum IO_ERR_INTERRUPT_RESOURCE_CONFLICT = 0xffffffffc004001c;
enum IO_ERR_MEMORY_RESOURCE_CONFLICT = 0xffffffffc004001d;
enum IO_ERR_PORT_RESOURCE_CONFLICT = 0xffffffffc004001e;
enum IO_BAD_BLOCK_WITH_NAME = 0xffffffffc004001f;
enum IO_FILE_SYSTEM_CORRUPT = 0xffffffffc0040029;
enum IO_FILE_QUOTA_CORRUPT = 0xffffffffc004002a;
enum IO_SYSTEM_SLEEP_FAILED = 0xffffffffc004002b;
enum IO_DUMP_POINTER_FAILURE = 0xffffffffc004002c;
enum IO_DUMP_DRIVER_LOAD_FAILURE = 0xffffffffc004002d;
enum IO_DUMP_INITIALIZATION_FAILURE = 0xffffffffc004002e;
enum IO_DUMP_DUMPFILE_CONFLICT = 0xffffffffc004002f;
enum IO_DUMP_DIRECT_CONFIG_FAILED = 0xffffffffc0040030;
enum IO_DUMP_PAGE_CONFIG_FAILED = 0xffffffffc0040031;
enum IO_FILE_SYSTEM_CORRUPT_WITH_NAME = 0xffffffffc0040037;
enum IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER = 0xffffffffc004006c;
enum IO_ERR_PORT_TIMEOUT = 0xffffffffc0040075;
enum IO_ERROR_DUMP_CREATION_ERROR = 0xffffffffc00400a1;
enum IO_DUMP_CALLBACK_EXCEPTION = 0xffffffffc00400a3;
enum MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED = 0x40050070;
enum MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS = 0x40050073;
enum MCA_INFO_MEMORY_PAGE_MARKED_BAD = 0x40050074;
enum MCA_WARNING_CACHE = 0xffffffff8005003c;
enum MCA_WARNING_TLB = 0xffffffff8005003e;
enum MCA_WARNING_CPU_BUS = 0xffffffff80050040;
enum MCA_WARNING_REGISTER_FILE = 0xffffffff80050042;
enum MCA_WARNING_MAS = 0xffffffff80050044;
enum MCA_WARNING_MEM_UNKNOWN = 0xffffffff80050046;
enum MCA_WARNING_MEM_1_2 = 0xffffffff80050048;
enum MCA_WARNING_MEM_1_2_5 = 0xffffffff8005004a;
enum MCA_WARNING_MEM_1_2_5_4 = 0xffffffff8005004c;
enum MCA_WARNING_SYSTEM_EVENT = 0xffffffff8005004e;
enum MCA_WARNING_PCI_BUS_PARITY = 0xffffffff80050050;
enum MCA_WARNING_PCI_BUS_PARITY_NO_INFO = 0xffffffff80050052;
enum MCA_WARNING_PCI_BUS_SERR = 0xffffffff80050054;
enum MCA_WARNING_PCI_BUS_SERR_NO_INFO = 0xffffffff80050056;
enum MCA_WARNING_PCI_BUS_MASTER_ABORT = 0xffffffff80050058;
enum MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO = 0xffffffff8005005a;
enum MCA_WARNING_PCI_BUS_TIMEOUT = 0xffffffff8005005c;
enum MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO = 0xffffffff8005005e;
enum MCA_WARNING_PCI_BUS_UNKNOWN = 0xffffffff80050060;
enum MCA_WARNING_PCI_DEVICE = 0xffffffff80050062;
enum MCA_WARNING_SMBIOS = 0xffffffff80050064;
enum MCA_WARNING_PLATFORM_SPECIFIC = 0xffffffff80050066;
enum MCA_WARNING_UNKNOWN = 0xffffffff80050068;
enum MCA_WARNING_UNKNOWN_NO_CPU = 0xffffffff8005006a;
enum MCA_WARNING_CMC_THRESHOLD_EXCEEDED = 0xffffffff8005006d;
enum MCA_WARNING_CPE_THRESHOLD_EXCEEDED = 0xffffffff8005006e;
enum MCA_WARNING_CPU_THERMAL_THROTTLED = 0xffffffff8005006f;
enum MCA_WARNING_CPU = 0xffffffff80050071;
enum MCA_ERROR_CACHE = 0xffffffffc005003d;
enum MCA_ERROR_TLB = 0xffffffffc005003f;
enum MCA_ERROR_CPU_BUS = 0xffffffffc0050041;
enum MCA_ERROR_REGISTER_FILE = 0xffffffffc0050043;
enum MCA_ERROR_MAS = 0xffffffffc0050045;
enum MCA_ERROR_MEM_UNKNOWN = 0xffffffffc0050047;
enum MCA_ERROR_MEM_1_2 = 0xffffffffc0050049;
enum MCA_ERROR_MEM_1_2_5 = 0xffffffffc005004b;
enum MCA_ERROR_MEM_1_2_5_4 = 0xffffffffc005004d;
enum MCA_ERROR_SYSTEM_EVENT = 0xffffffffc005004f;
enum MCA_ERROR_PCI_BUS_PARITY = 0xffffffffc0050051;
enum MCA_ERROR_PCI_BUS_PARITY_NO_INFO = 0xffffffffc0050053;
enum MCA_ERROR_PCI_BUS_SERR = 0xffffffffc0050055;
enum MCA_ERROR_PCI_BUS_SERR_NO_INFO = 0xffffffffc0050057;
enum MCA_ERROR_PCI_BUS_MASTER_ABORT = 0xffffffffc0050059;
enum MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO = 0xffffffffc005005b;
enum MCA_ERROR_PCI_BUS_TIMEOUT = 0xffffffffc005005d;
enum MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO = 0xffffffffc005005f;
enum MCA_ERROR_PCI_BUS_UNKNOWN = 0xffffffffc0050061;
enum MCA_ERROR_PCI_DEVICE = 0xffffffffc0050063;
enum MCA_ERROR_SMBIOS = 0xffffffffc0050065;
enum MCA_ERROR_PLATFORM_SPECIFIC = 0xffffffffc0050067;
enum MCA_ERROR_UNKNOWN = 0xffffffffc0050069;
enum MCA_ERROR_UNKNOWN_NO_CPU = 0xffffffffc005006b;
enum MCA_ERROR_CPU = 0xffffffffc0050072;
enum MCA_MEMORYHIERARCHY_ERROR = 0xffffffffc0050078;
enum MCA_TLB_ERROR = 0xffffffffc0050079;
enum MCA_BUS_ERROR = 0xffffffffc005007a;
enum MCA_BUS_TIMEOUT_ERROR = 0xffffffffc005007b;
enum MCA_INTERNALTIMER_ERROR = 0xffffffffc005007c;
enum MCA_MICROCODE_ROM_PARITY_ERROR = 0xffffffffc005007e;
enum MCA_EXTERNAL_ERROR = 0xffffffffc005007f;
enum MCA_FRC_ERROR = 0xffffffffc0050080;
enum VOLMGR_KSR_ERROR = 0xffffffff80380001;
enum VOLMGR_KSR_READ_ERROR = 0xffffffff80380002;
enum VOLMGR_KSR_BYPASS = 0xffffffff80380003;
enum GUID_DEVINTERFACE_DMR = GUID(0xd0875fb4, 0x2196, 0x4c7a, [0xa6, 0x3d, 0xe4, 0x16, 0xad, 0xdd, 0x60, 0xa1]);
enum GUID_DEVINTERFACE_DMP = GUID(0x25b4e268, 0x2a05, 0x496e, [0x80, 0x3b, 0x26, 0x68, 0x37, 0xfb, 0xda, 0x4b]);
enum GUID_DEVINTERFACE_DMS = GUID(0xc96037ae, 0xa558, 0x4470, [0xb4, 0x32, 0x11, 0x5a, 0x31, 0xb8, 0x55, 0x53]);
alias PTERMINATION_HANDLER = void function(BOOLEAN, ulong);
alias POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK = uint function(HANDLE, void*, uint*, IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY**);
struct TP_POOL
{
}
struct TP_CLEANUP_GROUP
{
}
struct TEB
{
}
struct RemHGLOBAL
{
    int fNullHGlobal;
    uint cbData;
    ubyte[1] data;
}
struct RemHMETAFILEPICT
{
    int mm;
    int xExt;
    int yExt;
    uint cbData;
    ubyte[1] data;
}
struct RemHENHMETAFILE
{
    uint cbData;
    ubyte[1] data;
}
struct RemHBITMAP
{
    uint cbData;
    ubyte[1] data;
}
struct RemHPALETTE
{
    uint cbData;
    ubyte[1] data;
}
struct RemHBRUSH
{
    uint cbData;
    ubyte[1] data;
}
struct userCLIPFORMAT
{
    int fContext;
    union _u_e__Struct
    {
        uint dwValue;
        PWSTR pwszName;
    }
}
struct GDI_NONREMOTE
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        DWORD_BLOB* hRemote;
    }
}
struct userHGLOBAL
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        FLAGGED_BYTE_BLOB* hRemote;
        long hInproc64;
    }
}
struct userHMETAFILE
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        BYTE_BLOB* hRemote;
        long hInproc64;
    }
}
struct remoteMETAFILEPICT
{
    int mm;
    int xExt;
    int yExt;
    userHMETAFILE* hMF;
}
struct userHMETAFILEPICT
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        remoteMETAFILEPICT* hRemote;
        long hInproc64;
    }
}
struct userHENHMETAFILE
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        BYTE_BLOB* hRemote;
        long hInproc64;
    }
}
struct userBITMAP
{
    int bmType;
    int bmWidth;
    int bmHeight;
    int bmWidthBytes;
    ushort bmPlanes;
    ushort bmBitsPixel;
    uint cbSize;
    ubyte[1] pBuffer;
}
struct userHBITMAP
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        userBITMAP* hRemote;
        long hInproc64;
    }
}
struct userHPALETTE
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        LOGPALETTE* hRemote;
        long hInproc64;
    }
}
struct RemotableHandle
{
    int fContext;
    union _u_e__Struct
    {
        int hInproc;
        int hRemote;
    }
}
struct DEVICE_EVENT_MOUNT
{
    uint Version;
    uint Flags;
    uint FileSystemNameLength;
    uint FileSystemNameOffset;
}
struct DEVICE_EVENT_BECOMING_READY
{
    uint Version;
    uint Reason;
    uint Estimated100msToReady;
}
struct DEVICE_EVENT_EXTERNAL_REQUEST
{
    uint Version;
    uint DeviceClass;
    ushort ButtonStatus;
    ushort Request;
    LARGE_INTEGER SystemTime;
}
struct DEVICE_EVENT_GENERIC_DATA
{
    uint EventNumber;
}
struct DEVICE_EVENT_RBC_DATA
{
    uint EventNumber;
    ubyte SenseQualifier;
    ubyte SenseCode;
    ubyte SenseKey;
    ubyte Reserved;
    uint Information;
}
struct GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION
{
    uint DiskNumber;
}
struct DISK_HEALTH_NOTIFICATION_DATA
{
    GUID DeviceGuid;
}
struct REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO
{
    uint Version;
    uint Accurate;
    uint Supported;
    uint AccurateMask0;
}
struct DEV_BROADCAST_HDR
{
    uint dbch_size;
    DEV_BROADCAST_HDR_DEVICE_TYPE dbch_devicetype;
    uint dbch_reserved;
}
struct VolLockBroadcast
{
    DEV_BROADCAST_HDR vlb_dbh;
    uint vlb_owner;
    ubyte vlb_perms;
    ubyte vlb_lockType;
    ubyte vlb_drive;
    ubyte vlb_flags;
}
struct _DEV_BROADCAST_HEADER
{
    uint dbcd_size;
    uint dbcd_devicetype;
    uint dbcd_reserved;
}
struct DEV_BROADCAST_OEM
{
    uint dbco_size;
    uint dbco_devicetype;
    uint dbco_reserved;
    uint dbco_identifier;
    uint dbco_suppfunc;
}
struct DEV_BROADCAST_DEVNODE
{
    uint dbcd_size;
    uint dbcd_devicetype;
    uint dbcd_reserved;
    uint dbcd_devnode;
}
struct DEV_BROADCAST_VOLUME
{
    uint dbcv_size;
    uint dbcv_devicetype;
    uint dbcv_reserved;
    uint dbcv_unitmask;
    DEV_BROADCAST_VOLUME_FLAGS dbcv_flags;
}
struct DEV_BROADCAST_PORT_A
{
    uint dbcp_size;
    uint dbcp_devicetype;
    uint dbcp_reserved;
    CHAR[1] dbcp_name;
}
struct DEV_BROADCAST_PORT_W
{
    uint dbcp_size;
    uint dbcp_devicetype;
    uint dbcp_reserved;
    wchar[1] dbcp_name;
}
struct DEV_BROADCAST_NET
{
    uint dbcn_size;
    uint dbcn_devicetype;
    uint dbcn_reserved;
    uint dbcn_resource;
    uint dbcn_flags;
}
struct DEV_BROADCAST_DEVICEINTERFACE_A
{
    uint dbcc_size;
    uint dbcc_devicetype;
    uint dbcc_reserved;
    GUID dbcc_classguid;
    CHAR[1] dbcc_name;
}
struct DEV_BROADCAST_DEVICEINTERFACE_W
{
    uint dbcc_size;
    uint dbcc_devicetype;
    uint dbcc_reserved;
    GUID dbcc_classguid;
    wchar[1] dbcc_name;
}
struct DEV_BROADCAST_HANDLE
{
    uint dbch_size;
    uint dbch_devicetype;
    uint dbch_reserved;
    HANDLE dbch_handle;
    void* dbch_hdevnotify;
    GUID dbch_eventguid;
    int dbch_nameoffset;
    ubyte[1] dbch_data;
}
struct DEV_BROADCAST_HANDLE32
{
    uint dbch_size;
    uint dbch_devicetype;
    uint dbch_reserved;
    uint dbch_handle;
    uint dbch_hdevnotify;
    GUID dbch_eventguid;
    int dbch_nameoffset;
    ubyte[1] dbch_data;
}
struct DEV_BROADCAST_HANDLE64
{
    uint dbch_size;
    uint dbch_devicetype;
    uint dbch_reserved;
    ulong dbch_handle;
    ulong dbch_hdevnotify;
    GUID dbch_eventguid;
    int dbch_nameoffset;
    ubyte[1] dbch_data;
}
struct _DEV_BROADCAST_USERDEFINED
{
    DEV_BROADCAST_HDR dbud_dbh;
    CHAR[1] dbud_szName;
}
struct AtlThunkData_t
{
}
/+ [CONFLICTED] alias POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK = uint function(HANDLE, void*, uint*, IMAGE_RUNTIME_FUNCTION_ENTRY**);
+/
alias PEXCEPTION_FILTER = int function(EXCEPTION_POINTERS*, void*);
/+ [CONFLICTED] alias PTERMINATION_HANDLER = void function(BOOLEAN, void*);
+/
struct REARRANGE_FILE_DATA32
{
    ulong SourceStartingOffset;
    ulong TargetOffset;
    uint SourceFileHandle;
    uint Length;
    uint Flags;
}
struct XSAVE_CET_U_FORMAT
{
    ulong Ia32CetUMsr;
    ulong Ia32Pl3SspMsr;
}
struct KERNEL_CET_CONTEXT
{
    ulong Ssp;
    ulong Rip;
    ushort SegCs;
    union
    {
        ushort AllFlags;
        struct
        {
            ushort _bitfield0;
        }
    }
    ushort[2] Fill;
}
struct SCOPE_TABLE_AMD64
{
    uint Count;
    struct
    {
        uint BeginAddress;
        uint EndAddress;
        uint HandlerAddress;
        uint JumpTarget;
    }
}
struct SCOPE_TABLE_ARM
{
    uint Count;
    struct
    {
        uint BeginAddress;
        uint EndAddress;
        uint HandlerAddress;
        uint JumpTarget;
    }
}
struct SCOPE_TABLE_ARM64
{
    uint Count;
    struct
    {
        uint BeginAddress;
        uint EndAddress;
        uint HandlerAddress;
        uint JumpTarget;
    }
}
union DISPATCHER_CONTEXT_NONVOLREG_ARM64
{
    ubyte[152] Buffer;
    struct
    {
        ulong[11] GpNvRegs;
        double[8] FpNvRegs;
    }
}
struct SECURITY_DESCRIPTOR_RELATIVE
{
    ubyte Revision;
    ubyte Sbz1;
    ushort Control;
    uint Owner;
    uint Group;
    uint Sacl;
    uint Dacl;
}
struct SECURITY_OBJECT_AI_PARAMS
{
    uint Size;
    uint ConstraintMask;
}
alias ACCESS_REASON_TYPE = int;
enum : int
{
    AccessReasonNone                     = 0x00000000,
    AccessReasonAllowedAce               = 0x00010000,
    AccessReasonDeniedAce                = 0x00020000,
    AccessReasonAllowedParentAce         = 0x00030000,
    AccessReasonDeniedParentAce          = 0x00040000,
    AccessReasonNotGrantedByCape         = 0x00050000,
    AccessReasonNotGrantedByParentCape   = 0x00060000,
    AccessReasonNotGrantedToAppContainer = 0x00070000,
    AccessReasonMissingPrivilege         = 0x00100000,
    AccessReasonFromPrivilege            = 0x00200000,
    AccessReasonIntegrityLevel           = 0x00300000,
    AccessReasonOwnership                = 0x00400000,
    AccessReasonNullDacl                 = 0x00500000,
    AccessReasonEmptyDacl                = 0x00600000,
    AccessReasonNoSD                     = 0x00700000,
    AccessReasonNoGrant                  = 0x00800000,
    AccessReasonTrustLabel               = 0x00900000,
    AccessReasonFilterAce                = 0x00a00000,
}

struct SE_TOKEN_USER
{
    union
    {
        TOKEN_USER TokenUser;
        SID_AND_ATTRIBUTES User;
    }
    union
    {
        SID Sid;
        ubyte[68] Buffer;
    }
}
struct TOKEN_SID_INFORMATION
{
    PSID Sid;
}
struct TOKEN_BNO_ISOLATION_INFORMATION
{
    PWSTR IsolationPrefix;
    BOOLEAN IsolationEnabled;
}
alias SE_IMAGE_SIGNATURE_TYPE = int;
enum : int
{
    SeImageSignatureNone             = 0x00000000,
    SeImageSignatureEmbedded         = 0x00000001,
    SeImageSignatureCache            = 0x00000002,
    SeImageSignatureCatalogCached    = 0x00000003,
    SeImageSignatureCatalogNotCached = 0x00000004,
    SeImageSignatureCatalogHint      = 0x00000005,
    SeImageSignaturePackageCatalog   = 0x00000006,
    SeImageSignaturePplMitigated     = 0x00000007,
}

alias SE_LEARNING_MODE_DATA_TYPE = int;
enum : int
{
    SeLearningModeInvalidType = 0x00000000,
    SeLearningModeSettings    = 0x00000001,
    SeLearningModeMax         = 0x00000002,
}

struct NT_TIB32
{
    uint ExceptionList;
    uint StackBase;
    uint StackLimit;
    uint SubSystemTib;
    union
    {
        uint FiberData;
        uint Version;
    }
    uint ArbitraryUserPointer;
    uint Self;
}
struct NT_TIB64
{
    ulong ExceptionList;
    ulong StackBase;
    ulong StackLimit;
    ulong SubSystemTib;
    union
    {
        ulong FiberData;
        uint Version;
    }
    ulong ArbitraryUserPointer;
    ulong Self;
}
struct UMS_CREATE_THREAD_ATTRIBUTES
{
    uint UmsVersion;
    void* UmsContext;
    void* UmsCompletionList;
}
struct COMPONENT_FILTER
{
    uint ComponentFlags;
}
union RATE_QUOTA_LIMIT
{
    uint RateData;
    struct
    {
        uint _bitfield0;
    }
}
struct QUOTA_LIMITS_EX
{
    ulong PagedPoolLimit;
    ulong NonPagedPoolLimit;
    ulong MinimumWorkingSetSize;
    ulong MaximumWorkingSetSize;
    ulong PagefileLimit;
    LARGE_INTEGER TimeLimit;
    ulong WorkingSetLimit;
    ulong Reserved2;
    ulong Reserved3;
    ulong Reserved4;
    uint Flags;
    RATE_QUOTA_LIMIT CpuRateLimit;
}
struct PROCESS_MITIGATION_ASLR_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_DEP_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
    BOOLEAN Permanent;
}
struct PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_FONT_DISABLE_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_IMAGE_LOAD_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_CHILD_PROCESS_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
{
    union
    {
        uint Flags;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V1
{
    long MaxIops;
    long MaxBandwidth;
    long ReservationIops;
    PWSTR VolumeName;
    uint BaseIoSize;
    JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    ushort VolumeNameLength;
}
struct SILOOBJECT_BASIC_INFORMATION
{
    uint SiloId;
    uint SiloParentId;
    uint NumberOfProcesses;
    BOOLEAN IsInServerSilo;
    ubyte[3] Reserved;
}
alias SERVERSILO_STATE = int;
enum : int
{
    SERVERSILO_INITING       = 0x00000000,
    SERVERSILO_STARTED       = 0x00000001,
    SERVERSILO_SHUTTING_DOWN = 0x00000002,
    SERVERSILO_TERMINATING   = 0x00000003,
    SERVERSILO_TERMINATED    = 0x00000004,
}

struct SERVERSILO_BASIC_INFORMATION
{
    uint ServiceSessionId;
    SERVERSILO_STATE State;
    uint ExitStatus;
    BOOLEAN IsDownlevelContainer;
    void* ApiSetSchema;
    void* HostApiSetSchema;
}
alias MEM_DEDICATED_ATTRIBUTE_TYPE = int;
enum : int
{
    MemDedicatedAttributeReadBandwidth  = 0x00000000,
    MemDedicatedAttributeReadLatency    = 0x00000001,
    MemDedicatedAttributeWriteBandwidth = 0x00000002,
    MemDedicatedAttributeWriteLatency   = 0x00000003,
    MemDedicatedAttributeMax            = 0x00000004,
}

alias MEM_SECTION_EXTENDED_PARAMETER_TYPE = int;
enum : int
{
    MemSectionExtendedParameterInvalidType       = 0x00000000,
    MemSectionExtendedParameterUserPhysicalFlags = 0x00000001,
    MemSectionExtendedParameterNumaNode          = 0x00000002,
    MemSectionExtendedParameterSigningLevel      = 0x00000003,
    MemSectionExtendedParameterMax               = 0x00000004,
}

struct MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE
{
    MEM_DEDICATED_ATTRIBUTE_TYPE Type;
    uint Reserved;
    ulong Value;
}
struct MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION
{
    uint NextEntryOffset;
    uint SizeOfInformation;
    uint Flags;
    uint AttributesOffset;
    uint AttributeCount;
    uint Reserved;
    ulong TypeId;
}
struct SCRUB_DATA_INPUT
{
    uint Size;
    uint Flags;
    uint MaximumIos;
    uint[4] ObjectId;
    uint[41] Reserved;
    ubyte[1040] ResumeContext;
}
struct SCRUB_PARITY_EXTENT
{
    long Offset;
    ulong Length;
}
struct SCRUB_PARITY_EXTENT_DATA
{
    ushort Size;
    ushort Flags;
    ushort NumberOfParityExtents;
    ushort MaximumNumberOfParityExtents;
    SCRUB_PARITY_EXTENT[1] ParityExtents;
}
struct SCRUB_DATA_OUTPUT
{
    uint Size;
    uint Flags;
    uint Status;
    ulong ErrorFileOffset;
    ulong ErrorLength;
    ulong NumberOfBytesRepaired;
    ulong NumberOfBytesFailed;
    ulong InternalFileReference;
    ushort ResumeContextLength;
    ushort ParityExtentDataOffset;
    uint[9] Reserved;
    ulong NumberOfMetadataBytesProcessed;
    ulong NumberOfDataBytesProcessed;
    ulong TotalNumberOfMetadataBytesInUse;
    ulong TotalNumberOfDataBytesInUse;
    ulong DataBytesSkippedDueToNoAllocation;
    ulong DataBytesSkippedDueToInvalidRun;
    ulong DataBytesSkippedDueToIntegrityStream;
    ulong DataBytesSkippedDueToRegionBeingClean;
    ulong DataBytesSkippedDueToLockConflict;
    ulong DataBytesSkippedDueToNoScrubDataFlag;
    ulong DataBytesSkippedDueToNoScrubNonIntegrityStreamFlag;
    ulong DataBytesScrubbed;
    ubyte[1040] ResumeContext;
}
alias SharedVirtualDiskSupportType = int;
enum : int
{
    SharedVirtualDisksUnsupported          = 0x00000000,
    SharedVirtualDisksSupported            = 0x00000001,
    SharedVirtualDiskSnapshotsSupported    = 0x00000003,
    SharedVirtualDiskCDPSnapshotsSupported = 0x00000007,
}

alias SharedVirtualDiskHandleState = int;
enum : int
{
    SharedVirtualDiskHandleStateNone         = 0x00000000,
    SharedVirtualDiskHandleStateFileShared   = 0x00000001,
    SharedVirtualDiskHandleStateHandleShared = 0x00000003,
}

struct SHARED_VIRTUAL_DISK_SUPPORT
{
    SharedVirtualDiskSupportType SharedVirtualDiskSupport;
    SharedVirtualDiskHandleState HandleState;
}
struct REARRANGE_FILE_DATA
{
    ulong SourceStartingOffset;
    ulong TargetOffset;
    HANDLE SourceFileHandle;
    uint Length;
    uint Flags;
}
struct SHUFFLE_FILE_DATA
{
    long StartingOffset;
    long Length;
    uint Flags;
}
struct NETWORK_APP_INSTANCE_EA
{
    GUID AppInstanceID;
    uint CsvFlags;
}
alias MONITOR_DISPLAY_STATE = int;
enum : int
{
    PowerMonitorOff = 0x00000000,
    PowerMonitorOn  = 0x00000001,
    PowerMonitorDim = 0x00000002,
}

alias USER_ACTIVITY_PRESENCE = int;
enum : int
{
    PowerUserPresent    = 0x00000000,
    PowerUserNotPresent = 0x00000001,
    PowerUserInactive   = 0x00000002,
    PowerUserMaximum    = 0x00000003,
    PowerUserInvalid    = 0x00000003,
}

alias POWER_USER_PRESENCE_TYPE = int;
enum : int
{
    UserNotPresent = 0x00000000,
    UserPresent    = 0x00000001,
    UserUnknown    = 0x000000ff,
}

struct POWER_USER_PRESENCE
{
    POWER_USER_PRESENCE_TYPE UserPresence;
}
struct POWER_SESSION_CONNECT
{
    BOOLEAN Connected;
    BOOLEAN Console;
}
struct POWER_SESSION_TIMEOUTS
{
    uint InputTimeout;
    uint DisplayTimeout;
}
struct POWER_SESSION_RIT_STATE
{
    BOOLEAN Active;
    ulong LastInputTime;
}
struct POWER_SESSION_WINLOGON
{
    uint SessionId;
    BOOLEAN Console;
    BOOLEAN Locked;
}
struct POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
{
    BOOLEAN IsAllowed;
}
struct POWER_IDLE_RESILIENCY
{
    uint CoalescingTimeout;
    uint IdleResiliencyPeriod;
}
alias POWER_MONITOR_REQUEST_REASON = int;
enum : int
{
    MonitorRequestReasonUnknown                        = 0x00000000,
    MonitorRequestReasonPowerButton                    = 0x00000001,
    MonitorRequestReasonRemoteConnection               = 0x00000002,
    MonitorRequestReasonScMonitorpower                 = 0x00000003,
    MonitorRequestReasonUserInput                      = 0x00000004,
    MonitorRequestReasonAcDcDisplayBurst               = 0x00000005,
    MonitorRequestReasonUserDisplayBurst               = 0x00000006,
    MonitorRequestReasonPoSetSystemState               = 0x00000007,
    MonitorRequestReasonSetThreadExecutionState        = 0x00000008,
    MonitorRequestReasonFullWake                       = 0x00000009,
    MonitorRequestReasonSessionUnlock                  = 0x0000000a,
    MonitorRequestReasonScreenOffRequest               = 0x0000000b,
    MonitorRequestReasonIdleTimeout                    = 0x0000000c,
    MonitorRequestReasonPolicyChange                   = 0x0000000d,
    MonitorRequestReasonSleepButton                    = 0x0000000e,
    MonitorRequestReasonLid                            = 0x0000000f,
    MonitorRequestReasonBatteryCountChange             = 0x00000010,
    MonitorRequestReasonGracePeriod                    = 0x00000011,
    MonitorRequestReasonPnP                            = 0x00000012,
    MonitorRequestReasonDP                             = 0x00000013,
    MonitorRequestReasonSxTransition                   = 0x00000014,
    MonitorRequestReasonSystemIdle                     = 0x00000015,
    MonitorRequestReasonNearProximity                  = 0x00000016,
    MonitorRequestReasonThermalStandby                 = 0x00000017,
    MonitorRequestReasonResumePdc                      = 0x00000018,
    MonitorRequestReasonResumeS4                       = 0x00000019,
    MonitorRequestReasonTerminal                       = 0x0000001a,
    MonitorRequestReasonPdcSignal                      = 0x0000001b,
    MonitorRequestReasonAcDcDisplayBurstSuppressed     = 0x0000001c,
    MonitorRequestReasonSystemStateEntered             = 0x0000001d,
    MonitorRequestReasonWinrt                          = 0x0000001e,
    MonitorRequestReasonUserInputKeyboard              = 0x0000001f,
    MonitorRequestReasonUserInputMouse                 = 0x00000020,
    MonitorRequestReasonUserInputTouchpad              = 0x00000021,
    MonitorRequestReasonUserInputPen                   = 0x00000022,
    MonitorRequestReasonUserInputAccelerometer         = 0x00000023,
    MonitorRequestReasonUserInputHid                   = 0x00000024,
    MonitorRequestReasonUserInputPoUserPresent         = 0x00000025,
    MonitorRequestReasonUserInputSessionSwitch         = 0x00000026,
    MonitorRequestReasonUserInputInitialization        = 0x00000027,
    MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 0x00000028,
    MonitorRequestReasonPdcSignalWindowsMobileShell    = 0x00000029,
    MonitorRequestReasonPdcSignalHeyCortana            = 0x0000002a,
    MonitorRequestReasonPdcSignalHolographicShell      = 0x0000002b,
    MonitorRequestReasonPdcSignalFingerprint           = 0x0000002c,
    MonitorRequestReasonDirectedDrips                  = 0x0000002d,
    MonitorRequestReasonDim                            = 0x0000002e,
    MonitorRequestReasonBuiltinPanel                   = 0x0000002f,
    MonitorRequestReasonDisplayRequiredUnDim           = 0x00000030,
    MonitorRequestReasonBatteryCountChangeSuppressed   = 0x00000031,
    MonitorRequestReasonResumeModernStandby            = 0x00000032,
    MonitorRequestReasonTerminalInit                   = 0x00000033,
    MonitorRequestReasonPdcSignalSensorsHumanPresence  = 0x00000034,
    MonitorRequestReasonBatteryPreCritical             = 0x00000035,
    MonitorRequestReasonUserInputTouch                 = 0x00000036,
    MonitorRequestReasonMax                            = 0x00000037,
}

alias POWER_MONITOR_REQUEST_TYPE = int;
enum : int
{
    MonitorRequestTypeOff          = 0x00000000,
    MonitorRequestTypeOnAndPresent = 0x00000001,
    MonitorRequestTypeToggleOn     = 0x00000002,
}

struct POWER_MONITOR_INVOCATION
{
    BOOLEAN Console;
    POWER_MONITOR_REQUEST_REASON RequestReason;
}
struct RESUME_PERFORMANCE
{
    uint PostTimeMs;
    ulong TotalResumeTimeMs;
    ulong ResumeCompleteTimestamp;
}
struct NOTIFY_USER_POWER_SETTING
{
    GUID Guid;
}
struct APPLICATIONLAUNCH_SETTING_VALUE
{
    LARGE_INTEGER ActivationTime;
    uint Flags;
    uint ButtonInstanceID;
}
struct POWER_PLATFORM_INFORMATION
{
    BOOLEAN AoAc;
}
alias POWER_SETTING_ALTITUDE = int;
enum : int
{
    ALTITUDE_GROUP_POLICY      = 0x00000000,
    ALTITUDE_USER              = 0x00000001,
    ALTITUDE_RUNTIME_OVERRIDE  = 0x00000002,
    ALTITUDE_PROVISIONING      = 0x00000003,
    ALTITUDE_OEM_CUSTOMIZATION = 0x00000004,
    ALTITUDE_INTERNAL_OVERRIDE = 0x00000005,
    ALTITUDE_OS_DEFAULT        = 0x00000006,
}

struct PPM_WMI_LEGACY_PERFSTATE
{
    uint Frequency;
    uint Flags;
    uint PercentFrequency;
}
struct PPM_WMI_IDLE_STATE
{
    uint Latency;
    uint Power;
    uint TimeCheck;
    ubyte PromotePercent;
    ubyte DemotePercent;
    ubyte StateType;
    ubyte Reserved;
    uint StateFlags;
    uint Context;
    uint IdleHandler;
    uint Reserved1;
}
struct PPM_WMI_IDLE_STATES
{
    uint Type;
    uint Count;
    uint TargetState;
    uint OldState;
    ulong TargetProcessors;
    PPM_WMI_IDLE_STATE[1] State;
}
struct PPM_WMI_IDLE_STATES_EX
{
    uint Type;
    uint Count;
    uint TargetState;
    uint OldState;
    void* TargetProcessors;
    PPM_WMI_IDLE_STATE[1] State;
}
struct PPM_WMI_PERF_STATE
{
    uint Frequency;
    uint Power;
    ubyte PercentFrequency;
    ubyte IncreaseLevel;
    ubyte DecreaseLevel;
    ubyte Type;
    uint IncreaseTime;
    uint DecreaseTime;
    ulong Control;
    ulong Status;
    uint HitCount;
    uint Reserved1;
    ulong Reserved2;
    ulong Reserved3;
}
struct PPM_WMI_PERF_STATES
{
    uint Count;
    uint MaxFrequency;
    uint CurrentState;
    uint MaxPerfState;
    uint MinPerfState;
    uint LowestPerfState;
    uint ThermalConstraint;
    ubyte BusyAdjThreshold;
    ubyte PolicyType;
    ubyte Type;
    ubyte Reserved;
    uint TimerInterval;
    ulong TargetProcessors;
    uint PStateHandler;
    uint PStateContext;
    uint TStateHandler;
    uint TStateContext;
    uint FeedbackHandler;
    uint Reserved1;
    ulong Reserved2;
    PPM_WMI_PERF_STATE[1] State;
}
struct PPM_WMI_PERF_STATES_EX
{
    uint Count;
    uint MaxFrequency;
    uint CurrentState;
    uint MaxPerfState;
    uint MinPerfState;
    uint LowestPerfState;
    uint ThermalConstraint;
    ubyte BusyAdjThreshold;
    ubyte PolicyType;
    ubyte Type;
    ubyte Reserved;
    uint TimerInterval;
    void* TargetProcessors;
    uint PStateHandler;
    uint PStateContext;
    uint TStateHandler;
    uint TStateContext;
    uint FeedbackHandler;
    uint Reserved1;
    ulong Reserved2;
    PPM_WMI_PERF_STATE[1] State;
}
struct PPM_IDLE_STATE_ACCOUNTING
{
    uint IdleTransitions;
    uint FailedTransitions;
    uint InvalidBucketIndex;
    ulong TotalTime;
    uint[6] IdleTimeBuckets;
}
struct PPM_IDLE_ACCOUNTING
{
    uint StateCount;
    uint TotalTransitions;
    uint ResetCount;
    ulong StartTime;
    PPM_IDLE_STATE_ACCOUNTING[1] State;
}
struct PPM_IDLE_STATE_BUCKET_EX
{
    ulong TotalTimeUs;
    uint MinTimeUs;
    uint MaxTimeUs;
    uint Count;
}
struct PPM_IDLE_STATE_ACCOUNTING_EX
{
    ulong TotalTime;
    uint IdleTransitions;
    uint FailedTransitions;
    uint InvalidBucketIndex;
    uint MinTimeUs;
    uint MaxTimeUs;
    uint CancelledTransitions;
    PPM_IDLE_STATE_BUCKET_EX[16] IdleTimeBuckets;
}
struct PPM_IDLE_ACCOUNTING_EX
{
    uint StateCount;
    uint TotalTransitions;
    uint ResetCount;
    uint AbortCount;
    ulong StartTime;
    PPM_IDLE_STATE_ACCOUNTING_EX[1] State;
}
struct PPM_PERFSTATE_EVENT
{
    uint State;
    uint Status;
    uint Latency;
    uint Speed;
    uint Processor;
}
struct PPM_PERFSTATE_DOMAIN_EVENT
{
    uint State;
    uint Latency;
    uint Speed;
    ulong Processors;
}
struct PPM_IDLESTATE_EVENT
{
    uint NewState;
    uint OldState;
    ulong Processors;
}
struct PPM_THERMALCHANGE_EVENT
{
    uint ThermalConstraint;
    ulong Processors;
}
struct PPM_THERMAL_POLICY_EVENT
{
    ubyte Mode;
    ulong Processors;
}
struct PROCESSOR_IDLESTATE_INFO
{
    uint TimeCheck;
    ubyte DemotePercent;
    ubyte PromotePercent;
    ubyte[2] Spare;
}
struct PROCESSOR_IDLESTATE_POLICY
{
    ushort Revision;
    union _Flags_e__Union
    {
        ushort AsWORD;
        struct
        {
            ushort _bitfield0;
        }
    }
    uint PolicyCount;
    PROCESSOR_IDLESTATE_INFO[3] Policy;
}
struct PROCESSOR_PERFSTATE_POLICY
{
    uint Revision;
    ubyte MaxThrottle;
    ubyte MinThrottle;
    ubyte BusyAdjThreshold;
    union
    {
        ubyte Spare;
        union _Flags_e__Union
        {
            ubyte AsBYTE;
            struct
            {
                ubyte _bitfield0;
            }
        }
    }
    uint TimeCheck;
    uint IncreaseTime;
    uint DecreaseTime;
    uint IncreasePercent;
    uint DecreasePercent;
}
alias HIBERFILE_BUCKET_SIZE = int;
enum : int
{
    HiberFileBucket1GB       = 0x00000000,
    HiberFileBucket2GB       = 0x00000001,
    HiberFileBucket4GB       = 0x00000002,
    HiberFileBucket8GB       = 0x00000003,
    HiberFileBucket16GB      = 0x00000004,
    HiberFileBucket32GB      = 0x00000005,
    HiberFileBucketUnlimited = 0x00000006,
    HiberFileBucketMax       = 0x00000007,
}

struct HIBERFILE_BUCKET
{
    ulong MaxPhysicalMemory;
    uint[3] PhysicalMemoryPercent;
}
struct IMAGE_DOS_HEADER
{
    align (2):
    ushort e_magic;
    ushort e_cblp;
    ushort e_cp;
    ushort e_crlc;
    ushort e_cparhdr;
    ushort e_minalloc;
    ushort e_maxalloc;
    ushort e_ss;
    ushort e_sp;
    ushort e_csum;
    ushort e_ip;
    ushort e_cs;
    ushort e_lfarlc;
    ushort e_ovno;
    ushort[4] e_res;
    ushort e_oemid;
    ushort e_oeminfo;
    ushort[10] e_res2;
    int e_lfanew;
}
struct IMAGE_OS2_HEADER
{
    align (2):
    ushort ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    ushort ne_enttab;
    ushort ne_cbenttab;
    int ne_crc;
    ushort ne_flags;
    ushort ne_autodata;
    ushort ne_heap;
    ushort ne_stack;
    int ne_csip;
    int ne_sssp;
    ushort ne_cseg;
    ushort ne_cmod;
    ushort ne_cbnrestab;
    ushort ne_segtab;
    ushort ne_rsrctab;
    ushort ne_restab;
    ushort ne_modtab;
    ushort ne_imptab;
    int ne_nrestab;
    ushort ne_cmovent;
    ushort ne_align;
    ushort ne_cres;
    ubyte ne_exetyp;
    ubyte ne_flagsothers;
    ushort ne_pretthunks;
    ushort ne_psegrefbytes;
    ushort ne_swaparea;
    ushort ne_expver;
}
struct IMAGE_VXD_HEADER
{
    align (2):
    ushort e32_magic;
    ubyte e32_border;
    ubyte e32_worder;
    uint e32_level;
    ushort e32_cpu;
    ushort e32_os;
    uint e32_ver;
    uint e32_mflags;
    uint e32_mpages;
    uint e32_startobj;
    uint e32_eip;
    uint e32_stackobj;
    uint e32_esp;
    uint e32_pagesize;
    uint e32_lastpagesize;
    uint e32_fixupsize;
    uint e32_fixupsum;
    uint e32_ldrsize;
    uint e32_ldrsum;
    uint e32_objtab;
    uint e32_objcnt;
    uint e32_objmap;
    uint e32_itermap;
    uint e32_rsrctab;
    uint e32_rsrccnt;
    uint e32_restab;
    uint e32_enttab;
    uint e32_dirtab;
    uint e32_dircnt;
    uint e32_fpagetab;
    uint e32_frectab;
    uint e32_impmod;
    uint e32_impmodcnt;
    uint e32_impproc;
    uint e32_pagesum;
    uint e32_datapage;
    uint e32_preload;
    uint e32_nrestab;
    uint e32_cbnrestab;
    uint e32_nressum;
    uint e32_autodata;
    uint e32_debuginfo;
    uint e32_debuglen;
    uint e32_instpreload;
    uint e32_instdemand;
    uint e32_heapsize;
    ubyte[12] e32_res3;
    uint e32_winresoff;
    uint e32_winreslen;
    ushort e32_devid;
    ushort e32_ddkver;
}
struct ANON_OBJECT_HEADER
{
    ushort Sig1;
    ushort Sig2;
    ushort Version;
    ushort Machine;
    uint TimeDateStamp;
    GUID ClassID;
    uint SizeOfData;
}
struct ANON_OBJECT_HEADER_V2
{
    ushort Sig1;
    ushort Sig2;
    ushort Version;
    ushort Machine;
    uint TimeDateStamp;
    GUID ClassID;
    uint SizeOfData;
    uint Flags;
    uint MetaDataSize;
    uint MetaDataOffset;
}
struct ANON_OBJECT_HEADER_BIGOBJ
{
    ushort Sig1;
    ushort Sig2;
    ushort Version;
    ushort Machine;
    uint TimeDateStamp;
    GUID ClassID;
    uint SizeOfData;
    uint Flags;
    uint MetaDataSize;
    uint MetaDataOffset;
    uint NumberOfSections;
    uint PointerToSymbolTable;
    uint NumberOfSymbols;
}
struct IMAGE_SYMBOL
{
    align (2):
    union _N_e__Union
    {
        align (2):
        ubyte[8] ShortName;
        struct _Name_e__Struct
        {
            align (2):
            uint Short;
            uint Long;
        }
        uint[2] LongName;
    }
    uint Value;
    short SectionNumber;
    ushort Type;
    ubyte StorageClass;
    ubyte NumberOfAuxSymbols;
}
struct IMAGE_SYMBOL_EX
{
    align (2):
    union _N_e__Union
    {
        align (2):
        ubyte[8] ShortName;
        struct _Name_e__Struct
        {
            align (2):
            uint Short;
            uint Long;
        }
        uint[2] LongName;
    }
    uint Value;
    int SectionNumber;
    ushort Type;
    ubyte StorageClass;
    ubyte NumberOfAuxSymbols;
}
struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
    align (2):
    ubyte bAuxType;
    ubyte bReserved;
    uint SymbolTableIndex;
    ubyte[12] rgbReserved;
}
union IMAGE_AUX_SYMBOL
{
    struct _Sym_e__Struct
    {
        align (2):
        uint TagIndex;
        union _Misc_e__Union
        {
            align (2):
            struct _LnSz_e__Struct
            {
                ushort Linenumber;
                ushort Size;
            }
            uint TotalSize;
        }
        union _FcnAry_e__Union
        {
            struct _Function_e__Struct
            {
                align (2):
                uint PointerToLinenumber;
                uint PointerToNextFunction;
            }
            struct _Array_e__Struct
            {
                ushort[4] Dimension;
            }
        }
        ushort TvIndex;
    }
    struct _File_e__Struct
    {
        ubyte[18] Name;
    }
    struct _Section_e__Struct
    {
        align (2):
        uint Length;
        ushort NumberOfRelocations;
        ushort NumberOfLinenumbers;
        uint CheckSum;
        short Number;
        ubyte Selection;
        ubyte bReserved;
        short HighNumber;
    }
    IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    struct _CRC_e__Struct
    {
        align (2):
        uint crc;
        ubyte[14] rgbReserved;
    }
}
union IMAGE_AUX_SYMBOL_EX
{
    struct _Sym_e__Struct
    {
        align (2):
        uint WeakDefaultSymIndex;
        uint WeakSearchType;
        ubyte[12] rgbReserved;
    }
    struct _File_e__Struct
    {
        ubyte[20] Name;
    }
    struct _Section_e__Struct
    {
        align (2):
        uint Length;
        ushort NumberOfRelocations;
        ushort NumberOfLinenumbers;
        uint CheckSum;
        short Number;
        ubyte Selection;
        ubyte bReserved;
        short HighNumber;
        ubyte[2] rgbReserved;
    }
    struct
    {
        IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
        ubyte[2] rgbReserved;
    }
    struct _CRC_e__Struct
    {
        align (2):
        uint crc;
        ubyte[16] rgbReserved;
    }
}
alias IMAGE_AUX_SYMBOL_TYPE = int;
enum : int
{
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 0x00000001,
}

struct IMAGE_RELOCATION
{
    align (2):
    union
    {
        align (2):
        uint VirtualAddress;
        uint RelocCount;
    }
    uint SymbolTableIndex;
    ushort Type;
}
struct IMAGE_LINENUMBER
{
    union _Type_e__Union
    {
        align (2):
        uint SymbolTableIndex;
        uint VirtualAddress;
    }
    ushort Linenumber;
}
struct IMAGE_BASE_RELOCATION
{
    uint VirtualAddress;
    uint SizeOfBlock;
}
struct IMAGE_ARCHIVE_MEMBER_HEADER
{
    ubyte[16] Name;
    ubyte[12] Date;
    ubyte[6] UserID;
    ubyte[6] GroupID;
    ubyte[8] Mode;
    ubyte[10] Size;
    ubyte[2] EndHeader;
}
struct IMAGE_EXPORT_DIRECTORY
{
    uint Characteristics;
    uint TimeDateStamp;
    ushort MajorVersion;
    ushort MinorVersion;
    uint Name;
    uint Base;
    uint NumberOfFunctions;
    uint NumberOfNames;
    uint AddressOfFunctions;
    uint AddressOfNames;
    uint AddressOfNameOrdinals;
}
struct IMAGE_IMPORT_BY_NAME
{
    ushort Hint;
    CHAR[1] Name;
}
alias PIMAGE_TLS_CALLBACK = void function(void*, uint, void*);
struct IMAGE_TLS_DIRECTORY64
{
    align (4):
    ulong StartAddressOfRawData;
    ulong EndAddressOfRawData;
    ulong AddressOfIndex;
    ulong AddressOfCallBacks;
    uint SizeOfZeroFill;
    union
    {
        uint Characteristics;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct IMAGE_TLS_DIRECTORY32
{
    uint StartAddressOfRawData;
    uint EndAddressOfRawData;
    uint AddressOfIndex;
    uint AddressOfCallBacks;
    uint SizeOfZeroFill;
    union
    {
        uint Characteristics;
        struct
        {
            uint _bitfield0;
        }
    }
}
struct IMAGE_IMPORT_DESCRIPTOR
{
    union
    {
        uint Characteristics;
        uint OriginalFirstThunk;
    }
    uint TimeDateStamp;
    uint ForwarderChain;
    uint Name;
    uint FirstThunk;
}
struct IMAGE_BOUND_IMPORT_DESCRIPTOR
{
    uint TimeDateStamp;
    ushort OffsetModuleName;
    ushort NumberOfModuleForwarderRefs;
}
struct IMAGE_BOUND_FORWARDER_REF
{
    uint TimeDateStamp;
    ushort OffsetModuleName;
    ushort Reserved;
}
struct IMAGE_RESOURCE_DIRECTORY
{
    uint Characteristics;
    uint TimeDateStamp;
    ushort MajorVersion;
    ushort MinorVersion;
    ushort NumberOfNamedEntries;
    ushort NumberOfIdEntries;
}
struct IMAGE_RESOURCE_DIRECTORY_ENTRY
{
    union
    {
        struct
        {
            uint _bitfield0;
        }
        uint Name;
        ushort Id;
    }
    union
    {
        uint OffsetToData;
        struct
        {
            uint _bitfield1;
        }
    }
}
struct IMAGE_RESOURCE_DIRECTORY_STRING
{
    ushort Length;
    CHAR[1] NameString;
}
struct IMAGE_RESOURCE_DIR_STRING_U
{
    ushort Length;
    wchar[1] NameString;
}
struct IMAGE_RESOURCE_DATA_ENTRY
{
    uint OffsetToData;
    uint Size;
    uint CodePage;
    uint Reserved;
}
struct IMAGE_DYNAMIC_RELOCATION_TABLE
{
    uint Version;
    uint Size;
}
struct IMAGE_DYNAMIC_RELOCATION32
{
    align (1):
    uint Symbol;
    uint BaseRelocSize;
}
struct IMAGE_DYNAMIC_RELOCATION64
{
    align (1):
    ulong Symbol;
    uint BaseRelocSize;
}
struct IMAGE_DYNAMIC_RELOCATION32_V2
{
    align (1):
    uint HeaderSize;
    uint FixupInfoSize;
    uint Symbol;
    uint SymbolGroup;
    uint Flags;
}
struct IMAGE_DYNAMIC_RELOCATION64_V2
{
    align (1):
    uint HeaderSize;
    uint FixupInfoSize;
    ulong Symbol;
    uint SymbolGroup;
    uint Flags;
}
struct IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
{
    ubyte PrologueByteCount;
}
struct IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
{
    align (1):
    uint EpilogueCount;
    ubyte EpilogueByteCount;
    ubyte BranchDescriptorElementSize;
    ushort BranchDescriptorCount;
}
struct IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
    align (1):
    uint _bitfield0;
}
struct IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
    align (1):
    ushort _bitfield0;
}
struct IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
{
    align (1):
    ushort _bitfield0;
}
struct IMAGE_HOT_PATCH_INFO
{
    uint Version;
    uint Size;
    uint SequenceNumber;
    uint BaseImageList;
    uint BaseImageCount;
    uint BufferOffset;
    uint ExtraPatchSize;
}
struct IMAGE_HOT_PATCH_BASE
{
    uint SequenceNumber;
    uint Flags;
    uint OriginalTimeDateStamp;
    uint OriginalCheckSum;
    uint CodeIntegrityInfo;
    uint CodeIntegritySize;
    uint PatchTable;
    uint BufferOffset;
}
struct IMAGE_HOT_PATCH_HASHES
{
    ubyte[32] SHA256;
    ubyte[20] SHA1;
}
struct IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
    uint FuncStart;
    uint _bitfield0;
}
struct IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
{
    uint BeginAddress;
    union
    {
        uint UnwindData;
        struct
        {
            uint _bitfield0;
        }
    }
}
alias ARM64_FNPDATA_FLAGS = int;
enum : int
{
    PdataRefToFullXdata       = 0x00000000,
    PdataPackedUnwindFunction = 0x00000001,
    PdataPackedUnwindFragment = 0x00000002,
}

alias ARM64_FNPDATA_CR = int;
enum : int
{
    PdataCrUnchained        = 0x00000000,
    PdataCrUnchainedSavedLr = 0x00000001,
    PdataCrChainedWithPac   = 0x00000002,
    PdataCrChained          = 0x00000003,
}

union IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA
{
    uint HeaderData;
    struct
    {
        uint _bitfield0;
    }
}
struct IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
    align (4):
    ulong BeginAddress;
    ulong EndAddress;
    ulong ExceptionHandler;
    ulong HandlerData;
    ulong PrologEndAddress;
}
struct IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
    uint BeginAddress;
    uint EndAddress;
    uint ExceptionHandler;
    uint HandlerData;
    uint PrologEndAddress;
}
struct IMAGE_DEBUG_MISC
{
    uint DataType;
    uint Length;
    BOOLEAN Unicode;
    ubyte[3] Reserved;
    ubyte[1] Data;
}
struct IMAGE_SEPARATE_DEBUG_HEADER
{
    ushort Signature;
    ushort Flags;
    ushort Machine;
    ushort Characteristics;
    uint TimeDateStamp;
    uint CheckSum;
    uint ImageBase;
    uint SizeOfImage;
    uint NumberOfSections;
    uint ExportedNamesSize;
    uint DebugDirectorySize;
    uint SectionAlignment;
    uint[2] Reserved;
}
struct NON_PAGED_DEBUG_INFO
{
    align (4):
    ushort Signature;
    ushort Flags;
    uint Size;
    ushort Machine;
    ushort Characteristics;
    uint TimeDateStamp;
    uint CheckSum;
    uint SizeOfImage;
    ulong ImageBase;
}
struct IMAGE_ARCHITECTURE_HEADER
{
    uint _bitfield0;
    uint FirstEntryRVA;
}
struct IMAGE_ARCHITECTURE_ENTRY
{
    uint FixupInstRVA;
    uint NewInst;
}
struct IMPORT_OBJECT_HEADER
{
    ushort Sig1;
    ushort Sig2;
    ushort Version;
    ushort Machine;
    uint TimeDateStamp;
    uint SizeOfData;
    union
    {
        ushort Ordinal;
        ushort Hint;
    }
    ushort _bitfield0;
}
alias IMPORT_OBJECT_TYPE = int;
enum : int
{
    IMPORT_OBJECT_CODE  = 0x00000000,
    IMPORT_OBJECT_DATA  = 0x00000001,
    IMPORT_OBJECT_CONST = 0x00000002,
}

alias IMPORT_OBJECT_NAME_TYPE = int;
enum : int
{
    IMPORT_OBJECT_ORDINAL         = 0x00000000,
    IMPORT_OBJECT_NAME            = 0x00000001,
    IMPORT_OBJECT_NAME_NO_PREFIX  = 0x00000002,
    IMPORT_OBJECT_NAME_UNDECORATE = 0x00000003,
    IMPORT_OBJECT_NAME_EXPORTAS   = 0x00000004,
}

alias ReplacesCorHdrNumericDefines = int;
enum : int
{
    COMIMAGE_FLAGS_ILONLY                      = 0x00000001,
    COMIMAGE_FLAGS_32BITREQUIRED               = 0x00000002,
    COMIMAGE_FLAGS_IL_LIBRARY                  = 0x00000004,
    COMIMAGE_FLAGS_STRONGNAMESIGNED            = 0x00000008,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT           = 0x00000010,
    COMIMAGE_FLAGS_TRACKDEBUGDATA              = 0x00010000,
    COMIMAGE_FLAGS_32BITPREFERRED              = 0x00020000,
    COR_VERSION_MAJOR_V2                       = 0x00000002,
    COR_VERSION_MAJOR                          = 0x00000002,
    COR_VERSION_MINOR                          = 0x00000005,
    COR_DELETED_NAME_LENGTH                    = 0x00000008,
    COR_VTABLEGAP_NAME_LENGTH                  = 0x00000008,
    NATIVE_TYPE_MAX_CB                         = 0x00000001,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE       = 0x000000ff,
    IMAGE_COR_MIH_METHODRVA                    = 0x00000001,
    IMAGE_COR_MIH_EHRVA                        = 0x00000002,
    IMAGE_COR_MIH_BASICBLOCK                   = 0x00000008,
    COR_VTABLE_32BIT                           = 0x00000001,
    COR_VTABLE_64BIT                           = 0x00000002,
    COR_VTABLE_FROM_UNMANAGED                  = 0x00000004,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 0x00000008,
    COR_VTABLE_CALL_MOST_DERIVED               = 0x00000010,
    IMAGE_COR_EATJ_THUNK_SIZE                  = 0x00000020,
    MAX_CLASS_NAME                             = 0x00000400,
    MAX_PACKAGE_NAME                           = 0x00000400,
}

alias RTL_UMS_SCHEDULER_REASON = int;
enum : int
{
    UmsSchedulerStartup       = 0x00000000,
    UmsSchedulerThreadBlocked = 0x00000001,
    UmsSchedulerThreadYield   = 0x00000002,
}

alias IMAGE_POLICY_ENTRY_TYPE = int;
enum : int
{
    ImagePolicyEntryTypeNone          = 0x00000000,
    ImagePolicyEntryTypeBool          = 0x00000001,
    ImagePolicyEntryTypeInt8          = 0x00000002,
    ImagePolicyEntryTypeUInt8         = 0x00000003,
    ImagePolicyEntryTypeInt16         = 0x00000004,
    ImagePolicyEntryTypeUInt16        = 0x00000005,
    ImagePolicyEntryTypeInt32         = 0x00000006,
    ImagePolicyEntryTypeUInt32        = 0x00000007,
    ImagePolicyEntryTypeInt64         = 0x00000008,
    ImagePolicyEntryTypeUInt64        = 0x00000009,
    ImagePolicyEntryTypeAnsiString    = 0x0000000a,
    ImagePolicyEntryTypeUnicodeString = 0x0000000b,
    ImagePolicyEntryTypeOverride      = 0x0000000c,
    ImagePolicyEntryTypeMaximum       = 0x0000000d,
}

alias IMAGE_POLICY_ID = int;
enum : int
{
    ImagePolicyIdNone             = 0x00000000,
    ImagePolicyIdEtw              = 0x00000001,
    ImagePolicyIdDebug            = 0x00000002,
    ImagePolicyIdCrashDump        = 0x00000003,
    ImagePolicyIdCrashDumpKey     = 0x00000004,
    ImagePolicyIdCrashDumpKeyGuid = 0x00000005,
    ImagePolicyIdParentSd         = 0x00000006,
    ImagePolicyIdParentSdRev      = 0x00000007,
    ImagePolicyIdSvn              = 0x00000008,
    ImagePolicyIdDeviceId         = 0x00000009,
    ImagePolicyIdCapability       = 0x0000000a,
    ImagePolicyIdScenarioId       = 0x0000000b,
    ImagePolicyIdMaximum          = 0x0000000c,
}

struct IMAGE_POLICY_ENTRY
{
    IMAGE_POLICY_ENTRY_TYPE Type;
    IMAGE_POLICY_ID PolicyId;
    union _u_e__Union
    {
        const(void)* None;
        BOOLEAN BoolValue;
        byte Int8Value;
        ubyte UInt8Value;
        short Int16Value;
        ushort UInt16Value;
        int Int32Value;
        uint UInt32Value;
        long Int64Value;
        ulong UInt64Value;
        const(char)* AnsiStringValue;
        const(wchar)* UnicodeStringValue;
    }
}
struct IMAGE_POLICY_METADATA
{
    ubyte Version;
    ubyte[7] Reserved0;
    ulong ApplicationId;
    IMAGE_POLICY_ENTRY[1] Policies;
}
struct HEAP_OPTIMIZE_RESOURCES_INFORMATION
{
    uint Version;
    uint Flags;
}
alias WORKERCALLBACKFUNC = void function(void*);
alias APC_CALLBACK_FUNCTION = void function(uint, void*, void*);
alias ACTIVATION_CONTEXT_INFO_CLASS = int;
enum : int
{
    ActivationContextBasicInformation                      = 0x00000001,
    ActivationContextDetailedInformation                   = 0x00000002,
    AssemblyDetailedInformationInActivationContext         = 0x00000003,
    FileInformationInAssemblyOfAssemblyInActivationContext = 0x00000004,
    RunlevelInformationInActivationContext                 = 0x00000005,
    CompatibilityInformationInActivationContext            = 0x00000006,
    ActivationContextManifestResourceName                  = 0x00000007,
    MaxActivationContextInfoClass                          = 0x00000008,
    AssemblyDetailedInformationInActivationContxt          = 0x00000003,
    FileInformationInAssemblyOfAssemblyInActivationContxt  = 0x00000004,
}

struct SUPPORTED_OS_INFO
{
    ushort MajorVersion;
    ushort MinorVersion;
}
struct MAXVERSIONTESTED_INFO
{
    ulong MaxVersionTested;
}
struct PACKEDEVENTINFO
{
    uint ulSize;
    uint ulNumEventsForLogFile;
    uint[1] ulOffsets;
}
alias SERVICE_NODE_TYPE = int;
enum : int
{
    DriverType               = 0x00000001,
    FileSystemType           = 0x00000002,
    Win32ServiceOwnProcess   = 0x00000010,
    Win32ServiceShareProcess = 0x00000020,
    AdapterType              = 0x00000004,
    RecognizerType           = 0x00000008,
}

alias SERVICE_LOAD_TYPE = int;
enum : int
{
    BootLoad    = 0x00000000,
    SystemLoad  = 0x00000001,
    AutoLoad    = 0x00000002,
    DemandLoad  = 0x00000003,
    DisableLoad = 0x00000004,
}

alias SERVICE_ERROR_TYPE = int;
enum : int
{
    IgnoreError   = 0x00000000,
    NormalError   = 0x00000001,
    SevereError   = 0x00000002,
    CriticalError = 0x00000003,
}

struct TAPE_GET_DRIVE_PARAMETERS
{
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    uint DefaultBlockSize;
    uint MaximumBlockSize;
    uint MinimumBlockSize;
    uint MaximumPartitionCount;
    uint FeaturesLow;
    TAPE_GET_DRIVE_PARAMETERS_FEATURES_HIGH FeaturesHigh;
    uint EOTWarningZoneSize;
}
struct TAPE_SET_DRIVE_PARAMETERS
{
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    uint EOTWarningZoneSize;
}
struct TAPE_GET_MEDIA_PARAMETERS
{
    LARGE_INTEGER Capacity;
    LARGE_INTEGER Remaining;
    uint BlockSize;
    uint PartitionCount;
    BOOLEAN WriteProtected;
}
struct TAPE_SET_MEDIA_PARAMETERS
{
    uint BlockSize;
}
struct TAPE_CREATE_PARTITION
{
    uint Method;
    uint Count;
    uint Size;
}
struct TAPE_WMI_OPERATIONS
{
    uint Method;
    uint DataBufferSize;
    void* DataBuffer;
}
alias TAPE_DRIVE_PROBLEM_TYPE = int;
enum : int
{
    TapeDriveProblemNone         = 0x00000000,
    TapeDriveReadWriteWarning    = 0x00000001,
    TapeDriveReadWriteError      = 0x00000002,
    TapeDriveReadWarning         = 0x00000003,
    TapeDriveWriteWarning        = 0x00000004,
    TapeDriveReadError           = 0x00000005,
    TapeDriveWriteError          = 0x00000006,
    TapeDriveHardwareError       = 0x00000007,
    TapeDriveUnsupportedMedia    = 0x00000008,
    TapeDriveScsiConnectionError = 0x00000009,
    TapeDriveTimetoClean         = 0x0000000a,
    TapeDriveCleanDriveNow       = 0x0000000b,
    TapeDriveMediaLifeExpired    = 0x0000000c,
    TapeDriveSnappedTape         = 0x0000000d,
}

alias TRANSACTION_STATE = int;
enum : int
{
    TransactionStateNormal          = 0x00000001,
    TransactionStateIndoubt         = 0x00000002,
    TransactionStateCommittedNotify = 0x00000003,
}

struct TRANSACTION_BASIC_INFORMATION
{
    GUID TransactionId;
    uint State;
    uint Outcome;
}
struct TRANSACTIONMANAGER_BASIC_INFORMATION
{
    GUID TmIdentity;
    LARGE_INTEGER VirtualClock;
}
struct TRANSACTIONMANAGER_LOG_INFORMATION
{
    GUID LogIdentity;
}
struct TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
    uint LogPathLength;
    wchar[1] LogPath;
}
struct TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
    ulong LastRecoveredLsn;
}
struct TRANSACTIONMANAGER_OLDEST_INFORMATION
{
    GUID OldestTransactionGuid;
}
struct TRANSACTION_PROPERTIES_INFORMATION
{
    uint IsolationLevel;
    uint IsolationFlags;
    LARGE_INTEGER Timeout;
    uint Outcome;
    uint DescriptionLength;
    wchar[1] Description;
}
struct TRANSACTION_BIND_INFORMATION
{
    HANDLE TmHandle;
}
struct TRANSACTION_ENLISTMENT_PAIR
{
    GUID EnlistmentId;
    GUID ResourceManagerId;
}
struct TRANSACTION_ENLISTMENTS_INFORMATION
{
    uint NumberOfEnlistments;
    TRANSACTION_ENLISTMENT_PAIR[1] EnlistmentPair;
}
struct TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
    TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
}
struct RESOURCEMANAGER_BASIC_INFORMATION
{
    GUID ResourceManagerId;
    uint DescriptionLength;
    wchar[1] Description;
}
struct RESOURCEMANAGER_COMPLETION_INFORMATION
{
    HANDLE IoCompletionPortHandle;
    ulong CompletionKey;
}
alias TRANSACTION_INFORMATION_CLASS = int;
enum : int
{
    TransactionBasicInformation              = 0x00000000,
    TransactionPropertiesInformation         = 0x00000001,
    TransactionEnlistmentInformation         = 0x00000002,
    TransactionSuperiorEnlistmentInformation = 0x00000003,
    TransactionBindInformation               = 0x00000004,
    TransactionDTCPrivateInformation         = 0x00000005,
}

alias TRANSACTIONMANAGER_INFORMATION_CLASS = int;
enum : int
{
    TransactionManagerBasicInformation             = 0x00000000,
    TransactionManagerLogInformation               = 0x00000001,
    TransactionManagerLogPathInformation           = 0x00000002,
    TransactionManagerRecoveryInformation          = 0x00000004,
    TransactionManagerOnlineProbeInformation       = 0x00000003,
    TransactionManagerOldestTransactionInformation = 0x00000005,
}

alias RESOURCEMANAGER_INFORMATION_CLASS = int;
enum : int
{
    ResourceManagerBasicInformation      = 0x00000000,
    ResourceManagerCompletionInformation = 0x00000001,
}

struct ENLISTMENT_BASIC_INFORMATION
{
    GUID EnlistmentId;
    GUID TransactionId;
    GUID ResourceManagerId;
}
struct ENLISTMENT_CRM_INFORMATION
{
    GUID CrmTransactionManagerId;
    GUID CrmResourceManagerId;
    GUID CrmEnlistmentId;
}
alias ENLISTMENT_INFORMATION_CLASS = int;
enum : int
{
    EnlistmentBasicInformation    = 0x00000000,
    EnlistmentRecoveryInformation = 0x00000001,
    EnlistmentCrmInformation      = 0x00000002,
}

struct TRANSACTION_LIST_ENTRY
{
    GUID UOW;
}
struct TRANSACTION_LIST_INFORMATION
{
    uint NumberOfTransactions;
    TRANSACTION_LIST_ENTRY[1] TransactionInformation;
}
alias KTMOBJECT_TYPE = int;
enum : int
{
    KTMOBJECT_TRANSACTION         = 0x00000000,
    KTMOBJECT_TRANSACTION_MANAGER = 0x00000001,
    KTMOBJECT_RESOURCE_MANAGER    = 0x00000002,
    KTMOBJECT_ENLISTMENT          = 0x00000003,
    KTMOBJECT_INVALID             = 0x00000004,
}

struct KTMOBJECT_CURSOR
{
    GUID LastQuery;
    uint ObjectIdCount;
    GUID[1] ObjectIds;
}
