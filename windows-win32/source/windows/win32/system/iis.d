module windows.win32.system.iis;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOL, BSTR, CHAR, FILETIME, HANDLE, HRESULT, PSTR, PWSTR;
import windows.win32.security.cryptography_ : CERT_CONTEXT;
import windows.win32.system.com_ : IUnknown, SAFEARRAY;

version (Windows):
extern (Windows):

BOOL GetExtensionVersion(HSE_VERSION_INFO*);
uint HttpExtensionProc(EXTENSION_CONTROL_BLOCK*);
uint HttpFilterProc(HTTP_FILTER_CONTEXT*, uint, void*);
BOOL GetFilterVersion(HTTP_FILTER_VERSION*);
enum IISADMIN_EXTENSIONS_REG_KEYA = "SOFTWARE\\Microsoft\\InetStp\\Extensions";
enum IISADMIN_EXTENSIONS_REG_KEYW = "SOFTWARE\\Microsoft\\InetStp\\Extensions";
enum IISADMIN_EXTENSIONS_REG_KEY = "SOFTWARE\\Microsoft\\InetStp\\Extensions";
enum IISADMIN_EXTENSIONS_CLSID_MD_KEYA = "LM/IISADMIN/EXTENSIONS/DCOMCLSIDS";
enum IISADMIN_EXTENSIONS_CLSID_MD_KEYW = "LM/IISADMIN/EXTENSIONS/DCOMCLSIDS";
enum IISADMIN_EXTENSIONS_CLSID_MD_KEY = "LM/IISADMIN/EXTENSIONS/DCOMCLSIDS";
enum ADMINDATA_MAX_NAME_LEN = 0x00000100;
enum CLSID_MSAdminBase_W = GUID(0xa9e69610, 0xb80d, 0x11d0, [0xb9, 0xb9, 0x0, 0xa0, 0xc9, 0x22, 0xe7, 0x50]);
enum IMGCHG_SIZE = 0x00000001;
enum IMGCHG_VIEW = 0x00000002;
enum IMGCHG_COMPLETE = 0x00000004;
enum IMGCHG_ANIMATE = 0x00000008;
enum IMGCHG_MASK = 0x0000000f;
enum IMGLOAD_NOTLOADED = 0x00100000;
enum IMGLOAD_LOADING = 0x00200000;
enum IMGLOAD_STOPPED = 0x00400000;
enum IMGLOAD_ERROR = 0x00800000;
enum IMGLOAD_COMPLETE = 0x01000000;
enum IMGLOAD_MASK = 0x01f00000;
enum IMGBITS_NONE = 0x02000000;
enum IMGBITS_PARTIAL = 0x04000000;
enum IMGBITS_TOTAL = 0x08000000;
enum IMGBITS_MASK = 0x0e000000;
enum IMGANIM_ANIMATED = 0x10000000;
enum IMGANIM_MASK = 0x10000000;
enum IMGTRANS_OPAQUE = 0x20000000;
enum IMGTRANS_MASK = 0x20000000;
enum DWN_COLORMODE = 0x0000003f;
enum DWN_DOWNLOADONLY = 0x00000040;
enum DWN_FORCEDITHER = 0x00000080;
enum DWN_RAWIMAGE = 0x00000100;
enum DWN_MIRRORIMAGE = 0x00000200;
enum CLSID_IImgCtx = GUID(0x3050f3d6, 0x98b5, 0x11cf, [0xbb, 0x82, 0x0, 0xaa, 0x0, 0xbd, 0xce, 0xb]);
enum IIS_MD_LOCAL_MACHINE_PATH = "LM";
enum IIS_MD_INSTANCE_ROOT = "Root";
enum IIS_MD_ISAPI_FILTERS = "/Filters";
enum IIS_MD_SVC_INFO_PATH = "Info";
enum IIS_MD_ADSI_SCHEMA_PATH_A = "/Schema";
enum IIS_MD_ADSI_SCHEMA_PATH_W = "/Schema";
enum IIS_MD_ADSI_METAID_BEGIN = 0x0001fbd0;
enum IIS_MD_UT_SERVER = 0x00000001;
enum IIS_MD_UT_FILE = 0x00000002;
enum IIS_MD_UT_WAM = 0x00000064;
enum ASP_MD_UT_APP = 0x00000065;
enum IIS_MD_UT_END_RESERVED = 0x000007d0;
enum IIS_MD_ID_BEGIN_RESERVED = 0x00000001;
enum IIS_MD_ID_END_RESERVED = 0x00007fff;
enum ASP_MD_ID_BEGIN_RESERVED = 0x00007000;
enum ASP_MD_ID_END_RESERVED = 0x000074ff;
enum WAM_MD_ID_BEGIN_RESERVED = 0x00007500;
enum WAM_MD_ID_END_RESERVED = 0x00007fff;
enum FP_MD_ID_BEGIN_RESERVED = 0x00008000;
enum FP_MD_ID_END_RESERVED = 0x00008fff;
enum SMTP_MD_ID_BEGIN_RESERVED = 0x00009000;
enum SMTP_MD_ID_END_RESERVED = 0x00009fff;
enum POP3_MD_ID_BEGIN_RESERVED = 0x0000a000;
enum POP3_MD_ID_END_RESERVED = 0x0000afff;
enum NNTP_MD_ID_BEGIN_RESERVED = 0x0000b000;
enum NNTP_MD_ID_END_RESERVED = 0x0000bfff;
enum IMAP_MD_ID_BEGIN_RESERVED = 0x0000c000;
enum IMAP_MD_ID_END_RESERVED = 0x0000cfff;
enum MSCS_MD_ID_BEGIN_RESERVED = 0x0000d000;
enum MSCS_MD_ID_END_RESERVED = 0x0000dfff;
enum APPCTR_MD_ID_BEGIN_RESERVED = 0x0000e000;
enum APPCTR_MD_ID_END_RESERVED = 0x0000efff;
enum USER_MD_ID_BASE_RESERVED = 0x0000ffff;
enum IIS_MD_SERVER_BASE = 0x000003e8;
enum MD_MAX_BANDWIDTH = 0x000003e8;
enum MD_KEY_TYPE = 0x000003ea;
enum MD_MAX_BANDWIDTH_BLOCKED = 0x000003eb;
enum MD_SCHEMA_METAID = 0x000003ec;
enum MD_SERVER_COMMAND = 0x000003f4;
enum MD_CONNECTION_TIMEOUT = 0x000003f5;
enum MD_MAX_CONNECTIONS = 0x000003f6;
enum MD_SERVER_COMMENT = 0x000003f7;
enum MD_SERVER_STATE = 0x000003f8;
enum MD_SERVER_AUTOSTART = 0x000003f9;
enum MD_SERVER_SIZE = 0x000003fa;
enum MD_SERVER_LISTEN_BACKLOG = 0x000003fb;
enum MD_SERVER_LISTEN_TIMEOUT = 0x000003fc;
enum MD_DOWNLEVEL_ADMIN_INSTANCE = 0x000003fd;
enum MD_LEVELS_TO_SCAN = 0x000003fe;
enum MD_SERVER_BINDINGS = 0x000003ff;
enum MD_MAX_ENDPOINT_CONNECTIONS = 0x00000400;
enum MD_SERVER_CONFIGURATION_INFO = 0x00000403;
enum MD_IISADMIN_EXTENSIONS = 0x00000404;
enum MD_DISABLE_SOCKET_POOLING = 0x00000405;
enum MD_METADATA_ID_REGISTRATION = 0x00000406;
enum IIS_MD_HTTP_BASE = 0x000007d0;
enum MD_SECURE_BINDINGS = 0x000007e5;
enum MD_BINDINGS = 0x000007e6;
enum MD_ENABLEDPROTOCOLS = 0x000007e7;
enum MD_FILTER_LOAD_ORDER = 0x000007f8;
enum MD_FILTER_IMAGE_PATH = 0x000007f9;
enum MD_FILTER_STATE = 0x000007fa;
enum MD_FILTER_ENABLED = 0x000007fb;
enum MD_FILTER_FLAGS = 0x000007fc;
enum MD_FILTER_DESCRIPTION = 0x000007fd;
enum MD_FILTER_ENABLE_CACHE = 0x000007fe;
enum MD_ADV_NOTIFY_PWD_EXP_IN_DAYS = 0x0000080f;
enum MD_ADV_CACHE_TTL = 0x00000810;
enum MD_NET_LOGON_WKS = 0x00000811;
enum MD_USE_HOST_NAME = 0x00000812;
enum MD_AUTH_CHANGE_FLAGS = 0x00000814;
enum MD_PROCESS_NTCR_IF_LOGGED_ON = 0x00000816;
enum MD_FRONTPAGE_WEB = 0x00000818;
enum MD_IN_PROCESS_ISAPI_APPS = 0x00000819;
enum MD_AUTH_CHANGE_URL = 0x0000080c;
enum MD_AUTH_EXPIRED_URL = 0x0000080d;
enum MD_AUTH_EXPIRED_UNSECUREURL = 0x00000813;
enum MD_ALLOW_PATH_INFO_FOR_SCRIPT_MAPPINGS = 0x0000082f;
enum MD_APP_FRIENDLY_NAME = 0x00000836;
enum MD_APP_ROOT = 0x00000837;
enum MD_APP_ISOLATED = 0x00000838;
enum MD_APP_WAM_CLSID = 0x00000839;
enum MD_APP_PACKAGE_ID = 0x0000083a;
enum MD_APP_PACKAGE_NAME = 0x0000083b;
enum MD_APP_OOP_RECOVER_LIMIT = 0x0000083e;
enum MD_APP_PERIODIC_RESTART_TIME = 0x0000083f;
enum MD_APP_PERIODIC_RESTART_REQUESTS = 0x00000840;
enum MD_APP_PERIODIC_RESTART_SCHEDULE = 0x00000841;
enum MD_APP_SHUTDOWN_TIME_LIMIT = 0x00000842;
enum MD_ADMIN_INSTANCE = 0x00000843;
enum MD_NOT_DELETABLE = 0x00000844;
enum MD_APP_TRACE_URL_LIST = 0x00000846;
enum MD_CENTRAL_W3C_LOGGING_ENABLED = 0x00000847;
enum MD_CUSTOM_ERROR_DESC = 0x00000848;
enum MD_CAL_VC_PER_CONNECT = 0x00000852;
enum MD_CAL_AUTH_RESERVE_TIMEOUT = 0x00000853;
enum MD_CAL_SSL_RESERVE_TIMEOUT = 0x00000854;
enum MD_CAL_W3_ERROR = 0x00000855;
enum MD_CPU_CGI_ENABLED = 0x0000085c;
enum MD_CPU_APP_ENABLED = 0x0000085d;
enum MD_CPU_LIMITS_ENABLED = 0x0000085f;
enum MD_CPU_RESET_INTERVAL = 0x00000860;
enum MD_CPU_LOGGING_INTERVAL = 0x00000861;
enum MD_CPU_LOGGING_OPTIONS = 0x00000862;
enum MD_CPU_CGI_LIMIT = 0x00000864;
enum MD_CPU_LIMIT_LOGEVENT = 0x00000865;
enum MD_CPU_LIMIT_PRIORITY = 0x00000866;
enum MD_CPU_LIMIT_PROCSTOP = 0x00000867;
enum MD_CPU_LIMIT_PAUSE = 0x00000868;
enum MD_SET_HOST_NAME = 0x0000086a;
enum MD_CPU_DISABLE_ALL_LOGGING = 0x00000000;
enum MD_CPU_ENABLE_ALL_PROC_LOGGING = 0x00000001;
enum MD_CPU_ENABLE_CGI_LOGGING = 0x00000002;
enum MD_CPU_ENABLE_APP_LOGGING = 0x00000004;
enum MD_CPU_ENABLE_EVENT = 0x00000001;
enum MD_CPU_ENABLE_PROC_TYPE = 0x00000002;
enum MD_CPU_ENABLE_USER_TIME = 0x00000004;
enum MD_CPU_ENABLE_KERNEL_TIME = 0x00000008;
enum MD_CPU_ENABLE_PAGE_FAULTS = 0x00000010;
enum MD_CPU_ENABLE_TOTAL_PROCS = 0x00000020;
enum MD_CPU_ENABLE_ACTIVE_PROCS = 0x00000040;
enum MD_CPU_ENABLE_TERMINATED_PROCS = 0x00000080;
enum MD_CPU_ENABLE_LOGGING = 0x80000000;
enum MD_ISAPI_RESTRICTION_LIST = 0x00000873;
enum MD_CGI_RESTRICTION_LIST = 0x00000874;
enum MD_RESTRICTION_LIST_CUSTOM_DESC = 0x00000875;
enum MD_SECURITY_SETUP_REQUIRED = 0x00000876;
enum MD_APP_DEPENDENCIES = 0x00000877;
enum MD_WEB_SVC_EXT_RESTRICTION_LIST = 0x00000878;
enum MD_MD_SERVER_SS_AUTH_MAPPING = 0x00000898;
enum MD_CERT_NO_REVOC_CHECK = 0x00000001;
enum MD_CERT_CACHE_RETRIEVAL_ONLY = 0x00000002;
enum MD_CERT_CHECK_REVOCATION_FRESHNESS_TIME = 0x00000004;
enum MD_CERT_NO_USAGE_CHECK = 0x00010000;
enum MD_HC_COMPRESSION_DIRECTORY = 0x000008a2;
enum MD_HC_CACHE_CONTROL_HEADER = 0x000008a3;
enum MD_HC_EXPIRES_HEADER = 0x000008a4;
enum MD_HC_DO_DYNAMIC_COMPRESSION = 0x000008a5;
enum MD_HC_DO_STATIC_COMPRESSION = 0x000008a6;
enum MD_HC_DO_ON_DEMAND_COMPRESSION = 0x000008a7;
enum MD_HC_DO_DISK_SPACE_LIMITING = 0x000008a8;
enum MD_HC_NO_COMPRESSION_FOR_HTTP_10 = 0x000008a9;
enum MD_HC_NO_COMPRESSION_FOR_PROXIES = 0x000008aa;
enum MD_HC_NO_COMPRESSION_FOR_RANGE = 0x000008ab;
enum MD_HC_SEND_CACHE_HEADERS = 0x000008ac;
enum MD_HC_MAX_DISK_SPACE_USAGE = 0x000008ad;
enum MD_HC_IO_BUFFER_SIZE = 0x000008ae;
enum MD_HC_COMPRESSION_BUFFER_SIZE = 0x000008af;
enum MD_HC_MAX_QUEUE_LENGTH = 0x000008b0;
enum MD_HC_FILES_DELETED_PER_DISK_FREE = 0x000008b1;
enum MD_HC_MIN_FILE_SIZE_FOR_COMP = 0x000008b2;
enum MD_HC_COMPRESSION_DLL = 0x000008bd;
enum MD_HC_FILE_EXTENSIONS = 0x000008be;
enum MD_HC_MIME_TYPE = 0x000008bf;
enum MD_HC_PRIORITY = 0x000008c0;
enum MD_HC_DYNAMIC_COMPRESSION_LEVEL = 0x000008c1;
enum MD_HC_ON_DEMAND_COMP_LEVEL = 0x000008c2;
enum MD_HC_CREATE_FLAGS = 0x000008c3;
enum MD_HC_SCRIPT_FILE_EXTENSIONS = 0x000008c4;
enum MD_HC_DO_NAMESPACE_DYNAMIC_COMPRESSION = 0x000008cf;
enum MD_HC_DO_NAMESPACE_STATIC_COMPRESSION = 0x000008d0;
enum MD_WIN32_ERROR = 0x0000044b;
enum IIS_MD_VR_BASE = 0x00000bb8;
enum MD_VR_PATH = 0x00000bb9;
enum MD_VR_USERNAME = 0x00000bba;
enum MD_VR_PASSWORD = 0x00000bbb;
enum MD_VR_PASSTHROUGH = 0x00000bbe;
enum MD_VR_NO_CACHE = 0x00000bbf;
enum MD_VR_IGNORE_TRANSLATE = 0x00000bc0;
enum IIS_MD_LOG_BASE = 0x00000fa0;
enum MD_LOG_TYPE = 0x00000fa0;
enum MD_LOGFILE_DIRECTORY = 0x00000fa1;
enum MD_LOG_UNUSED1 = 0x00000fa2;
enum MD_LOGFILE_PERIOD = 0x00000fa3;
enum MD_LOGFILE_TRUNCATE_SIZE = 0x00000fa4;
enum MD_LOG_PLUGIN_MOD_ID = 0x00000fa5;
enum MD_LOG_PLUGIN_UI_ID = 0x00000fa6;
enum MD_LOGSQL_DATA_SOURCES = 0x00000fa7;
enum MD_LOGSQL_TABLE_NAME = 0x00000fa8;
enum MD_LOGSQL_USER_NAME = 0x00000fa9;
enum MD_LOGSQL_PASSWORD = 0x00000faa;
enum MD_LOG_PLUGIN_ORDER = 0x00000fab;
enum MD_LOG_PLUGINS_AVAILABLE = 0x00000fac;
enum MD_LOGEXT_FIELD_MASK = 0x00000fad;
enum MD_LOGEXT_FIELD_MASK2 = 0x00000fae;
enum MD_LOGFILE_LOCALTIME_ROLLOVER = 0x00000faf;
enum IIS_MD_LOG_LAST = 0x00000faf;
enum MD_GLOBAL_BINARY_LOGGING_ENABLED = 0x00000fb0;
enum MD_LOG_TYPE_DISABLED = 0x00000000;
enum MD_LOG_TYPE_ENABLED = 0x00000001;
enum MD_LOGFILE_PERIOD_NONE = 0x00000000;
enum MD_LOGFILE_PERIOD_MAXSIZE = 0x00000000;
enum MD_LOGFILE_PERIOD_DAILY = 0x00000001;
enum MD_LOGFILE_PERIOD_WEEKLY = 0x00000002;
enum MD_LOGFILE_PERIOD_MONTHLY = 0x00000003;
enum MD_LOGFILE_PERIOD_HOURLY = 0x00000004;
enum MD_EXTLOG_DATE = 0x00000001;
enum MD_EXTLOG_TIME = 0x00000002;
enum MD_EXTLOG_CLIENT_IP = 0x00000004;
enum MD_EXTLOG_USERNAME = 0x00000008;
enum MD_EXTLOG_SITE_NAME = 0x00000010;
enum MD_EXTLOG_COMPUTER_NAME = 0x00000020;
enum MD_EXTLOG_SERVER_IP = 0x00000040;
enum MD_EXTLOG_METHOD = 0x00000080;
enum MD_EXTLOG_URI_STEM = 0x00000100;
enum MD_EXTLOG_URI_QUERY = 0x00000200;
enum MD_EXTLOG_HTTP_STATUS = 0x00000400;
enum MD_EXTLOG_WIN32_STATUS = 0x00000800;
enum MD_EXTLOG_BYTES_SENT = 0x00001000;
enum MD_EXTLOG_BYTES_RECV = 0x00002000;
enum MD_EXTLOG_TIME_TAKEN = 0x00004000;
enum MD_EXTLOG_SERVER_PORT = 0x00008000;
enum MD_EXTLOG_USER_AGENT = 0x00010000;
enum MD_EXTLOG_COOKIE = 0x00020000;
enum MD_EXTLOG_REFERER = 0x00040000;
enum MD_EXTLOG_PROTOCOL_VERSION = 0x00080000;
enum MD_EXTLOG_HOST = 0x00100000;
enum MD_EXTLOG_HTTP_SUB_STATUS = 0x00200000;
enum IIS_MD_LOGCUSTOM_BASE = 0x00001194;
enum MD_LOGCUSTOM_PROPERTY_NAME = 0x00001195;
enum MD_LOGCUSTOM_PROPERTY_HEADER = 0x00001196;
enum MD_LOGCUSTOM_PROPERTY_ID = 0x00001197;
enum MD_LOGCUSTOM_PROPERTY_MASK = 0x00001198;
enum MD_LOGCUSTOM_PROPERTY_DATATYPE = 0x00001199;
enum MD_LOGCUSTOM_SERVICES_STRING = 0x0000119a;
enum MD_CPU_LOGGING_MASK = 0x0000119b;
enum MD_LOGCUSTOM_PROPERTY_NODE_ID = 0x0000119c;
enum IIS_MD_LOGCUSTOM_LAST = 0x0000119c;
enum MD_LOGCUSTOM_DATATYPE_INT = 0x00000000;
enum MD_LOGCUSTOM_DATATYPE_UINT = 0x00000001;
enum MD_LOGCUSTOM_DATATYPE_LONG = 0x00000002;
enum MD_LOGCUSTOM_DATATYPE_ULONG = 0x00000003;
enum MD_LOGCUSTOM_DATATYPE_FLOAT = 0x00000004;
enum MD_LOGCUSTOM_DATATYPE_DOUBLE = 0x00000005;
enum MD_LOGCUSTOM_DATATYPE_LPSTR = 0x00000006;
enum MD_LOGCUSTOM_DATATYPE_LPWSTR = 0x00000007;
enum MD_NOTIFY_SECURE_PORT = 0x00000001;
enum MD_NOTIFY_NONSECURE_PORT = 0x00000002;
enum MD_NOTIFY_READ_RAW_DATA = 0x00008000;
enum MD_NOTIFY_PREPROC_HEADERS = 0x00004000;
enum MD_NOTIFY_AUTHENTICATION = 0x00002000;
enum MD_NOTIFY_URL_MAP = 0x00001000;
enum MD_NOTIFY_ACCESS_DENIED = 0x00000800;
enum MD_NOTIFY_SEND_RESPONSE = 0x00000040;
enum MD_NOTIFY_SEND_RAW_DATA = 0x00000400;
enum MD_NOTIFY_LOG = 0x00000200;
enum MD_NOTIFY_END_OF_REQUEST = 0x00000080;
enum MD_NOTIFY_END_OF_NET_SESSION = 0x00000100;
enum MD_NOTIFY_AUTH_COMPLETE = 0x04000000;
enum MD_NOTIFY_ORDER_HIGH = 0x00080000;
enum MD_NOTIFY_ORDER_MEDIUM = 0x00040000;
enum MD_NOTIFY_ORDER_LOW = 0x00020000;
enum MD_NOTIFY_ORDER_DEFAULT = 0x00020000;
enum IIS_MD_FTP_BASE = 0x00001388;
enum MD_EXIT_MESSAGE = 0x00001389;
enum MD_GREETING_MESSAGE = 0x0000138a;
enum MD_MAX_CLIENTS_MESSAGE = 0x0000138b;
enum MD_MSDOS_DIR_OUTPUT = 0x0000138c;
enum MD_ALLOW_ANONYMOUS = 0x0000138d;
enum MD_ANONYMOUS_ONLY = 0x0000138e;
enum MD_LOG_ANONYMOUS = 0x0000138f;
enum MD_LOG_NONANONYMOUS = 0x00001390;
enum MD_ALLOW_REPLACE_ON_RENAME = 0x00001391;
enum MD_SHOW_4_DIGIT_YEAR = 0x00001392;
enum MD_BANNER_MESSAGE = 0x00001393;
enum MD_USER_ISOLATION = 0x00001394;
enum MD_FTP_LOG_IN_UTF_8 = 0x00001395;
enum MD_AD_CONNECTIONS_USERNAME = 0x00001396;
enum MD_AD_CONNECTIONS_PASSWORD = 0x00001397;
enum MD_PASSIVE_PORT_RANGE = 0x00001398;
enum MD_SUPPRESS_DEFAULT_BANNER = 0x00001399;
enum MD_FTP_PASV_RESPONSE_IP = 0x0000139a;
enum MD_FTP_KEEP_PARTIAL_UPLOADS = 0x0000139b;
enum MD_FTP_UTF8_FILE_NAMES = 0x0000139c;
enum MD_FTPS_SECURE_CONTROL_CHANNEL = 0x000013ba;
enum MD_FTPS_SECURE_DATA_CHANNEL = 0x000013bb;
enum MD_FTPS_SECURE_ANONYMOUS = 0x000013bc;
enum MD_FTPS_128_BITS = 0x000013bd;
enum MD_FTPS_ALLOW_CCC = 0x000013be;
enum IIS_MD_SSL_BASE = 0x0000157c;
enum MD_SSL_PUBLIC_KEY = 0x0000157c;
enum MD_SSL_PRIVATE_KEY = 0x0000157d;
enum MD_SSL_KEY_PASSWORD = 0x0000157e;
enum MD_SSL_KEY_REQUEST = 0x0000157f;
enum MD_SSL_USE_DS_MAPPER = 0x0000158f;
enum MD_SSL_ALWAYS_NEGO_CLIENT_CERT = 0x00001591;
enum IIS_MD_FILE_PROP_BASE = 0x00001770;
enum MD_AUTHORIZATION = 0x00001770;
enum MD_REALM = 0x00001771;
enum MD_HTTP_EXPIRES = 0x00001772;
enum MD_HTTP_PICS = 0x00001773;
enum MD_HTTP_CUSTOM = 0x00001774;
enum MD_DIRECTORY_BROWSING = 0x00001775;
enum MD_DEFAULT_LOAD_FILE = 0x00001776;
enum MD_CUSTOM_ERROR = 0x00001778;
enum MD_FOOTER_DOCUMENT = 0x00001779;
enum MD_FOOTER_ENABLED = 0x0000177a;
enum MD_HTTP_REDIRECT = 0x0000177b;
enum MD_DEFAULT_LOGON_DOMAIN = 0x0000177c;
enum MD_LOGON_METHOD = 0x0000177d;
enum MD_SCRIPT_MAPS = 0x0000177e;
enum MD_MIME_MAP = 0x0000177f;
enum MD_ACCESS_PERM = 0x00001780;
enum MD_IP_SEC = 0x00001783;
enum MD_ANONYMOUS_USER_NAME = 0x00001784;
enum MD_ANONYMOUS_PWD = 0x00001785;
enum MD_ANONYMOUS_USE_SUBAUTH = 0x00001786;
enum MD_DONT_LOG = 0x00001787;
enum MD_ADMIN_ACL = 0x0000178b;
enum MD_SSI_EXEC_DISABLED = 0x0000178c;
enum MD_DO_REVERSE_DNS = 0x0000178d;
enum MD_SSL_ACCESS_PERM = 0x0000178e;
enum MD_AUTHORIZATION_PERSISTENCE = 0x0000178f;
enum MD_NTAUTHENTICATION_PROVIDERS = 0x00001790;
enum MD_SCRIPT_TIMEOUT = 0x00001791;
enum MD_CACHE_EXTENSIONS = 0x00001792;
enum MD_CREATE_PROCESS_AS_USER = 0x00001793;
enum MD_CREATE_PROC_NEW_CONSOLE = 0x00001794;
enum MD_POOL_IDC_TIMEOUT = 0x00001795;
enum MD_ALLOW_KEEPALIVES = 0x00001796;
enum MD_IS_CONTENT_INDEXED = 0x00001797;
enum MD_CC_NO_CACHE = 0x00001799;
enum MD_CC_MAX_AGE = 0x0000179a;
enum MD_CC_OTHER = 0x0000179b;
enum MD_REDIRECT_HEADERS = 0x0000179c;
enum MD_UPLOAD_READAHEAD_SIZE = 0x0000179d;
enum MD_PUT_READ_SIZE = 0x0000179e;
enum MD_USE_DIGEST_SSP = 0x0000179f;
enum MD_ENABLE_URL_AUTHORIZATION = 0x000017a0;
enum MD_URL_AUTHORIZATION_STORE_NAME = 0x000017a1;
enum MD_URL_AUTHORIZATION_SCOPE_NAME = 0x000017a2;
enum MD_MAX_REQUEST_ENTITY_ALLOWED = 0x000017a3;
enum MD_PASSPORT_REQUIRE_AD_MAPPING = 0x000017a4;
enum MD_URL_AUTHORIZATION_IMPERSONATION_LEVEL = 0x000017a5;
enum MD_HTTP_FORWARDER_CUSTOM = 0x000017a6;
enum MD_CUSTOM_DEPLOYMENT_DATA = 0x000017a7;
enum MD_HTTPERRORS_EXISTING_RESPONSE = 0x000017a8;
enum ASP_MD_SERVER_BASE = 0x00001b58;
enum MD_ASP_BUFFERINGON = 0x00001b58;
enum MD_ASP_LOGERRORREQUESTS = 0x00001b59;
enum MD_ASP_SCRIPTERRORSSENTTOBROWSER = 0x00001b5a;
enum MD_ASP_SCRIPTERRORMESSAGE = 0x00001b5b;
enum MD_ASP_SCRIPTFILECACHESIZE = 0x00001b5c;
enum MD_ASP_SCRIPTENGINECACHEMAX = 0x00001b5d;
enum MD_ASP_SCRIPTTIMEOUT = 0x00001b5e;
enum MD_ASP_SESSIONTIMEOUT = 0x00001b5f;
enum MD_ASP_ENABLEPARENTPATHS = 0x00001b60;
enum MD_ASP_MEMFREEFACTOR = 0x00001b61;
enum MD_ASP_MINUSEDBLOCKS = 0x00001b62;
enum MD_ASP_ALLOWSESSIONSTATE = 0x00001b63;
enum MD_ASP_SCRIPTLANGUAGE = 0x00001b64;
enum MD_ASP_QUEUETIMEOUT = 0x00001b65;
enum MD_ASP_ALLOWOUTOFPROCCOMPONENTS = 0x00001b66;
enum MD_ASP_ALLOWOUTOFPROCCMPNTS = 0x00001b66;
enum MD_ASP_EXCEPTIONCATCHENABLE = 0x00001b67;
enum MD_ASP_CODEPAGE = 0x00001b68;
enum MD_ASP_SCRIPTLANGUAGELIST = 0x00001b69;
enum MD_ASP_ENABLESERVERDEBUG = 0x00001b6a;
enum MD_ASP_ENABLECLIENTDEBUG = 0x00001b6b;
enum MD_ASP_TRACKTHREADINGMODEL = 0x00001b6c;
enum MD_ASP_ENABLEASPHTMLFALLBACK = 0x00001b6d;
enum MD_ASP_ENABLECHUNKEDENCODING = 0x00001b6e;
enum MD_ASP_ENABLETYPELIBCACHE = 0x00001b6f;
enum MD_ASP_ERRORSTONTLOG = 0x00001b70;
enum MD_ASP_PROCESSORTHREADMAX = 0x00001b71;
enum MD_ASP_REQEUSTQUEUEMAX = 0x00001b72;
enum MD_ASP_ENABLEAPPLICATIONRESTART = 0x00001b73;
enum MD_ASP_QUEUECONNECTIONTESTTIME = 0x00001b74;
enum MD_ASP_SESSIONMAX = 0x00001b75;
enum MD_ASP_THREADGATEENABLED = 0x00001b76;
enum MD_ASP_THREADGATETIMESLICE = 0x00001b77;
enum MD_ASP_THREADGATESLEEPDELAY = 0x00001b78;
enum MD_ASP_THREADGATESLEEPMAX = 0x00001b79;
enum MD_ASP_THREADGATELOADLOW = 0x00001b7a;
enum MD_ASP_THREADGATELOADHIGH = 0x00001b7b;
enum MD_ASP_DISKTEMPLATECACHEDIRECTORY = 0x00001b7c;
enum MD_ASP_MAXDISKTEMPLATECACHEFILES = 0x00001b80;
enum MD_ASP_EXECUTEINMTA = 0x00001b81;
enum MD_ASP_LCID = 0x00001b82;
enum MD_ASP_KEEPSESSIONIDSECURE = 0x00001b83;
enum MD_ASP_SERVICE_FLAGS = 0x00001b84;
enum MD_ASP_SERVICE_FLAG_TRACKER = 0x00001b85;
enum MD_ASP_SERVICE_FLAG_FUSION = 0x00001b86;
enum MD_ASP_SERVICE_FLAG_PARTITIONS = 0x00001b87;
enum MD_ASP_SERVICE_PARTITION_ID = 0x00001b88;
enum MD_ASP_SERVICE_SXS_NAME = 0x00001b89;
enum MD_ASP_SERVICE_ENABLE_TRACKER = 0x00000001;
enum MD_ASP_SERVICE_ENABLE_SXS = 0x00000002;
enum MD_ASP_SERVICE_USE_PARTITION = 0x00000004;
enum MD_ASP_CALCLINENUMBER = 0x00001b8a;
enum MD_ASP_RUN_ONEND_ANON = 0x00001b8b;
enum MD_ASP_BUFFER_LIMIT = 0x00001b8c;
enum MD_ASP_MAX_REQUEST_ENTITY_ALLOWED = 0x00001b8d;
enum MD_ASP_MAXREQUESTENTITY = 0x00001b8d;
enum MD_ASP_ID_LAST = 0x00001b8d;
enum WAM_MD_SERVER_BASE = 0x00001d4c;
enum MD_WAM_USER_NAME = 0x00001d4d;
enum MD_WAM_PWD = 0x00001d4e;
enum WEBDAV_MD_SERVER_BASE = 0x00002134;
enum MD_WEBDAV_MAX_ATTRIBUTES_PER_ELEMENT = 0x00002135;
enum IIS_MD_APPPOOL_BASE = 0x00002328;
enum MD_APPPOOL_PERIODIC_RESTART_TIME = 0x00002329;
enum MD_APPPOOL_PERIODIC_RESTART_REQUEST_COUNT = 0x0000232a;
enum MD_APPPOOL_MAX_PROCESS_COUNT = 0x0000232b;
enum MD_APPPOOL_PINGING_ENABLED = 0x0000232c;
enum MD_APPPOOL_IDLE_TIMEOUT = 0x0000232d;
enum MD_APPPOOL_RAPID_FAIL_PROTECTION_ENABLED = 0x0000232e;
enum MD_APPPOOL_SMP_AFFINITIZED = 0x0000232f;
enum MD_APPPOOL_SMP_AFFINITIZED_PROCESSOR_MASK = 0x00002330;
enum MD_APPPOOL_ORPHAN_PROCESSES_FOR_DEBUGGING = 0x00002331;
enum MD_APPPOOL_STARTUP_TIMELIMIT = 0x00002333;
enum MD_APPPOOL_SHUTDOWN_TIMELIMIT = 0x00002334;
enum MD_APPPOOL_PING_INTERVAL = 0x00002335;
enum MD_APPPOOL_PING_RESPONSE_TIMELIMIT = 0x00002336;
enum MD_APPPOOL_DISALLOW_OVERLAPPING_ROTATION = 0x00002337;
enum MD_APPPOOL_UL_APPPOOL_QUEUE_LENGTH = 0x00002339;
enum MD_APPPOOL_DISALLOW_ROTATION_ON_CONFIG_CHANGE = 0x0000233a;
enum MD_APPPOOL_PERIODIC_RESTART_SCHEDULE = 0x0000233c;
enum MD_APPPOOL_IDENTITY_TYPE = 0x0000233d;
enum MD_CPU_ACTION = 0x0000233e;
enum MD_CPU_LIMIT = 0x0000233f;
enum MD_APPPOOL_PERIODIC_RESTART_MEMORY = 0x00002340;
enum MD_APPPOOL_COMMAND = 0x00002342;
enum MD_APPPOOL_STATE = 0x00002343;
enum MD_APPPOOL_AUTO_START = 0x00002344;
enum MD_RAPID_FAIL_PROTECTION_INTERVAL = 0x00002345;
enum MD_RAPID_FAIL_PROTECTION_MAX_CRASHES = 0x00002346;
enum MD_APPPOOL_ORPHAN_ACTION_EXE = 0x00002347;
enum MD_APPPOOL_ORPHAN_ACTION_PARAMS = 0x00002348;
enum MB_DONT_IMPERSONATE = 0x00002349;
enum MD_LOAD_BALANCER_CAPABILITIES = 0x0000234a;
enum MD_APPPOOL_AUTO_SHUTDOWN_EXE = 0x0000234b;
enum MD_APPPOOL_AUTO_SHUTDOWN_PARAMS = 0x0000234c;
enum MD_APP_POOL_LOG_EVENT_ON_RECYCLE = 0x0000234d;
enum MD_APPPOOL_PERIODIC_RESTART_PRIVATE_MEMORY = 0x0000234e;
enum MD_APPPOOL_MANAGED_RUNTIME_VERSION = 0x0000234f;
enum MD_APPPOOL_32_BIT_APP_ON_WIN64 = 0x00002350;
enum MD_APPPOOL_MANAGED_PIPELINE_MODE = 0x00002351;
enum MD_APP_POOL_LOG_EVENT_ON_PROCESSMODEL = 0x00002352;
enum MD_APP_POOL_PROCESSMODEL_IDLE_TIMEOUT = 0x00000001;
enum MD_APP_POOL_RECYCLE_TIME = 0x00000001;
enum MD_APP_POOL_RECYCLE_REQUESTS = 0x00000002;
enum MD_APP_POOL_RECYCLE_SCHEDULE = 0x00000004;
enum MD_APP_POOL_RECYCLE_MEMORY = 0x00000008;
enum MD_APP_POOL_RECYCLE_ISAPI_UNHEALTHY = 0x00000010;
enum MD_APP_POOL_RECYCLE_ON_DEMAND = 0x00000020;
enum MD_APP_POOL_RECYCLE_CONFIG_CHANGE = 0x00000040;
enum MD_APP_POOL_RECYCLE_PRIVATE_MEMORY = 0x00000080;
enum MD_CPU_NO_ACTION = 0x00000000;
enum MD_CPU_KILL_W3WP = 0x00000001;
enum MD_CPU_TRACE = 0x00000002;
enum MD_CPU_THROTTLE = 0x00000003;
enum MD_APPPOOL_COMMAND_START = 0x00000001;
enum MD_APPPOOL_COMMAND_STOP = 0x00000002;
enum MD_APPPOOL_STATE_STARTING = 0x00000001;
enum MD_APPPOOL_STATE_STARTED = 0x00000002;
enum MD_APPPOOL_STATE_STOPPING = 0x00000003;
enum MD_APPPOOL_STATE_STOPPED = 0x00000004;
enum MD_APPPOOL_IDENTITY_TYPE_LOCALSYSTEM = 0x00000000;
enum MD_APPPOOL_IDENTITY_TYPE_LOCALSERVICE = 0x00000001;
enum MD_APPPOOL_IDENTITY_TYPE_NETWORKSERVICE = 0x00000002;
enum MD_APPPOOL_IDENTITY_TYPE_SPECIFICUSER = 0x00000003;
enum MD_LOAD_BALANCER_CAPABILITIES_BASIC = 0x00000001;
enum MD_LOAD_BALANCER_CAPABILITIES_SOPHISTICATED = 0x00000002;
enum IIS_MD_APP_BASE = 0x0000238c;
enum MD_APP_APPPOOL_ID = 0x0000238d;
enum MD_APP_ALLOW_TRANSIENT_REGISTRATION = 0x0000238e;
enum MD_APP_AUTO_START = 0x0000238f;
enum MD_APPPOOL_PERIODIC_RESTART_CONNECTIONS = 0x00002390;
enum MD_APPPOOL_APPPOOL_ID = 0x000023f1;
enum MD_APPPOOL_ALLOW_TRANSIENT_REGISTRATION = 0x000023f2;
enum IIS_MD_GLOBAL_BASE = 0x000023f0;
enum MD_MAX_GLOBAL_BANDWIDTH = 0x000023f1;
enum MD_MAX_GLOBAL_CONNECTIONS = 0x000023f2;
enum MD_GLOBAL_STANDARD_APP_MODE_ENABLED = 0x000023f3;
enum MD_HEADER_WAIT_TIMEOUT = 0x000023f4;
enum MD_MIN_FILE_BYTES_PER_SEC = 0x000023f5;
enum MD_GLOBAL_LOG_IN_UTF_8 = 0x000023f6;
enum MD_DEMAND_START_THRESHOLD = 0x000023f7;
enum MD_GLOBAL_SESSIONKEY = 0x0000270f;
enum MD_ROOT_ENABLE_EDIT_WHILE_RUNNING = 0x0000270e;
enum MD_GLOBAL_CHANGE_NUMBER = 0x0000270d;
enum MD_ROOT_ENABLE_HISTORY = 0x0000270c;
enum MD_ROOT_MAX_HISTORY_FILES = 0x0000270b;
enum MD_GLOBAL_EDIT_WHILE_RUNNING_MAJOR_VERSION_NUMBER = 0x0000270a;
enum MD_GLOBAL_EDIT_WHILE_RUNNING_MINOR_VERSION_NUMBER = 0x00002709;
enum MD_GLOBAL_XMLSCHEMATIMESTAMP = 0x00002708;
enum MD_GLOBAL_BINSCHEMATIMESTAMP = 0x00002707;
enum MD_COMMENTS = 0x00002706;
enum MD_LOCATION = 0x00002705;
enum MD_MAX_ERROR_FILES = 0x00002704;
enum MD_STOP_LISTENING = 0x00002703;
enum MD_AUTH_ANONYMOUS = 0x00000001;
enum MD_AUTH_BASIC = 0x00000002;
enum MD_AUTH_NT = 0x00000004;
enum MD_AUTH_MD5 = 0x00000010;
enum MD_AUTH_PASSPORT = 0x00000040;
enum MD_AUTH_SINGLEREQUEST = 0x00000040;
enum MD_AUTH_SINGLEREQUESTIFPROXY = 0x00000080;
enum MD_AUTH_SINGLEREQUESTALWAYSIFPROXY = 0x00000100;
enum MD_ACCESS_READ = 0x00000001;
enum MD_ACCESS_WRITE = 0x00000002;
enum MD_ACCESS_EXECUTE = 0x00000004;
enum MD_ACCESS_SOURCE = 0x00000010;
enum MD_ACCESS_SCRIPT = 0x00000200;
enum MD_ACCESS_NO_REMOTE_WRITE = 0x00000400;
enum MD_ACCESS_NO_REMOTE_READ = 0x00001000;
enum MD_ACCESS_NO_REMOTE_EXECUTE = 0x00002000;
enum MD_ACCESS_NO_REMOTE_SCRIPT = 0x00004000;
enum MD_ACCESS_NO_PHYSICAL_DIR = 0x00008000;
enum MD_ACCESS_SSL = 0x00000008;
enum MD_ACCESS_NEGO_CERT = 0x00000020;
enum MD_ACCESS_REQUIRE_CERT = 0x00000040;
enum MD_ACCESS_MAP_CERT = 0x00000080;
enum MD_ACCESS_SSL128 = 0x00000100;
enum MD_ACCESS_MASK = 0x0000ffff;
enum MD_DIRBROW_SHOW_DATE = 0x00000002;
enum MD_DIRBROW_SHOW_TIME = 0x00000004;
enum MD_DIRBROW_SHOW_SIZE = 0x00000008;
enum MD_DIRBROW_SHOW_EXTENSION = 0x00000010;
enum MD_DIRBROW_LONG_DATE = 0x00000020;
enum MD_DIRBROW_ENABLED = 0x80000000;
enum MD_DIRBROW_LOADDEFAULT = 0x40000000;
enum MD_LOGON_INTERACTIVE = 0x00000000;
enum MD_LOGON_BATCH = 0x00000001;
enum MD_LOGON_NETWORK = 0x00000002;
enum MD_LOGON_NETWORK_CLEARTEXT = 0x00000003;
enum MD_PASSPORT_NO_MAPPING = 0x00000000;
enum MD_PASSPORT_TRY_MAPPING = 0x00000001;
enum MD_PASSPORT_NEED_MAPPING = 0x00000002;
enum MD_NOTIFEXAUTH_NTLMSSL = 0x00000001;
enum MD_FILTER_STATE_LOADED = 0x00000001;
enum MD_FILTER_STATE_UNLOADED = 0x00000004;
enum MD_SERVER_STATE_STARTING = 0x00000001;
enum MD_SERVER_STATE_STARTED = 0x00000002;
enum MD_SERVER_STATE_STOPPING = 0x00000003;
enum MD_SERVER_STATE_STOPPED = 0x00000004;
enum MD_SERVER_STATE_PAUSING = 0x00000005;
enum MD_SERVER_STATE_PAUSED = 0x00000006;
enum MD_SERVER_STATE_CONTINUING = 0x00000007;
enum MD_SERVER_COMMAND_START = 0x00000001;
enum MD_SERVER_COMMAND_STOP = 0x00000002;
enum MD_SERVER_COMMAND_PAUSE = 0x00000003;
enum MD_SERVER_COMMAND_CONTINUE = 0x00000004;
enum MD_SERVER_SIZE_SMALL = 0x00000000;
enum MD_SERVER_SIZE_MEDIUM = 0x00000001;
enum MD_SERVER_SIZE_LARGE = 0x00000002;
enum MD_SERVER_CONFIG_SSL_40 = 0x00000001;
enum MD_SERVER_CONFIG_SSL_128 = 0x00000002;
enum MD_SERVER_CONFIG_ALLOW_ENCRYPT = 0x00000004;
enum MD_SERVER_CONFIG_AUTO_PW_SYNC = 0x00000008;
enum MD_SCRIPTMAPFLAG_SCRIPT = 0x00000001;
enum MD_SCRIPTMAPFLAG_CHECK_PATH_INFO = 0x00000004;
enum MD_SCRIPTMAPFLAG_ALLOWED_ON_READ_DIR = 0x00000001;
enum MD_AUTH_CHANGE_UNSECURE = 0x00000001;
enum MD_AUTH_CHANGE_DISABLE = 0x00000002;
enum MD_AUTH_ADVNOTIFY_DISABLE = 0x00000004;
enum MD_NETLOGON_WKS_NONE = 0x00000000;
enum MD_NETLOGON_WKS_IP = 0x00000001;
enum MD_NETLOGON_WKS_DNS = 0x00000002;
enum MD_ERROR_SUB400_INVALID_DESTINATION = 0x00000001;
enum MD_ERROR_SUB400_INVALID_DEPTH = 0x00000002;
enum MD_ERROR_SUB400_INVALID_IF = 0x00000003;
enum MD_ERROR_SUB400_INVALID_OVERWRITE = 0x00000004;
enum MD_ERROR_SUB400_INVALID_TRANSLATE = 0x00000005;
enum MD_ERROR_SUB400_INVALID_REQUEST_BODY = 0x00000006;
enum MD_ERROR_SUB400_INVALID_CONTENT_LENGTH = 0x00000007;
enum MD_ERROR_SUB400_INVALID_TIMEOUT = 0x00000008;
enum MD_ERROR_SUB400_INVALID_LOCK_TOKEN = 0x00000009;
enum MD_ERROR_SUB400_INVALID_XFF_HEADER = 0x0000000a;
enum MD_ERROR_SUB400_INVALID_WEBSOCKET_REQUEST = 0x0000000b;
enum MD_ERROR_SUB401_LOGON = 0x00000001;
enum MD_ERROR_SUB401_LOGON_CONFIG = 0x00000002;
enum MD_ERROR_SUB401_LOGON_ACL = 0x00000003;
enum MD_ERROR_SUB401_FILTER = 0x00000004;
enum MD_ERROR_SUB401_APPLICATION = 0x00000005;
enum MD_ERROR_SUB401_URLAUTH_POLICY = 0x00000007;
enum MD_ERROR_SUB403_EXECUTE_ACCESS_DENIED = 0x00000001;
enum MD_ERROR_SUB403_READ_ACCESS_DENIED = 0x00000002;
enum MD_ERROR_SUB403_WRITE_ACCESS_DENIED = 0x00000003;
enum MD_ERROR_SUB403_SSL_REQUIRED = 0x00000004;
enum MD_ERROR_SUB403_SSL128_REQUIRED = 0x00000005;
enum MD_ERROR_SUB403_ADDR_REJECT = 0x00000006;
enum MD_ERROR_SUB403_CERT_REQUIRED = 0x00000007;
enum MD_ERROR_SUB403_SITE_ACCESS_DENIED = 0x00000008;
enum MD_ERROR_SUB403_TOO_MANY_USERS = 0x00000009;
enum MD_ERROR_SUB403_INVALID_CNFG = 0x0000000a;
enum MD_ERROR_SUB403_PWD_CHANGE = 0x0000000b;
enum MD_ERROR_SUB403_MAPPER_DENY_ACCESS = 0x0000000c;
enum MD_ERROR_SUB403_CERT_REVOKED = 0x0000000d;
enum MD_ERROR_SUB403_DIR_LIST_DENIED = 0x0000000e;
enum MD_ERROR_SUB403_CAL_EXCEEDED = 0x0000000f;
enum MD_ERROR_SUB403_CERT_BAD = 0x00000010;
enum MD_ERROR_SUB403_CERT_TIME_INVALID = 0x00000011;
enum MD_ERROR_SUB403_APPPOOL_DENIED = 0x00000012;
enum MD_ERROR_SUB403_INSUFFICIENT_PRIVILEGE_FOR_CGI = 0x00000013;
enum MD_ERROR_SUB403_PASSPORT_LOGIN_FAILURE = 0x00000014;
enum MD_ERROR_SUB403_SOURCE_ACCESS_DENIED = 0x00000015;
enum MD_ERROR_SUB403_INFINITE_DEPTH_DENIED = 0x00000016;
enum MD_ERROR_SUB403_LOCK_TOKEN_REQUIRED = 0x00000017;
enum MD_ERROR_SUB403_VALIDATION_FAILURE = 0x00000018;
enum MD_ERROR_SUB404_SITE_NOT_FOUND = 0x00000001;
enum MD_ERROR_SUB404_DENIED_BY_POLICY = 0x00000002;
enum MD_ERROR_SUB404_DENIED_BY_MIMEMAP = 0x00000003;
enum MD_ERROR_SUB404_NO_HANDLER = 0x00000004;
enum MD_ERROR_SUB404_URL_SEQUENCE_DENIED = 0x00000005;
enum MD_ERROR_SUB404_VERB_DENIED = 0x00000006;
enum MD_ERROR_SUB404_FILE_EXTENSION_DENIED = 0x00000007;
enum MD_ERROR_SUB404_HIDDEN_SEGMENT = 0x00000008;
enum MD_ERROR_SUB404_FILE_ATTRIBUTE_HIDDEN = 0x00000009;
enum MD_ERROR_SUB404_URL_DOUBLE_ESCAPED = 0x0000000b;
enum MD_ERROR_SUB404_URL_HAS_HIGH_BIT_CHARS = 0x0000000c;
enum MD_ERROR_SUB404_URL_TOO_LONG = 0x0000000e;
enum MD_ERROR_SUB404_QUERY_STRING_TOO_LONG = 0x0000000f;
enum MD_ERROR_SUB404_STATICFILE_DAV = 0x00000010;
enum MD_ERROR_SUB404_PRECONDITIONED_HANDLER = 0x00000011;
enum MD_ERROR_SUB404_QUERY_STRING_SEQUENCE_DENIED = 0x00000012;
enum MD_ERROR_SUB404_DENIED_BY_FILTERING_RULE = 0x00000013;
enum MD_ERROR_SUB404_TOO_MANY_URL_SEGMENTS = 0x00000014;
enum MD_ERROR_SUB413_CONTENT_LENGTH_TOO_LARGE = 0x00000001;
enum MD_ERROR_SUB423_LOCK_TOKEN_SUBMITTED = 0x00000001;
enum MD_ERROR_SUB423_NO_CONFLICTING_LOCK = 0x00000002;
enum MD_ERROR_SUB500_UNC_ACCESS = 0x00000010;
enum MD_ERROR_SUB500_URLAUTH_NO_STORE = 0x00000011;
enum MD_ERROR_SUB500_URLAUTH_STORE_ERROR = 0x00000012;
enum MD_ERROR_SUB500_BAD_METADATA = 0x00000013;
enum MD_ERROR_SUB500_URLAUTH_NO_SCOPE = 0x00000014;
enum MD_ERROR_SUB500_HANDLERS_MODULE = 0x00000015;
enum MD_ERROR_SUB500_ASPNET_MODULES = 0x00000016;
enum MD_ERROR_SUB500_ASPNET_HANDLERS = 0x00000017;
enum MD_ERROR_SUB500_ASPNET_IMPERSONATION = 0x00000018;
enum MD_ERROR_SUB502_TIMEOUT = 0x00000001;
enum MD_ERROR_SUB502_PREMATURE_EXIT = 0x00000002;
enum MD_ERROR_SUB502_ARR_CONNECTION_ERROR = 0x00000003;
enum MD_ERROR_SUB502_ARR_NO_SERVER = 0x00000004;
enum MD_ERROR_SUB503_CPU_LIMIT = 0x00000001;
enum MD_ERROR_SUB503_APP_CONCURRENT = 0x00000002;
enum MD_ERROR_SUB503_ASPNET_QUEUE_FULL = 0x00000003;
enum MD_ERROR_SUB503_FASTCGI_QUEUE_FULL = 0x00000004;
enum MD_ERROR_SUB503_CONNECTION_LIMIT = 0x00000005;
enum MD_ACR_READ = 0x00000001;
enum MD_ACR_WRITE = 0x00000002;
enum MD_ACR_RESTRICTED_WRITE = 0x00000020;
enum MD_ACR_UNSECURE_PROPS_READ = 0x00000080;
enum MD_ACR_ENUM_KEYS = 0x00000008;
enum MD_ACR_WRITE_DAC = 0x00040000;
enum MD_USER_ISOLATION_NONE = 0x00000000;
enum MD_USER_ISOLATION_BASIC = 0x00000001;
enum MD_USER_ISOLATION_AD = 0x00000002;
enum MD_USER_ISOLATION_LAST = 0x00000002;
enum IIS_CLASS_COMPUTER = "IIsComputer";
enum IIS_CLASS_WEB_SERVICE = "IIsWebService";
enum IIS_CLASS_WEB_SERVER = "IIsWebServer";
enum IIS_CLASS_WEB_INFO = "IIsWebInfo";
enum IIS_CLASS_WEB_DIR = "IIsWebDirectory";
enum IIS_CLASS_WEB_VDIR = "IIsWebVirtualDir";
enum IIS_CLASS_WEB_FILE = "IIsWebFile";
enum IIS_CLASS_FTP_SERVICE = "IIsFtpService";
enum IIS_CLASS_FTP_SERVER = "IIsFtpServer";
enum IIS_CLASS_FTP_INFO = "IIsFtpInfo";
enum IIS_CLASS_FTP_VDIR = "IIsFtpVirtualDir";
enum IIS_CLASS_FILTERS = "IIsFilters";
enum IIS_CLASS_FILTER = "IIsFilter";
enum IIS_CLASS_LOG_MODULES = "IIsLogModules";
enum IIS_CLASS_LOG_MODULE = "IIsLogModule";
enum IIS_CLASS_MIMEMAP = "IIsMimeMap";
enum IIS_CLASS_CERTMAPPER = "IIsCertMapper";
enum IIS_CLASS_COMPRESS_SCHEMES = "IIsCompressionSchemes";
enum IIS_CLASS_COMPRESS_SCHEME = "IIsCompressionScheme";
enum IIS_CLASS_COMPUTER_W = "IIsComputer";
enum IIS_CLASS_WEB_SERVICE_W = "IIsWebService";
enum IIS_CLASS_WEB_SERVER_W = "IIsWebServer";
enum IIS_CLASS_WEB_INFO_W = "IIsWebInfo";
enum IIS_CLASS_WEB_DIR_W = "IIsWebDirectory";
enum IIS_CLASS_WEB_VDIR_W = "IIsWebVirtualDir";
enum IIS_CLASS_WEB_FILE_W = "IIsWebFile";
enum IIS_CLASS_FTP_SERVICE_W = "IIsFtpService";
enum IIS_CLASS_FTP_SERVER_W = "IIsFtpServer";
enum IIS_CLASS_FTP_INFO_W = "IIsFtpInfo";
enum IIS_CLASS_FTP_VDIR_W = "IIsFtpVirtualDir";
enum IIS_CLASS_FILTERS_W = "IIsFilters";
enum IIS_CLASS_FILTER_W = "IIsFilter";
enum IIS_CLASS_LOG_MODULES_W = "IIsLogModules";
enum IIS_CLASS_LOG_MODULE_W = "IIsLogModule";
enum IIS_CLASS_MIMEMAP_W = "IIsMimeMap";
enum IIS_CLASS_CERTMAPPER_W = "IIsCertMapper";
enum IIS_CLASS_COMPRESS_SCHEMES_W = "IIsCompressionSchemes";
enum IIS_CLASS_COMPRESS_SCHEME_W = "IIsCompressionScheme";
enum CLSID_IisServiceControl = GUID(0xe8fb8621, 0x588f, 0x11d2, [0x9d, 0x61, 0x0, 0xc0, 0x4f, 0x79, 0xc5, 0xfe]);
enum LIBID_IISRSTALib = GUID(0xe8fb8614, 0x588f, 0x11d2, [0x9d, 0x61, 0x0, 0xc0, 0x4f, 0x79, 0xc5, 0xfe]);
enum IIS_WEBSOCKET = "websockets";
enum IIS_WEBSOCKET_SERVER_VARIABLE = "IIS_WEBSOCK";
enum LIBID_WAMREGLib = GUID(0x29822aa8, 0xf302, 0x11d0, [0x99, 0x53, 0x0, 0xc0, 0x4f, 0xd9, 0x19, 0xc1]);
enum CLSID_WamAdmin = GUID(0x61738644, 0xf196, 0x11d0, [0x99, 0x53, 0x0, 0xc0, 0x4f, 0xd9, 0x19, 0xc1]);
enum APPSTATUS_STOPPED = 0x00000000;
enum APPSTATUS_RUNNING = 0x00000001;
enum APPSTATUS_NOTDEFINED = 0x00000002;
enum METADATA_MAX_NAME_LEN = 0x00000100;
enum METADATA_PERMISSION_READ = 0x00000001;
enum METADATA_PERMISSION_WRITE = 0x00000002;
enum METADATA_NO_ATTRIBUTES = 0x00000000;
enum METADATA_INHERIT = 0x00000001;
enum METADATA_PARTIAL_PATH = 0x00000002;
enum METADATA_SECURE = 0x00000004;
enum METADATA_REFERENCE = 0x00000008;
enum METADATA_VOLATILE = 0x00000010;
enum METADATA_ISINHERITED = 0x00000020;
enum METADATA_INSERT_PATH = 0x00000040;
enum METADATA_LOCAL_MACHINE_ONLY = 0x00000080;
enum METADATA_NON_SECURE_ONLY = 0x00000100;
enum METADATA_DONT_EXPAND = 0x00000200;
enum MD_BACKUP_OVERWRITE = 0x00000001;
enum MD_BACKUP_SAVE_FIRST = 0x00000002;
enum MD_BACKUP_FORCE_BACKUP = 0x00000004;
enum MD_BACKUP_NEXT_VERSION = 0xffffffff;
enum MD_BACKUP_HIGHEST_VERSION = 0xfffffffe;
enum MD_BACKUP_MAX_VERSION = 0x0000270f;
enum MD_BACKUP_MAX_LEN = 0x00000064;
enum MD_DEFAULT_BACKUP_LOCATION = "MDBackUp";
enum MD_HISTORY_LATEST = 0x00000001;
enum MD_EXPORT_INHERITED = 0x00000001;
enum MD_EXPORT_NODE_ONLY = 0x00000002;
enum MD_IMPORT_INHERITED = 0x00000001;
enum MD_IMPORT_NODE_ONLY = 0x00000002;
enum MD_IMPORT_MERGE = 0x00000004;
enum MD_INSERT_PATH_STRINGA = "<%INSERT_PATH%>";
enum MD_INSERT_PATH_STRING = "<%INSERT_PATH%>";
enum METADATA_MASTER_ROOT_HANDLE = 0x00000000;
enum MD_CHANGE_TYPE_DELETE_OBJECT = 0x00000001;
enum MD_CHANGE_TYPE_ADD_OBJECT = 0x00000002;
enum MD_CHANGE_TYPE_SET_DATA = 0x00000004;
enum MD_CHANGE_TYPE_DELETE_DATA = 0x00000008;
enum MD_CHANGE_TYPE_RENAME_OBJECT = 0x00000010;
enum MD_CHANGE_TYPE_RESTORE = 0x00000020;
enum MD_MAX_CHANGE_ENTRIES = 0x00000064;
enum MD_ERROR_NOT_INITIALIZED = 0xffffffff800cc800;
enum MD_ERROR_DATA_NOT_FOUND = 0xffffffff800cc801;
enum MD_ERROR_INVALID_VERSION = 0xffffffff800cc802;
enum MD_WARNING_PATH_NOT_FOUND = 0x000cc803;
enum MD_WARNING_DUP_NAME = 0x000cc804;
enum MD_WARNING_INVALID_DATA = 0x000cc805;
enum MD_ERROR_SECURE_CHANNEL_FAILURE = 0xffffffff800cc806;
enum MD_WARNING_PATH_NOT_INSERTED = 0x000cc807;
enum MD_ERROR_CANNOT_REMOVE_SECURE_ATTRIBUTE = 0xffffffff800cc808;
enum MD_WARNING_SAVE_FAILED = 0x000cc809;
enum MD_ERROR_IISAO_INVALID_SCHEMA = 0xffffffff800cc810;
enum MD_ERROR_READ_METABASE_FILE = 0xffffffff800cc819;
enum MD_ERROR_NO_SESSION_KEY = 0xffffffff800cc81d;
enum LIBID_ASPTypeLibrary = GUID(0xd97a6da0, 0xa85c, 0x11cf, [0x83, 0xae, 0x0, 0xa0, 0xc9, 0xc, 0x2b, 0xd8]);
enum CLSID_Request = GUID(0x920c25d0, 0x25d9, 0x11d0, [0xa5, 0x5f, 0x0, 0xa0, 0xc9, 0xc, 0x20, 0x91]);
enum CLSID_Response = GUID(0x46e19ba0, 0x25dd, 0x11d0, [0xa5, 0x5f, 0x0, 0xa0, 0xc9, 0xc, 0x20, 0x91]);
enum CLSID_Session = GUID(0x509f8f20, 0x25de, 0x11d0, [0xa5, 0x5f, 0x0, 0xa0, 0xc9, 0xc, 0x20, 0x91]);
enum CLSID_Server = GUID(0xa506d160, 0x25e0, 0x11d0, [0xa5, 0x5f, 0x0, 0xa0, 0xc9, 0xc, 0x20, 0x91]);
enum CLSID_ScriptingContext = GUID(0xd97a6da0, 0xa868, 0x11cf, [0x83, 0xae, 0x11, 0xb0, 0xc9, 0xc, 0x2b, 0xd8]);
enum HSE_VERSION_MAJOR = 0x00000008;
enum HSE_VERSION_MINOR = 0x00000000;
enum HSE_LOG_BUFFER_LEN = 0x00000050;
enum HSE_MAX_EXT_DLL_NAME_LEN = 0x00000100;
enum HSE_STATUS_SUCCESS = 0x00000001;
enum HSE_STATUS_SUCCESS_AND_KEEP_CONN = 0x00000002;
enum HSE_STATUS_PENDING = 0x00000003;
enum HSE_STATUS_ERROR = 0x00000004;
enum HSE_REQ_BASE = 0x00000000;
enum HSE_REQ_SEND_URL_REDIRECT_RESP = 0x00000001;
enum HSE_REQ_SEND_URL = 0x00000002;
enum HSE_REQ_SEND_RESPONSE_HEADER = 0x00000003;
enum HSE_REQ_DONE_WITH_SESSION = 0x00000004;
enum HSE_REQ_END_RESERVED = 0x000003e8;
enum HSE_REQ_MAP_URL_TO_PATH = 0x000003e9;
enum HSE_REQ_GET_SSPI_INFO = 0x000003ea;
enum HSE_APPEND_LOG_PARAMETER = 0x000003eb;
enum HSE_REQ_IO_COMPLETION = 0x000003ed;
enum HSE_REQ_TRANSMIT_FILE = 0x000003ee;
enum HSE_REQ_REFRESH_ISAPI_ACL = 0x000003ef;
enum HSE_REQ_IS_KEEP_CONN = 0x000003f0;
enum HSE_REQ_ASYNC_READ_CLIENT = 0x000003f2;
enum HSE_REQ_GET_IMPERSONATION_TOKEN = 0x000003f3;
enum HSE_REQ_MAP_URL_TO_PATH_EX = 0x000003f4;
enum HSE_REQ_ABORTIVE_CLOSE = 0x000003f6;
enum HSE_REQ_GET_CERT_INFO_EX = 0x000003f7;
enum HSE_REQ_SEND_RESPONSE_HEADER_EX = 0x000003f8;
enum HSE_REQ_CLOSE_CONNECTION = 0x000003f9;
enum HSE_REQ_IS_CONNECTED = 0x000003fa;
enum HSE_REQ_MAP_UNICODE_URL_TO_PATH = 0x000003ff;
enum HSE_REQ_MAP_UNICODE_URL_TO_PATH_EX = 0x00000400;
enum HSE_REQ_EXEC_UNICODE_URL = 0x00000401;
enum HSE_REQ_EXEC_URL = 0x00000402;
enum HSE_REQ_GET_EXEC_URL_STATUS = 0x00000403;
enum HSE_REQ_SEND_CUSTOM_ERROR = 0x00000404;
enum HSE_REQ_IS_IN_PROCESS = 0x00000406;
enum HSE_REQ_REPORT_UNHEALTHY = 0x00000408;
enum HSE_REQ_NORMALIZE_URL = 0x00000409;
enum HSE_REQ_VECTOR_SEND = 0x0000040d;
enum HSE_REQ_GET_ANONYMOUS_TOKEN = 0x0000040e;
enum HSE_REQ_GET_CACHE_INVALIDATION_CALLBACK = 0x00000410;
enum HSE_REQ_GET_UNICODE_ANONYMOUS_TOKEN = 0x00000411;
enum HSE_REQ_GET_TRACE_INFO = 0x00000412;
enum HSE_REQ_SET_FLUSH_FLAG = 0x00000413;
enum HSE_REQ_GET_TRACE_INFO_EX = 0x00000414;
enum HSE_REQ_RAISE_TRACE_EVENT = 0x00000415;
enum HSE_REQ_GET_CONFIG_OBJECT = 0x00000416;
enum HSE_REQ_GET_WORKER_PROCESS_SETTINGS = 0x00000417;
enum HSE_REQ_GET_PROTOCOL_MANAGER_CUSTOM_INTERFACE_CALLBACK = 0x00000418;
enum HSE_REQ_CANCEL_IO = 0x00000419;
enum HSE_REQ_GET_CHANNEL_BINDING_TOKEN = 0x0000041a;
enum HSE_TERM_ADVISORY_UNLOAD = 0x00000001;
enum HSE_TERM_MUST_UNLOAD = 0x00000002;
enum HSE_IO_SYNC = 0x00000001;
enum HSE_IO_ASYNC = 0x00000002;
enum HSE_IO_DISCONNECT_AFTER_SEND = 0x00000004;
enum HSE_IO_SEND_HEADERS = 0x00000008;
enum HSE_IO_NODELAY = 0x00001000;
enum HSE_IO_FINAL_SEND = 0x00000010;
enum HSE_IO_CACHE_RESPONSE = 0x00000020;
enum HSE_IO_TRY_SKIP_CUSTOM_ERRORS = 0x00000040;
enum HSE_URL_FLAGS_READ = 0x00000001;
enum HSE_URL_FLAGS_WRITE = 0x00000002;
enum HSE_URL_FLAGS_EXECUTE = 0x00000004;
enum HSE_URL_FLAGS_SSL = 0x00000008;
enum HSE_URL_FLAGS_DONT_CACHE = 0x00000010;
enum HSE_URL_FLAGS_NEGO_CERT = 0x00000020;
enum HSE_URL_FLAGS_REQUIRE_CERT = 0x00000040;
enum HSE_URL_FLAGS_MAP_CERT = 0x00000080;
enum HSE_URL_FLAGS_SSL128 = 0x00000100;
enum HSE_URL_FLAGS_SCRIPT = 0x00000200;
enum HSE_URL_FLAGS_MASK = 0x000003ff;
enum HSE_EXEC_URL_NO_HEADERS = 0x00000002;
enum HSE_EXEC_URL_IGNORE_CURRENT_INTERCEPTOR = 0x00000004;
enum HSE_EXEC_URL_IGNORE_VALIDATION_AND_RANGE = 0x00000010;
enum HSE_EXEC_URL_DISABLE_CUSTOM_ERROR = 0x00000020;
enum HSE_EXEC_URL_SSI_CMD = 0x00000040;
enum HSE_EXEC_URL_HTTP_CACHE_ELIGIBLE = 0x00000080;
enum HSE_VECTOR_ELEMENT_TYPE_MEMORY_BUFFER = 0x00000000;
enum HSE_VECTOR_ELEMENT_TYPE_FILE_HANDLE = 0x00000001;
enum HSE_APP_FLAG_IN_PROCESS = 0x00000000;
enum HSE_APP_FLAG_ISOLATED_OOP = 0x00000001;
enum HSE_APP_FLAG_POOLED_OOP = 0x00000002;
enum SF_MAX_USERNAME = 0x00000101;
enum SF_MAX_PASSWORD = 0x00000101;
enum SF_MAX_AUTH_TYPE = 0x00000021;
enum SF_MAX_FILTER_DESC_LEN = 0x00000101;
enum SF_DENIED_LOGON = 0x00000001;
enum SF_DENIED_RESOURCE = 0x00000002;
enum SF_DENIED_FILTER = 0x00000004;
enum SF_DENIED_APPLICATION = 0x00000008;
enum SF_DENIED_BY_CONFIG = 0x00010000;
enum SF_NOTIFY_SECURE_PORT = 0x00000001;
enum SF_NOTIFY_NONSECURE_PORT = 0x00000002;
enum SF_NOTIFY_READ_RAW_DATA = 0x00008000;
enum SF_NOTIFY_PREPROC_HEADERS = 0x00004000;
enum SF_NOTIFY_AUTHENTICATION = 0x00002000;
enum SF_NOTIFY_URL_MAP = 0x00001000;
enum SF_NOTIFY_ACCESS_DENIED = 0x00000800;
enum SF_NOTIFY_SEND_RESPONSE = 0x00000040;
enum SF_NOTIFY_SEND_RAW_DATA = 0x00000400;
enum SF_NOTIFY_LOG = 0x00000200;
enum SF_NOTIFY_END_OF_REQUEST = 0x00000080;
enum SF_NOTIFY_END_OF_NET_SESSION = 0x00000100;
enum SF_NOTIFY_AUTH_COMPLETE = 0x04000000;
enum SF_NOTIFY_ORDER_HIGH = 0x00080000;
enum SF_NOTIFY_ORDER_MEDIUM = 0x00040000;
enum SF_NOTIFY_ORDER_LOW = 0x00020000;
enum SF_NOTIFY_ORDER_DEFAULT = 0x00020000;
enum DISPID_HTTPREQUEST_BASE = 0x00000001;
enum DISPID_HTTPREQUEST_OPEN = 0x00000001;
enum DISPID_HTTPREQUEST_SETREQUESTHEADER = 0x00000002;
enum DISPID_HTTPREQUEST_GETRESPONSEHEADER = 0x00000003;
enum DISPID_HTTPREQUEST_GETALLRESPONSEHEADERS = 0x00000004;
enum DISPID_HTTPREQUEST_SEND = 0x00000005;
enum DISPID_HTTPREQUEST_OPTION = 0x00000006;
enum DISPID_HTTPREQUEST_STATUS = 0x00000007;
enum DISPID_HTTPREQUEST_STATUSTEXT = 0x00000008;
enum DISPID_HTTPREQUEST_RESPONSETEXT = 0x00000009;
enum DISPID_HTTPREQUEST_RESPONSEBODY = 0x0000000a;
enum DISPID_HTTPREQUEST_RESPONSESTREAM = 0x0000000b;
enum DISPID_HTTPREQUEST_ABORT = 0x0000000c;
enum DISPID_HTTPREQUEST_SETPROXY = 0x0000000d;
enum DISPID_HTTPREQUEST_SETCREDENTIALS = 0x0000000e;
enum DISPID_HTTPREQUEST_WAITFORRESPONSE = 0x0000000f;
enum DISPID_HTTPREQUEST_SETTIMEOUTS = 0x00000010;
enum DISPID_HTTPREQUEST_SETCLIENTCERTIFICATE = 0x00000011;
enum DISPID_HTTPREQUEST_SETAUTOLOGONPOLICY = 0x00000012;
enum HTTP_TRACE_EVENT_FLAG_STATIC_DESCRIPTIVE_FIELDS = 0x00000001;
enum HTTP_TRACE_LEVEL_START = 0x00000006;
enum HTTP_TRACE_LEVEL_END = 0x00000007;
enum GUID_IIS_ALL_TRACE_PROVIDERS = GUID(0x0, 0x0, 0x0, [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);
enum GUID_IIS_WWW_SERVER_TRACE_PROVIDER = GUID(0x3a2a4e84, 0x4c21, 0x4981, [0xae, 0x10, 0x3f, 0xda, 0xd, 0x9b, 0xf, 0x83]);
enum GUID_IIS_WWW_SERVER_V2_TRACE_PROVIDER = GUID(0xde4649c9, 0x15e8, 0x4fea, [0x9d, 0x85, 0x1c, 0xdd, 0xa5, 0x20, 0xc3, 0x34]);
enum GUID_IIS_ASPNET_TRACE_PROVIDER = GUID(0xaff081fe, 0x247, 0x4275, [0x9c, 0x4e, 0x2, 0x1f, 0x3d, 0xc1, 0xda, 0x35]);
enum GUID_IIS_ASP_TRACE_TRACE_PROVIDER = GUID(0x6b94d9a, 0xb15e, 0x456e, [0xa4, 0xef, 0x37, 0xc9, 0x84, 0xa2, 0xcb, 0x4b]);
enum GUID_IIS_WWW_GLOBAL_TRACE_PROVIDER = GUID(0xd55d3bc9, 0xcba9, 0x44df, [0x82, 0x7e, 0x13, 0x2d, 0x3a, 0x45, 0x96, 0xc2]);
enum GUID_IIS_ISAPI_TRACE_PROVIDER = GUID(0xa1c2040e, 0x8840, 0x4c31, [0xba, 0x11, 0x98, 0x71, 0x3, 0x1a, 0x19, 0xea]);
enum WEB_CORE_DLL_NAME = "hwebcore.dll";
enum WEB_CORE_ACTIVATE_DLL_ENTRY = "WebCoreActivate";
enum WEB_CORE_SHUTDOWN_DLL_ENTRY = "WebCoreShutdown";
enum WEB_CORE_SET_METADATA_DLL_ENTRY = "WebCoreSetMetadata";
enum CLSID_FtpProvider = GUID(0x70bdc667, 0x33b2, 0x45f0, [0xac, 0x52, 0xc3, 0xca, 0x46, 0xf7, 0xa6, 0x56]);
struct FtpProvider
{
}
enum CLSID_CONFIGURATION_ENTRY = GUID(0x9e04226f, 0xe38c, 0x419e, [0xa4, 0x48, 0x62, 0xde, 0x3b, 0x3a, 0x8f, 0x43]);
struct CONFIGURATION_ENTRY
{
    BSTR bstrKey;
    BSTR bstrValue;
}
enum IID_IFtpProviderConstruct = GUID(0x4d1a3f7b, 0x412d, 0x447c, [0xb1, 0x99, 0x64, 0xf9, 0x67, 0xe9, 0xa2, 0xda]);
interface IFtpProviderConstruct : IUnknown
{
    HRESULT Construct(SAFEARRAY*);
}
enum IID_IFtpAuthenticationProvider = GUID(0x4659f95c, 0xd5a8, 0x4707, [0xb2, 0xfc, 0x6f, 0xd5, 0x79, 0x42, 0x46, 0xcf]);
interface IFtpAuthenticationProvider : IUnknown
{
    HRESULT AuthenticateUser(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*, PWSTR*, BOOL*);
}
enum IID_AsyncIFtpAuthenticationProvider = GUID(0xc24efb65, 0x9f3e, 0x4996, [0x8f, 0xb1, 0xce, 0x16, 0x69, 0x16, 0xba, 0xb5]);
interface AsyncIFtpAuthenticationProvider : IUnknown
{
    HRESULT Begin_AuthenticateUser(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*);
    HRESULT Finish_AuthenticateUser(PWSTR*, BOOL*);
}
enum IID_IFtpRoleProvider = GUID(0x909c850d, 0x8ca0, 0x4674, [0x96, 0xb8, 0xcc, 0x29, 0x41, 0x53, 0x57, 0x25]);
interface IFtpRoleProvider : IUnknown
{
    HRESULT IsUserInRole(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*, BOOL*);
}
enum IID_AsyncIFtpRoleProvider = GUID(0x3e83bf99, 0x70ec, 0x41ca, [0x84, 0xb6, 0xac, 0xa7, 0xc7, 0xa6, 0x2c, 0xaf]);
interface AsyncIFtpRoleProvider : IUnknown
{
    HRESULT Begin_IsUserInRole(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*);
    HRESULT Finish_IsUserInRole(BOOL*);
}
enum IID_IFtpHomeDirectoryProvider = GUID(0x933b392, 0x18dd, 0x4097, [0x8b, 0x9c, 0x83, 0x32, 0x5c, 0x35, 0xd9, 0xa6]);
interface IFtpHomeDirectoryProvider : IUnknown
{
    HRESULT GetUserHomeDirectoryData(const(wchar)*, const(wchar)*, const(wchar)*, PWSTR*);
}
enum IID_AsyncIFtpHomeDirectoryProvider = GUID(0x73f81638, 0x6295, 0x42bd, [0xa2, 0xbe, 0x4a, 0x65, 0x7f, 0x7c, 0x47, 0x9c]);
interface AsyncIFtpHomeDirectoryProvider : IUnknown
{
    HRESULT Begin_GetUserHomeDirectoryData(const(wchar)*, const(wchar)*, const(wchar)*);
    HRESULT Finish_GetUserHomeDirectoryData(PWSTR*);
}
enum CLSID_LOGGING_PARAMETERS = GUID(0x6c678262, 0xfc37, 0x406e, [0x84, 0xe8, 0xe9, 0xc6, 0xa5, 0x75, 0x7c, 0xdc]);
struct LOGGING_PARAMETERS
{
    const(wchar)* pszSessionId;
    const(wchar)* pszSiteName;
    const(wchar)* pszUserName;
    const(wchar)* pszHostName;
    const(wchar)* pszRemoteIpAddress;
    uint dwRemoteIpPort;
    const(wchar)* pszLocalIpAddress;
    uint dwLocalIpPort;
    ulong BytesSent;
    ulong BytesReceived;
    const(wchar)* pszCommand;
    const(wchar)* pszCommandParameters;
    const(wchar)* pszFullPath;
    uint dwElapsedMilliseconds;
    uint FtpStatus;
    uint FtpSubStatus;
    HRESULT hrStatus;
    const(wchar)* pszInformation;
}
enum IID_IFtpLogProvider = GUID(0xa18a94cc, 0x8299, 0x4408, [0x81, 0x6c, 0x7c, 0x3b, 0xac, 0xa1, 0xa4, 0xe]);
interface IFtpLogProvider : IUnknown
{
    HRESULT Log(const(LOGGING_PARAMETERS)*);
}
enum IID_AsyncIFtpLogProvider = GUID(0xa0ae46, 0x2498, 0x48b2, [0x95, 0xe6, 0xdf, 0x67, 0x8e, 0xd7, 0xd4, 0x9f]);
interface AsyncIFtpLogProvider : IUnknown
{
    HRESULT Begin_Log(const(LOGGING_PARAMETERS)*);
    HRESULT Finish_Log();
}
alias FTP_ACCESS = int;
enum : int
{
    FTP_ACCESS_NONE       = 0x00000000,
    FTP_ACCESS_READ       = 0x00000001,
    FTP_ACCESS_WRITE      = 0x00000002,
    FTP_ACCESS_READ_WRITE = 0x00000003,
}

enum IID_IFtpAuthorizationProvider = GUID(0xa50ae7a1, 0xa35a, 0x42b4, [0xa4, 0xf3, 0xf4, 0xf7, 0x5, 0x7a, 0x5, 0xd1]);
interface IFtpAuthorizationProvider : IUnknown
{
    HRESULT GetUserAccessPermission(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*, FTP_ACCESS*);
}
enum IID_AsyncIFtpAuthorizationProvider = GUID(0x860dc339, 0x7e5, 0x4a5c, [0x9c, 0x61, 0x88, 0x20, 0xce, 0xa0, 0x12, 0xbc]);
interface AsyncIFtpAuthorizationProvider : IUnknown
{
    HRESULT Begin_GetUserAccessPermission(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*);
    HRESULT Finish_GetUserAccessPermission(FTP_ACCESS*);
}
alias FTP_PROCESS_STATUS = int;
enum : int
{
    FTP_PROCESS_CONTINUE          = 0x00000000,
    FTP_PROCESS_CLOSE_SESSION     = 0x00000001,
    FTP_PROCESS_TERMINATE_SESSION = 0x00000002,
    FTP_PROCESS_REJECT_COMMAND    = 0x00000003,
}

enum CLSID_PRE_PROCESS_PARAMETERS = GUID(0x7c3d591, 0xcead, 0x4702, [0xab, 0xab, 0xa7, 0x8, 0x86, 0xaf, 0x38, 0xa3]);
struct PRE_PROCESS_PARAMETERS
{
    const(wchar)* pszSessionId;
    const(wchar)* pszSiteName;
    const(wchar)* pszUserName;
    const(wchar)* pszHostName;
    const(wchar)* pszRemoteIpAddress;
    uint dwRemoteIpPort;
    const(wchar)* pszLocalIpAddress;
    uint dwLocalIpPort;
    const(wchar)* pszCommand;
    const(wchar)* pszCommandParameters;
    FILETIME SessionStartTime;
    ulong BytesSentPerSession;
    ulong BytesReceivedPerSession;
}
enum IID_IFtpPreprocessProvider = GUID(0xa3c19b60, 0x5a28, 0x471a, [0x8f, 0x93, 0xab, 0x30, 0x41, 0x1c, 0xee, 0x82]);
interface IFtpPreprocessProvider : IUnknown
{
    HRESULT HandlePreprocess(const(PRE_PROCESS_PARAMETERS)*, FTP_PROCESS_STATUS*);
}
enum IID_AsyncIFtpPreprocessProvider = GUID(0x6ff5fd8f, 0xfd8e, 0x48b1, [0xa3, 0xe0, 0xbf, 0x70, 0x73, 0xdb, 0x4d, 0xb5]);
interface AsyncIFtpPreprocessProvider : IUnknown
{
    HRESULT Begin_HandlePreprocess(const(PRE_PROCESS_PARAMETERS)*);
    HRESULT Finish_HandlePreprocess(FTP_PROCESS_STATUS*);
}
enum CLSID_POST_PROCESS_PARAMETERS = GUID(0x53337595, 0x9165, 0x4a8b, [0xa2, 0x2, 0x7d, 0x5d, 0xbf, 0x7e, 0x4b, 0x8b]);
struct POST_PROCESS_PARAMETERS
{
    const(wchar)* pszSessionId;
    const(wchar)* pszSiteName;
    const(wchar)* pszUserName;
    const(wchar)* pszHostName;
    const(wchar)* pszRemoteIpAddress;
    uint dwRemoteIpPort;
    const(wchar)* pszLocalIpAddress;
    uint dwLocalIpPort;
    ulong BytesSent;
    ulong BytesReceived;
    const(wchar)* pszCommand;
    const(wchar)* pszCommandParameters;
    const(wchar)* pszFullPath;
    const(wchar)* pszPhysicalPath;
    uint FtpStatus;
    uint FtpSubStatus;
    HRESULT hrStatus;
    FILETIME SessionStartTime;
    ulong BytesSentPerSession;
    ulong BytesReceivedPerSession;
}
enum IID_IFtpPostprocessProvider = GUID(0x4522cbc6, 0x16cd, 0x49ad, [0x86, 0x53, 0x9a, 0x2c, 0x57, 0x9e, 0x42, 0x80]);
interface IFtpPostprocessProvider : IUnknown
{
    HRESULT HandlePostprocess(const(POST_PROCESS_PARAMETERS)*, FTP_PROCESS_STATUS*);
}
enum IID_AsyncIFtpPostprocessProvider = GUID(0xa16b2542, 0x9694, 0x4eb1, [0xa5, 0x64, 0x6c, 0x2e, 0x91, 0xfd, 0xc1, 0x33]);
interface AsyncIFtpPostprocessProvider : IUnknown
{
    HRESULT Begin_HandlePostprocess(const(POST_PROCESS_PARAMETERS)*);
    HRESULT Finish_HandlePostprocess(FTP_PROCESS_STATUS*);
}
enum IID_IADMEXT = GUID(0x51dfe970, 0xf6f2, 0x11d0, [0xb9, 0xbd, 0x0, 0xa0, 0xc9, 0x22, 0xe7, 0x50]);
interface IADMEXT : IUnknown
{
    HRESULT Initialize();
    HRESULT EnumDcomCLSIDs(GUID*, uint);
    HRESULT Terminate();
}
alias METADATATYPES = int;
enum : int
{
    ALL_METADATA         = 0x00000000,
    DWORD_METADATA       = 0x00000001,
    STRING_METADATA      = 0x00000002,
    BINARY_METADATA      = 0x00000003,
    EXPANDSZ_METADATA    = 0x00000004,
    MULTISZ_METADATA     = 0x00000005,
    INVALID_END_METADATA = 0x00000006,
}

struct METADATA_RECORD
{
    uint dwMDIdentifier;
    uint dwMDAttributes;
    uint dwMDUserType;
    uint dwMDDataType;
    uint dwMDDataLen;
    ubyte* pbMDData;
    uint dwMDDataTag;
}
struct METADATA_GETALL_RECORD
{
    uint dwMDIdentifier;
    uint dwMDAttributes;
    uint dwMDUserType;
    uint dwMDDataType;
    uint dwMDDataLen;
    uint dwMDDataOffset;
    uint dwMDDataTag;
}
struct METADATA_GETALL_INTERNAL_RECORD
{
    uint dwMDIdentifier;
    uint dwMDAttributes;
    uint dwMDUserType;
    uint dwMDDataType;
    uint dwMDDataLen;
    union
    {
        ulong dwMDDataOffset;
        ubyte* pbMDData;
    }
    uint dwMDDataTag;
}
struct METADATA_HANDLE_INFO
{
    uint dwMDPermissions;
    uint dwMDSystemChangeNumber;
}
struct MD_CHANGE_OBJECT_W
{
    PWSTR pszMDPath;
    uint dwMDChangeType;
    uint dwMDNumDataIDs;
    uint* pdwMDDataIDs;
}
enum IID_IMSAdminBaseW = GUID(0x70b51430, 0xb6ca, 0x11d0, [0xb9, 0xb9, 0x0, 0xa0, 0xc9, 0x22, 0xe7, 0x50]);
interface IMSAdminBaseW : IUnknown
{
    HRESULT AddKey(uint, const(wchar)*);
    HRESULT DeleteKey(uint, const(wchar)*);
    HRESULT DeleteChildKeys(uint, const(wchar)*);
    HRESULT EnumKeys(uint, const(wchar)*, PWSTR, uint);
    HRESULT CopyKey(uint, const(wchar)*, uint, const(wchar)*, BOOL, BOOL);
    HRESULT RenameKey(uint, const(wchar)*, const(wchar)*);
    HRESULT SetData(uint, const(wchar)*, METADATA_RECORD*);
    HRESULT GetData(uint, const(wchar)*, METADATA_RECORD*, uint*);
    HRESULT DeleteData(uint, const(wchar)*, uint, uint);
    HRESULT EnumData(uint, const(wchar)*, METADATA_RECORD*, uint, uint*);
    HRESULT GetAllData(uint, const(wchar)*, uint, uint, uint, uint*, uint*, uint, ubyte*, uint*);
    HRESULT DeleteAllData(uint, const(wchar)*, uint, uint);
    HRESULT CopyData(uint, const(wchar)*, uint, const(wchar)*, uint, uint, uint, BOOL);
    HRESULT GetDataPaths(uint, const(wchar)*, uint, uint, uint, PWSTR, uint*);
    HRESULT OpenKey(uint, const(wchar)*, uint, uint, uint*);
    HRESULT CloseKey(uint);
    HRESULT ChangePermissions(uint, uint, uint);
    HRESULT SaveData();
    HRESULT GetHandleInfo(uint, METADATA_HANDLE_INFO*);
    HRESULT GetSystemChangeNumber(uint*);
    HRESULT GetDataSetNumber(uint, const(wchar)*, uint*);
    HRESULT SetLastChangeTime(uint, const(wchar)*, FILETIME*, BOOL);
    HRESULT GetLastChangeTime(uint, const(wchar)*, FILETIME*, BOOL);
    HRESULT KeyExchangePhase1();
    HRESULT KeyExchangePhase2();
    HRESULT Backup(const(wchar)*, uint, uint);
    HRESULT Restore(const(wchar)*, uint, uint);
    HRESULT EnumBackups(PWSTR, uint*, FILETIME*, uint);
    HRESULT DeleteBackup(const(wchar)*, uint);
    HRESULT UnmarshalInterface(IMSAdminBaseW*);
    HRESULT GetServerGuid();
}
struct _IIS_CRYPTO_BLOB
{
}
enum IID_IMSAdminBase2W = GUID(0x8298d101, 0xf992, 0x43b7, [0x8e, 0xca, 0x50, 0x52, 0xd8, 0x85, 0xb9, 0x95]);
interface IMSAdminBase2W : IMSAdminBaseW
{
    HRESULT BackupWithPasswd(const(wchar)*, uint, uint, const(wchar)*);
    HRESULT RestoreWithPasswd(const(wchar)*, uint, uint, const(wchar)*);
    HRESULT Export(const(wchar)*, const(wchar)*, const(wchar)*, uint);
    HRESULT Import(const(wchar)*, const(wchar)*, const(wchar)*, const(wchar)*, uint);
    HRESULT RestoreHistory(const(wchar)*, uint, uint, uint);
    HRESULT EnumHistory(PWSTR, uint*, uint*, FILETIME*, uint);
}
enum IID_IMSAdminBase3W = GUID(0xf612954d, 0x3b0b, 0x4c56, [0x95, 0x63, 0x22, 0x7b, 0x7b, 0xe6, 0x24, 0xb4]);
interface IMSAdminBase3W : IMSAdminBase2W
{
    HRESULT GetChildPaths(uint, const(wchar)*, uint, PWSTR, uint*);
}
enum IID_IMSImpExpHelpW = GUID(0x29ff67ff, 0x8050, 0x480f, [0x9f, 0x30, 0xcc, 0x41, 0x63, 0x5f, 0x2f, 0x9d]);
interface IMSImpExpHelpW : IUnknown
{
    HRESULT EnumeratePathsInFile(const(wchar)*, const(wchar)*, uint, PWSTR, uint*);
}
enum IID_IMSAdminBaseSinkW = GUID(0xa9e69612, 0xb80d, 0x11d0, [0xb9, 0xb9, 0x0, 0xa0, 0xc9, 0x22, 0xe7, 0x50]);
interface IMSAdminBaseSinkW : IUnknown
{
    HRESULT SinkNotify(uint, MD_CHANGE_OBJECT_W*);
    HRESULT ShutdownNotify();
}
enum IID_AsyncIMSAdminBaseSinkW = GUID(0xa9e69613, 0xb80d, 0x11d0, [0xb9, 0xb9, 0x0, 0xa0, 0xc9, 0x22, 0xe7, 0x50]);
interface AsyncIMSAdminBaseSinkW : IUnknown
{
    HRESULT Begin_SinkNotify(uint, MD_CHANGE_OBJECT_W*);
    HRESULT Finish_SinkNotify();
    HRESULT Begin_ShutdownNotify();
    HRESULT Finish_ShutdownNotify();
}
struct HSE_VERSION_INFO
{
    uint dwExtensionVersion;
    CHAR[256] lpszExtensionDesc;
}
struct EXTENSION_CONTROL_BLOCK
{
    uint cbSize;
    uint dwVersion;
    void* ConnID;
    uint dwHttpStatusCode;
    CHAR[80] lpszLogData;
    PSTR lpszMethod;
    PSTR lpszQueryString;
    PSTR lpszPathInfo;
    PSTR lpszPathTranslated;
    uint cbTotalBytes;
    uint cbAvailable;
    ubyte* lpbData;
    PSTR lpszContentType;
    long GetServerVariable;
    long WriteClient;
    long ReadClient;
    long ServerSupportFunction;
}
struct HSE_URL_MAPEX_INFO
{
    CHAR[260] lpszPath;
    uint dwFlags;
    uint cchMatchingPath;
    uint cchMatchingURL;
    uint dwReserved1;
    uint dwReserved2;
}
struct HSE_UNICODE_URL_MAPEX_INFO
{
    wchar[260] lpszPath;
    uint dwFlags;
    uint cchMatchingPath;
    uint cchMatchingURL;
}
alias PFN_HSE_IO_COMPLETION = void function(EXTENSION_CONTROL_BLOCK*, void*, uint, uint);
struct HSE_TF_INFO
{
    PFN_HSE_IO_COMPLETION pfnHseIO;
    void* pContext;
    HANDLE hFile;
    const(char)* pszStatusCode;
    uint BytesToWrite;
    uint Offset;
    void* pHead;
    uint HeadLength;
    void* pTail;
    uint TailLength;
    uint dwFlags;
}
struct HSE_SEND_HEADER_EX_INFO
{
    const(char)* pszStatus;
    const(char)* pszHeader;
    uint cchStatus;
    uint cchHeader;
    BOOL fKeepConn;
}
struct HSE_EXEC_URL_USER_INFO
{
    HANDLE hImpersonationToken;
    PSTR pszCustomUserName;
    PSTR pszCustomAuthType;
}
struct HSE_EXEC_URL_ENTITY_INFO
{
    uint cbAvailable;
    void* lpbData;
}
struct HSE_EXEC_URL_STATUS
{
    ushort uHttpStatusCode;
    ushort uHttpSubStatus;
    uint dwWin32Error;
}
struct HSE_EXEC_URL_INFO
{
    PSTR pszUrl;
    PSTR pszMethod;
    PSTR pszChildHeaders;
    HSE_EXEC_URL_USER_INFO* pUserInfo;
    HSE_EXEC_URL_ENTITY_INFO* pEntity;
    uint dwExecUrlFlags;
}
struct HSE_EXEC_UNICODE_URL_USER_INFO
{
    HANDLE hImpersonationToken;
    PWSTR pszCustomUserName;
    PSTR pszCustomAuthType;
}
struct HSE_EXEC_UNICODE_URL_INFO
{
    PWSTR pszUrl;
    PSTR pszMethod;
    PSTR pszChildHeaders;
    HSE_EXEC_UNICODE_URL_USER_INFO* pUserInfo;
    HSE_EXEC_URL_ENTITY_INFO* pEntity;
    uint dwExecUrlFlags;
}
struct HSE_CUSTOM_ERROR_INFO
{
    PSTR pszStatus;
    ushort uHttpSubError;
    BOOL fAsync;
}
struct HSE_VECTOR_ELEMENT
{
    uint ElementType;
    void* pvContext;
    ulong cbOffset;
    ulong cbSize;
}
struct HSE_RESPONSE_VECTOR
{
    uint dwFlags;
    PSTR pszStatus;
    PSTR pszHeaders;
    uint nElementCount;
    HSE_VECTOR_ELEMENT* lpElementArray;
}
alias PFN_HSE_CACHE_INVALIDATION_CALLBACK = HRESULT function(PWSTR);
struct CERT_CONTEXT_EX
{
    CERT_CONTEXT CertContext;
    uint cbAllocated;
    uint dwCertificateFlags;
}
struct HSE_TRACE_INFO
{
    BOOL fTraceRequest;
    ubyte[16] TraceContextId;
    uint dwReserved1;
    uint dwReserved2;
}
alias PFN_HSE_GET_PROTOCOL_MANAGER_CUSTOM_INTERFACE_CALLBACK = HRESULT function(const(wchar)*, const(wchar)*, uint, void**);
alias PFN_GETEXTENSIONVERSION = BOOL function(HSE_VERSION_INFO*);
alias PFN_HTTPEXTENSIONPROC = uint function(EXTENSION_CONTROL_BLOCK*);
alias PFN_TERMINATEEXTENSION = BOOL function(uint);
alias SF_REQ_TYPE = int;
enum : int
{
    SF_REQ_SEND_RESPONSE_HEADER  = 0x00000000,
    SF_REQ_ADD_HEADERS_ON_DENIAL = 0x00000001,
    SF_REQ_SET_NEXT_READ_SIZE    = 0x00000002,
    SF_REQ_SET_PROXY_INFO        = 0x00000003,
    SF_REQ_GET_CONNID            = 0x00000004,
    SF_REQ_SET_CERTIFICATE_INFO  = 0x00000005,
    SF_REQ_GET_PROPERTY          = 0x00000006,
    SF_REQ_NORMALIZE_URL         = 0x00000007,
    SF_REQ_DISABLE_NOTIFICATIONS = 0x00000008,
}

alias SF_PROPERTY_IIS = int;
enum : int
{
    SF_PROPERTY_SSL_CTXT        = 0x00000000,
    SF_PROPERTY_INSTANCE_NUM_ID = 0x00000001,
}

alias SF_STATUS_TYPE = int;
enum : int
{
    SF_STATUS_REQ_FINISHED             = 0x08000000,
    SF_STATUS_REQ_FINISHED_KEEP_CONN   = 0x08000001,
    SF_STATUS_REQ_NEXT_NOTIFICATION    = 0x08000002,
    SF_STATUS_REQ_HANDLED_NOTIFICATION = 0x08000003,
    SF_STATUS_REQ_ERROR                = 0x08000004,
    SF_STATUS_REQ_READ_NEXT            = 0x08000005,
}

struct HTTP_FILTER_CONTEXT
{
    uint cbSize;
    uint Revision;
    void* ServerContext;
    uint ulReserved;
    BOOL fIsSecurePort;
    void* pFilterContext;
    long GetServerVariable;
    long AddResponseHeaders;
    long WriteClient;
    long AllocMem;
    long ServerSupportFunction;
}
struct HTTP_FILTER_RAW_DATA
{
    void* pvInData;
    uint cbInData;
    uint cbInBuffer;
    uint dwReserved;
}
struct HTTP_FILTER_PREPROC_HEADERS
{
    long GetHeader;
    long SetHeader;
    long AddHeader;
    uint HttpStatus;
    uint dwReserved;
}
struct HTTP_FILTER_AUTHENT
{
    PSTR pszUser;
    uint cbUserBuff;
    PSTR pszPassword;
    uint cbPasswordBuff;
}
struct HTTP_FILTER_URL_MAP
{
    const(char)* pszURL;
    PSTR pszPhysicalPath;
    uint cbPathBuff;
}
struct HTTP_FILTER_URL_MAP_EX
{
    const(char)* pszURL;
    PSTR pszPhysicalPath;
    uint cbPathBuff;
    uint dwFlags;
    uint cchMatchingPath;
    uint cchMatchingURL;
    const(char)* pszScriptMapEntry;
}
struct HTTP_FILTER_ACCESS_DENIED
{
    const(char)* pszURL;
    const(char)* pszPhysicalPath;
    uint dwReason;
}
struct HTTP_FILTER_LOG
{
    const(char)* pszClientHostName;
    const(char)* pszClientUserName;
    const(char)* pszServerName;
    const(char)* pszOperation;
    const(char)* pszTarget;
    const(char)* pszParameters;
    uint dwHttpStatus;
    uint dwWin32Status;
    uint dwBytesSent;
    uint dwBytesRecvd;
    uint msTimeForProcessing;
}
struct HTTP_FILTER_AUTH_COMPLETE_INFO
{
    long GetHeader;
    long SetHeader;
    long AddHeader;
    long GetUserToken;
    uint HttpStatus;
    BOOL fResetAuth;
    uint dwReserved;
}
struct HTTP_FILTER_VERSION
{
    uint dwServerFilterVersion;
    uint dwFilterVersion;
    CHAR[257] lpszFilterDesc;
    uint dwFlags;
}
alias HTTP_TRACE_TYPE = int;
enum : int
{
    HTTP_TRACE_TYPE_BYTE      = 0x00000011,
    HTTP_TRACE_TYPE_USHORT    = 0x00000012,
    HTTP_TRACE_TYPE_ULONG     = 0x00000013,
    HTTP_TRACE_TYPE_ULONGLONG = 0x00000015,
    HTTP_TRACE_TYPE_CHAR      = 0x00000010,
    HTTP_TRACE_TYPE_SHORT     = 0x00000002,
    HTTP_TRACE_TYPE_LONG      = 0x00000003,
    HTTP_TRACE_TYPE_LONGLONG  = 0x00000014,
    HTTP_TRACE_TYPE_LPCWSTR   = 0x0000001f,
    HTTP_TRACE_TYPE_LPCSTR    = 0x0000001e,
    HTTP_TRACE_TYPE_LPCGUID   = 0x00000048,
    HTTP_TRACE_TYPE_BOOL      = 0x0000000b,
}

struct HTTP_TRACE_EVENT
{
    const(GUID)* pProviderGuid;
    uint dwArea;
    const(GUID)* pAreaGuid;
    uint dwEvent;
    const(wchar)* pszEventName;
    uint dwEventVersion;
    uint dwVerbosity;
    const(GUID)* pActivityGuid;
    const(GUID)* pRelatedActivityGuid;
    uint dwTimeStamp;
    uint dwFlags;
    uint cEventItems;
    HTTP_TRACE_EVENT_ITEM* pEventItems;
}
struct HTTP_TRACE_EVENT_ITEM
{
    const(wchar)* pszName;
    HTTP_TRACE_TYPE dwDataType;
    ubyte* pbData;
    uint cbData;
    const(wchar)* pszDataDescription;
}
struct HTTP_TRACE_CONFIGURATION
{
    const(GUID)* pProviderGuid;
    uint dwAreas;
    uint dwVerbosity;
    BOOL fProviderEnabled;
}
alias PFN_WEB_CORE_SET_METADATA_DLL_ENTRY = HRESULT function(const(wchar)*, const(wchar)*);
alias PFN_WEB_CORE_ACTIVATE = HRESULT function(const(wchar)*, const(wchar)*, const(wchar)*);
alias PFN_WEB_CORE_SHUTDOWN = HRESULT function(uint);
