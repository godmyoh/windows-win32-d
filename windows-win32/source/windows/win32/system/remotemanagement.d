module windows.win32.system.remotemanagement;

import windows.win32.guid : GUID;
import windows.win32.foundation : BOOL, BSTR, HANDLE, HRESULT, PWSTR;
import windows.win32.system.com_ : IDispatch, IUnknown, VARIANT;

version (Windows):
extern (Windows):

uint WSManInitialize(uint, WSMAN_API**);
uint WSManDeinitialize(WSMAN_API*, uint);
uint WSManGetErrorMessage(WSMAN_API*, uint, const(wchar)*, uint, uint, PWSTR, uint*);
uint WSManCreateSession(WSMAN_API*, const(wchar)*, uint, WSMAN_AUTHENTICATION_CREDENTIALS*, WSMAN_PROXY_INFO*, WSMAN_SESSION**);
uint WSManCloseSession(WSMAN_SESSION*, uint);
uint WSManSetSessionOption(WSMAN_SESSION*, WSManSessionOption, WSMAN_DATA*);
uint WSManGetSessionOptionAsDword(WSMAN_SESSION*, WSManSessionOption, uint*);
uint WSManGetSessionOptionAsString(WSMAN_SESSION*, WSManSessionOption, uint, PWSTR, uint*);
uint WSManCloseOperation(WSMAN_OPERATION*, uint);
void WSManCreateShell(WSMAN_SESSION*, uint, const(wchar)*, WSMAN_SHELL_STARTUP_INFO_V11*, WSMAN_OPTION_SET*, WSMAN_DATA*, WSMAN_SHELL_ASYNC*, WSMAN_SHELL**);
void WSManRunShellCommand(WSMAN_SHELL*, uint, const(wchar)*, WSMAN_COMMAND_ARG_SET*, WSMAN_OPTION_SET*, WSMAN_SHELL_ASYNC*, WSMAN_COMMAND**);
void WSManSignalShell(WSMAN_SHELL*, WSMAN_COMMAND*, uint, const(wchar)*, WSMAN_SHELL_ASYNC*, WSMAN_OPERATION**);
void WSManReceiveShellOutput(WSMAN_SHELL*, WSMAN_COMMAND*, uint, WSMAN_STREAM_ID_SET*, WSMAN_SHELL_ASYNC*, WSMAN_OPERATION**);
void WSManSendShellInput(WSMAN_SHELL*, WSMAN_COMMAND*, uint, const(wchar)*, WSMAN_DATA*, BOOL, WSMAN_SHELL_ASYNC*, WSMAN_OPERATION**);
void WSManCloseCommand(WSMAN_COMMAND*, uint, WSMAN_SHELL_ASYNC*);
void WSManCloseShell(WSMAN_SHELL*, uint, WSMAN_SHELL_ASYNC*);
void WSManCreateShellEx(WSMAN_SESSION*, uint, const(wchar)*, const(wchar)*, WSMAN_SHELL_STARTUP_INFO_V11*, WSMAN_OPTION_SET*, WSMAN_DATA*, WSMAN_SHELL_ASYNC*, WSMAN_SHELL**);
void WSManRunShellCommandEx(WSMAN_SHELL*, uint, const(wchar)*, const(wchar)*, WSMAN_COMMAND_ARG_SET*, WSMAN_OPTION_SET*, WSMAN_SHELL_ASYNC*, WSMAN_COMMAND**);
void WSManDisconnectShell(WSMAN_SHELL*, uint, WSMAN_SHELL_DISCONNECT_INFO*, WSMAN_SHELL_ASYNC*);
void WSManReconnectShell(WSMAN_SHELL*, uint, WSMAN_SHELL_ASYNC*);
void WSManReconnectShellCommand(WSMAN_COMMAND*, uint, WSMAN_SHELL_ASYNC*);
void WSManConnectShell(WSMAN_SESSION*, uint, const(wchar)*, const(wchar)*, WSMAN_OPTION_SET*, WSMAN_DATA*, WSMAN_SHELL_ASYNC*, WSMAN_SHELL**);
void WSManConnectShellCommand(WSMAN_SHELL*, uint, const(wchar)*, WSMAN_OPTION_SET*, WSMAN_DATA*, WSMAN_SHELL_ASYNC*, WSMAN_COMMAND**);
uint WSManPluginReportContext(WSMAN_PLUGIN_REQUEST*, uint, void*);
uint WSManPluginReceiveResult(WSMAN_PLUGIN_REQUEST*, uint, const(wchar)*, WSMAN_DATA*, const(wchar)*, uint);
uint WSManPluginOperationComplete(WSMAN_PLUGIN_REQUEST*, uint, uint, const(wchar)*);
uint WSManPluginGetOperationParameters(WSMAN_PLUGIN_REQUEST*, uint, WSMAN_DATA*);
uint WSManPluginGetConfiguration(void*, uint, WSMAN_DATA*);
uint WSManPluginReportCompletion(void*, uint);
uint WSManPluginFreeRequestDetails(WSMAN_PLUGIN_REQUEST*);
uint WSManPluginAuthzUserComplete(WSMAN_SENDER_DETAILS*, uint, void*, HANDLE, BOOL, uint, const(wchar)*);
uint WSManPluginAuthzOperationComplete(WSMAN_SENDER_DETAILS*, uint, void*, uint, const(wchar)*);
uint WSManPluginAuthzQueryQuotaComplete(WSMAN_SENDER_DETAILS*, uint, WSMAN_AUTHZ_QUOTA*, uint, const(wchar)*);
enum WSMAN_FLAG_REQUESTED_API_VERSION_1_0 = 0x00000000;
enum WSMAN_FLAG_REQUESTED_API_VERSION_1_1 = 0x00000001;
enum WSMAN_OPERATION_INFOV1 = 0x00000000;
enum WSMAN_OPERATION_INFOV2 = 0xaabbccdd;
enum WSMAN_DEFAULT_TIMEOUT_MS = 0x0000ea60;
enum WSMAN_STREAM_ID_STDIN = "stdin";
enum WSMAN_STREAM_ID_STDOUT = "stdout";
enum WSMAN_STREAM_ID_STDERR = "stderr";
enum WSMAN_SHELL_NS = "http://schemas.microsoft.com/wbem/wsman/1/windows/shell";
enum WSMAN_CMDSHELL_OPTION_CODEPAGE = "WINRS_CODEPAGE";
enum WSMAN_SHELL_OPTION_NOPROFILE = "WINRS_NOPROFILE";
enum WSMAN_CMDSHELL_OPTION_CONSOLEMODE_STDIN = "WINRS_CONSOLEMODE_STDIN";
enum WSMAN_CMDSHELL_OPTION_SKIP_CMD_SHELL = "WINRS_SKIP_CMD_SHELL";
enum WSMAN_FLAG_RECEIVE_RESULT_NO_MORE_DATA = 0x00000001;
enum WSMAN_FLAG_RECEIVE_FLUSH = 0x00000002;
enum WSMAN_FLAG_RECEIVE_RESULT_DATA_BOUNDARY = 0x00000004;
enum WSMAN_PLUGIN_PARAMS_MAX_ENVELOPE_SIZE = 0x00000001;
enum WSMAN_PLUGIN_PARAMS_TIMEOUT = 0x00000002;
enum WSMAN_PLUGIN_PARAMS_REMAINING_RESULT_SIZE = 0x00000003;
enum WSMAN_PLUGIN_PARAMS_LARGEST_RESULT_SIZE = 0x00000004;
enum WSMAN_PLUGIN_PARAMS_GET_REQUESTED_LOCALE = 0x00000005;
enum WSMAN_PLUGIN_PARAMS_GET_REQUESTED_DATA_LOCALE = 0x00000006;
enum WSMAN_PLUGIN_PARAMS_SHAREDHOST = 0x00000001;
enum WSMAN_PLUGIN_PARAMS_RUNAS_USER = 0x00000002;
enum WSMAN_PLUGIN_PARAMS_AUTORESTART = 0x00000003;
enum WSMAN_PLUGIN_PARAMS_HOSTIDLETIMEOUTSECONDS = 0x00000004;
enum WSMAN_PLUGIN_PARAMS_NAME = 0x00000005;
enum WSMAN_PLUGIN_STARTUP_REQUEST_RECEIVED = 0x00000000;
enum WSMAN_PLUGIN_STARTUP_AUTORESTARTED_REBOOT = 0x00000001;
enum WSMAN_PLUGIN_STARTUP_AUTORESTARTED_CRASH = 0x00000002;
enum WSMAN_PLUGIN_SHUTDOWN_SYSTEM = 0x00000001;
enum WSMAN_PLUGIN_SHUTDOWN_SERVICE = 0x00000002;
enum WSMAN_PLUGIN_SHUTDOWN_IISHOST = 0x00000003;
enum WSMAN_PLUGIN_SHUTDOWN_IDLETIMEOUT_ELAPSED = 0x00000004;
enum WSMAN_FLAG_SEND_NO_MORE_DATA = 0x00000001;
enum ERROR_WSMAN_RESOURCE_NOT_FOUND = 0x80338000;
enum ERROR_WSMAN_INVALID_ACTIONURI = 0x80338001;
enum ERROR_WSMAN_INVALID_URI = 0x80338002;
enum ERROR_WSMAN_PROVIDER_FAILURE = 0x80338003;
enum ERROR_WSMAN_BATCH_COMPLETE = 0x80338004;
enum ERROR_WSMAN_CONFIG_CORRUPTED = 0x80338005;
enum ERROR_WSMAN_PULL_IN_PROGRESS = 0x80338006;
enum ERROR_WSMAN_ENUMERATION_CLOSED = 0x80338007;
enum ERROR_WSMAN_SUBSCRIPTION_CLOSED = 0x80338008;
enum ERROR_WSMAN_SUBSCRIPTION_CLOSE_IN_PROGRESS = 0x80338009;
enum ERROR_WSMAN_SUBSCRIPTION_CLIENT_DID_NOT_CALL_WITHIN_HEARTBEAT = 0x8033800a;
enum ERROR_WSMAN_SUBSCRIPTION_NO_HEARTBEAT = 0x8033800b;
enum ERROR_WSMAN_UNSUPPORTED_TIMEOUT = 0x8033800c;
enum ERROR_WSMAN_SOAP_VERSION_MISMATCH = 0x8033800d;
enum ERROR_WSMAN_SOAP_DATA_ENCODING_UNKNOWN = 0x8033800e;
enum ERROR_WSMAN_INVALID_MESSAGE_INFORMATION_HEADER = 0x8033800f;
enum ERROR_WSMAN_SOAP_FAULT_MUST_UNDERSTAND = 0x80338010;
enum ERROR_WSMAN_MESSAGE_INFORMATION_HEADER_REQUIRED = 0x80338011;
enum ERROR_WSMAN_DESTINATION_UNREACHABLE = 0x80338012;
enum ERROR_WSMAN_ACTION_NOT_SUPPORTED = 0x80338013;
enum ERROR_WSMAN_ENDPOINT_UNAVAILABLE = 0x80338014;
enum ERROR_WSMAN_INVALID_REPRESENTATION = 0x80338015;
enum ERROR_WSMAN_ENUMERATE_INVALID_EXPIRATION_TIME = 0x80338016;
enum ERROR_WSMAN_ENUMERATE_UNSUPPORTED_EXPIRATION_TIME = 0x80338017;
enum ERROR_WSMAN_ENUMERATE_FILTERING_NOT_SUPPORTED = 0x80338018;
enum ERROR_WSMAN_ENUMERATE_FILTER_DIALECT_REQUESTED_UNAVAILABLE = 0x80338019;
enum ERROR_WSMAN_ENUMERATE_CANNOT_PROCESS_FILTER = 0x8033801a;
enum ERROR_WSMAN_ENUMERATE_INVALID_ENUMERATION_CONTEXT = 0x8033801b;
enum ERROR_WSMAN_ENUMERATE_TIMED_OUT = 0x8033801c;
enum ERROR_WSMAN_ENUMERATE_UNABLE_TO_RENEW = 0x8033801d;
enum ERROR_WSMAN_EVENTING_DELIVERY_MODE_REQUESTED_UNAVAILABLE = 0x8033801e;
enum ERROR_WSMAN_EVENTING_INVALID_EXPIRATION_TIME = 0x8033801f;
enum ERROR_WSMAN_EVENTING_UNSUPPORTED_EXPIRATION_TYPE = 0x80338020;
enum ERROR_WSMAN_EVENTING_FILTERING_NOT_SUPPORTED = 0x80338021;
enum ERROR_WSMAN_EVENTING_FILTERING_REQUESTED_UNAVAILABLE = 0x80338022;
enum ERROR_WSMAN_EVENTING_SOURCE_UNABLE_TO_PROCESS = 0x80338023;
enum ERROR_WSMAN_EVENTING_UNABLE_TO_RENEW = 0x80338024;
enum ERROR_WSMAN_EVENTING_INVALID_MESSAGE = 0x80338025;
enum ERROR_WSMAN_ENVELOPE_TOO_LARGE = 0x80338026;
enum ERROR_WSMAN_INVALID_SOAP_BODY = 0x80338027;
enum ERROR_WSMAN_INVALID_RESUMPTION_CONTEXT = 0x80338028;
enum ERROR_WSMAN_OPERATION_TIMEDOUT = 0x80338029;
enum ERROR_WSMAN_RESUMPTION_NOT_SUPPORTED = 0x8033802a;
enum ERROR_WSMAN_RESUMPTION_TYPE_NOT_SUPPORTED = 0x8033802b;
enum ERROR_WSMAN_UNSUPPORTED_ENCODING = 0x8033802c;
enum ERROR_WSMAN_URI_LIMIT = 0x8033802d;
enum ERROR_WSMAN_INVALID_PROPOSED_ID = 0x8033802e;
enum ERROR_WSMAN_INVALID_BATCH_PARAMETER = 0x8033802f;
enum ERROR_WSMAN_NO_ACK = 0x80338030;
enum ERROR_WSMAN_ACTION_MISMATCH = 0x80338031;
enum ERROR_WSMAN_CONCURRENCY = 0x80338032;
enum ERROR_WSMAN_ALREADY_EXISTS = 0x80338033;
enum ERROR_WSMAN_DELIVERY_REFUSED = 0x80338034;
enum ERROR_WSMAN_ENCODING_LIMIT = 0x80338035;
enum ERROR_WSMAN_FAILED_AUTHENTICATION = 0x80338036;
enum ERROR_WSMAN_INCOMPATIBLE_EPR = 0x80338037;
enum ERROR_WSMAN_INVALID_BOOKMARK = 0x80338038;
enum ERROR_WSMAN_INVALID_OPTIONS = 0x80338039;
enum ERROR_WSMAN_INVALID_PARAMETER = 0x8033803a;
enum ERROR_WSMAN_INVALID_RESOURCE_URI = 0x8033803b;
enum ERROR_WSMAN_INVALID_SYSTEM = 0x8033803c;
enum ERROR_WSMAN_INVALID_SELECTORS = 0x8033803d;
enum ERROR_WSMAN_METADATA_REDIRECT = 0x8033803e;
enum ERROR_WSMAN_QUOTA_LIMIT = 0x8033803f;
enum ERROR_WSMAN_RENAME_FAILURE = 0x80338040;
enum ERROR_WSMAN_SCHEMA_VALIDATION_ERROR = 0x80338041;
enum ERROR_WSMAN_UNSUPPORTED_FEATURE = 0x80338042;
enum ERROR_WSMAN_INVALID_XML = 0x80338043;
enum ERROR_WSMAN_INVALID_KEY = 0x80338044;
enum ERROR_WSMAN_DELIVER_IN_PROGRESS = 0x80338045;
enum ERROR_WSMAN_SYSTEM_NOT_FOUND = 0x80338046;
enum ERROR_WSMAN_MAX_ENVELOPE_SIZE = 0x80338047;
enum ERROR_WSMAN_MAX_ENVELOPE_SIZE_EXCEEDED = 0x80338048;
enum ERROR_WSMAN_SERVER_ENVELOPE_LIMIT = 0x80338049;
enum ERROR_WSMAN_SELECTOR_LIMIT = 0x8033804a;
enum ERROR_WSMAN_OPTION_LIMIT = 0x8033804b;
enum ERROR_WSMAN_CHARACTER_SET = 0x8033804c;
enum ERROR_WSMAN_UNREPORTABLE_SUCCESS = 0x8033804d;
enum ERROR_WSMAN_WHITESPACE = 0x8033804e;
enum ERROR_WSMAN_FILTERING_REQUIRED = 0x8033804f;
enum ERROR_WSMAN_BOOKMARK_EXPIRED = 0x80338050;
enum ERROR_WSMAN_OPTIONS_NOT_SUPPORTED = 0x80338051;
enum ERROR_WSMAN_OPTIONS_INVALID_NAME = 0x80338052;
enum ERROR_WSMAN_OPTIONS_INVALID_VALUE = 0x80338053;
enum ERROR_WSMAN_PARAMETER_TYPE_MISMATCH = 0x80338054;
enum ERROR_WSMAN_INVALID_PARAMETER_NAME = 0x80338055;
enum ERROR_WSMAN_INVALID_XML_VALUES = 0x80338056;
enum ERROR_WSMAN_INVALID_XML_MISSING_VALUES = 0x80338057;
enum ERROR_WSMAN_INVALID_XML_NAMESPACE = 0x80338058;
enum ERROR_WSMAN_INVALID_XML_FRAGMENT = 0x80338059;
enum ERROR_WSMAN_INSUFFCIENT_SELECTORS = 0x8033805a;
enum ERROR_WSMAN_UNEXPECTED_SELECTORS = 0x8033805b;
enum ERROR_WSMAN_SELECTOR_TYPEMISMATCH = 0x8033805c;
enum ERROR_WSMAN_INVALID_SELECTOR_VALUE = 0x8033805d;
enum ERROR_WSMAN_AMBIGUOUS_SELECTORS = 0x8033805e;
enum ERROR_WSMAN_DUPLICATE_SELECTORS = 0x8033805f;
enum ERROR_WSMAN_INVALID_TARGET_SELECTORS = 0x80338060;
enum ERROR_WSMAN_INVALID_TARGET_RESOURCEURI = 0x80338061;
enum ERROR_WSMAN_INVALID_TARGET_SYSTEM = 0x80338062;
enum ERROR_WSMAN_TARGET_ALREADY_EXISTS = 0x80338063;
enum ERROR_WSMAN_AUTHORIZATION_MODE_NOT_SUPPORTED = 0x80338064;
enum ERROR_WSMAN_ACK_NOT_SUPPORTED = 0x80338065;
enum ERROR_WSMAN_OPERATION_TIMEOUT_NOT_SUPPORTED = 0x80338066;
enum ERROR_WSMAN_LOCALE_NOT_SUPPORTED = 0x80338067;
enum ERROR_WSMAN_EXPIRATION_TIME_NOT_SUPPORTED = 0x80338068;
enum ERROR_WSMAN_DELIVERY_RETRIES_NOT_SUPPORTED = 0x80338069;
enum ERROR_WSMAN_HEARTBEATS_NOT_SUPPORTED = 0x8033806a;
enum ERROR_WSMAN_BOOKMARKS_NOT_SUPPORTED = 0x8033806b;
enum ERROR_WSMAN_MAXITEMS_NOT_SUPPORTED = 0x8033806c;
enum ERROR_WSMAN_MAXTIME_NOT_SUPPORTED = 0x8033806d;
enum ERROR_WSMAN_MAXENVELOPE_SIZE_NOT_SUPPORTED = 0x8033806e;
enum ERROR_WSMAN_MAXENVELOPE_POLICY_NOT_SUPPORTED = 0x8033806f;
enum ERROR_WSMAN_FILTERING_REQUIRED_NOT_SUPPORTED = 0x80338070;
enum ERROR_WSMAN_INSECURE_ADDRESS_NOT_SUPPORTED = 0x80338071;
enum ERROR_WSMAN_FORMAT_MISMATCH_NOT_SUPPORTED = 0x80338072;
enum ERROR_WSMAN_FORMAT_SECURITY_TOKEN_NOT_SUPPORTED = 0x80338073;
enum ERROR_WSMAN_BAD_METHOD = 0x80338074;
enum ERROR_WSMAN_UNSUPPORTED_MEDIA = 0x80338075;
enum ERROR_WSMAN_UNSUPPORTED_ADDRESSING_MODE = 0x80338076;
enum ERROR_WSMAN_FRAGMENT_TRANSFER_NOT_SUPPORTED = 0x80338077;
enum ERROR_WSMAN_ENUMERATION_INITIALIZING = 0x80338078;
enum ERROR_WSMAN_CONNECTOR_GET = 0x80338079;
enum ERROR_WSMAN_URI_QUERY_STRING_SYNTAX_ERROR = 0x8033807a;
enum ERROR_WSMAN_INEXISTENT_MAC_ADDRESS = 0x8033807b;
enum ERROR_WSMAN_NO_UNICAST_ADDRESSES = 0x8033807c;
enum ERROR_WSMAN_NO_DHCP_ADDRESSES = 0x8033807d;
enum ERROR_WSMAN_MIN_ENVELOPE_SIZE = 0x8033807e;
enum ERROR_WSMAN_EPR_NESTING_EXCEEDED = 0x8033807f;
enum ERROR_WSMAN_REQUEST_INIT_ERROR = 0x80338080;
enum ERROR_WSMAN_INVALID_TIMEOUT_HEADER = 0x80338081;
enum ERROR_WSMAN_CERT_NOT_FOUND = 0x80338082;
enum ERROR_WSMAN_PLUGIN_FAILED = 0x80338083;
enum ERROR_WSMAN_ENUMERATION_INVALID = 0x80338084;
enum ERROR_WSMAN_CONFIG_CANNOT_CHANGE_MUTUAL = 0x80338085;
enum ERROR_WSMAN_ENUMERATION_MODE_UNSUPPORTED = 0x80338086;
enum ERROR_WSMAN_MUSTUNDERSTAND_ON_LOCALE_UNSUPPORTED = 0x80338087;
enum ERROR_WSMAN_POLICY_CORRUPTED = 0x80338088;
enum ERROR_WSMAN_LISTENER_ADDRESS_INVALID = 0x80338089;
enum ERROR_WSMAN_CONFIG_CANNOT_CHANGE_GPO_CONTROLLED_SETTING = 0x8033808a;
enum ERROR_WSMAN_EVENTING_CONCURRENT_CLIENT_RECEIVE = 0x8033808b;
enum ERROR_WSMAN_EVENTING_FAST_SENDER = 0x8033808c;
enum ERROR_WSMAN_EVENTING_INSECURE_PUSHSUBSCRIPTION_CONNECTION = 0x8033808d;
enum ERROR_WSMAN_EVENTING_INVALID_EVENTSOURCE = 0x8033808e;
enum ERROR_WSMAN_EVENTING_NOMATCHING_LISTENER = 0x8033808f;
enum ERROR_WSMAN_FRAGMENT_DIALECT_REQUESTED_UNAVAILABLE = 0x80338090;
enum ERROR_WSMAN_MISSING_FRAGMENT_PATH = 0x80338091;
enum ERROR_WSMAN_INVALID_FRAGMENT_DIALECT = 0x80338092;
enum ERROR_WSMAN_INVALID_FRAGMENT_PATH = 0x80338093;
enum ERROR_WSMAN_EVENTING_INCOMPATIBLE_BATCHPARAMS_AND_DELIVERYMODE = 0x80338094;
enum ERROR_WSMAN_EVENTING_LOOPBACK_TESTFAILED = 0x80338095;
enum ERROR_WSMAN_EVENTING_INVALID_ENDTO_ADDRESSS = 0x80338096;
enum ERROR_WSMAN_EVENTING_INVALID_INCOMING_EVENT_PACKET_HEADER = 0x80338097;
enum ERROR_WSMAN_SESSION_ALREADY_CLOSED = 0x80338098;
enum ERROR_WSMAN_SUBSCRIPTION_LISTENER_NOLONGERVALID = 0x80338099;
enum ERROR_WSMAN_PROVIDER_LOAD_FAILED = 0x8033809a;
enum ERROR_WSMAN_EVENTING_SUBSCRIPTIONCLOSED_BYREMOTESERVICE = 0x8033809b;
enum ERROR_WSMAN_EVENTING_DELIVERYFAILED_FROMSOURCE = 0x8033809c;
enum ERROR_WSMAN_SECURITY_UNMAPPED = 0x8033809d;
enum ERROR_WSMAN_EVENTING_SUBSCRIPTION_CANCELLED_BYSOURCE = 0x8033809e;
enum ERROR_WSMAN_INVALID_HOSTNAME_PATTERN = 0x8033809f;
enum ERROR_WSMAN_EVENTING_MISSING_NOTIFYTO = 0x803380a0;
enum ERROR_WSMAN_EVENTING_MISSING_NOTIFYTO_ADDRESSS = 0x803380a1;
enum ERROR_WSMAN_EVENTING_INVALID_NOTIFYTO_ADDRESSS = 0x803380a2;
enum ERROR_WSMAN_EVENTING_INVALID_LOCALE_IN_DELIVERY = 0x803380a3;
enum ERROR_WSMAN_EVENTING_INVALID_HEARTBEAT = 0x803380a4;
enum ERROR_WSMAN_MACHINE_OPTION_REQUIRED = 0x803380a5;
enum ERROR_WSMAN_UNSUPPORTED_FEATURE_OPTIONS = 0x803380a6;
enum ERROR_WSMAN_BATCHSIZE_TOO_SMALL = 0x803380a7;
enum ERROR_WSMAN_EVENTING_DELIVERY_MODE_REQUESTED_INVALID = 0x803380a8;
enum ERROR_WSMAN_PROVSYS_NOT_SUPPORTED = 0x803380a9;
enum ERROR_WSMAN_PUSH_SUBSCRIPTION_CONFIG_INVALID = 0x803380aa;
enum ERROR_WSMAN_CREDS_PASSED_WITH_NO_AUTH_FLAG = 0x803380ab;
enum ERROR_WSMAN_CLIENT_INVALID_FLAG = 0x803380ac;
enum ERROR_WSMAN_CLIENT_MULTIPLE_AUTH_FLAGS = 0x803380ad;
enum ERROR_WSMAN_CLIENT_SPN_WRONG_AUTH = 0x803380ae;
enum ERROR_WSMAN_CLIENT_CERT_UNNEEDED_CREDS = 0x803380af;
enum ERROR_WSMAN_CLIENT_USERNAME_PASSWORD_NEEDED = 0x803380b0;
enum ERROR_WSMAN_CLIENT_CERT_UNNEEDED_USERNAME = 0x803380b1;
enum ERROR_WSMAN_CLIENT_CREDENTIALS_NEEDED = 0x803380b2;
enum ERROR_WSMAN_CLIENT_CREDENTIALS_FLAG_NEEDED = 0x803380b3;
enum ERROR_WSMAN_CLIENT_CERT_NEEDED = 0x803380b4;
enum ERROR_WSMAN_CLIENT_CERT_UNKNOWN_TYPE = 0x803380b5;
enum ERROR_WSMAN_CLIENT_CERT_UNKNOWN_LOCATION = 0x803380b6;
enum ERROR_WSMAN_CLIENT_INVALID_CERT = 0x803380b7;
enum ERROR_WSMAN_CLIENT_LOCAL_INVALID_CREDS = 0x803380b8;
enum ERROR_WSMAN_CLIENT_LOCAL_INVALID_CONNECTION_OPTIONS = 0x803380b9;
enum ERROR_WSMAN_CLIENT_CREATESESSION_NULL_PARAM = 0x803380ba;
enum ERROR_WSMAN_CLIENT_ENUMERATE_NULL_PARAM = 0x803380bb;
enum ERROR_WSMAN_CLIENT_SUBSCRIBE_NULL_PARAM = 0x803380bc;
enum ERROR_WSMAN_CLIENT_NULL_RESULT_PARAM = 0x803380bd;
enum ERROR_WSMAN_CLIENT_NO_HANDLE = 0x803380be;
enum ERROR_WSMAN_CLIENT_BLANK_URI = 0x803380bf;
enum ERROR_WSMAN_CLIENT_INVALID_RESOURCE_LOCATOR = 0x803380c0;
enum ERROR_WSMAN_CLIENT_BLANK_INPUT_XML = 0x803380c1;
enum ERROR_WSMAN_CLIENT_BATCH_ITEMS_TOO_SMALL = 0x803380c2;
enum ERROR_WSMAN_CLIENT_MAX_CHARS_TOO_SMALL = 0x803380c3;
enum ERROR_WSMAN_CLIENT_BLANK_ACTION_URI = 0x803380c4;
enum ERROR_WSMAN_CLIENT_ZERO_HEARTBEAT = 0x803380c5;
enum ERROR_WSMAN_CLIENT_MULTIPLE_DELIVERY_MODES = 0x803380c6;
enum ERROR_WSMAN_CLIENT_MULTIPLE_ENVELOPE_POLICIES = 0x803380c7;
enum ERROR_WSMAN_CLIENT_UNKNOWN_EXPIRATION_TYPE = 0x803380c8;
enum ERROR_WSMAN_CLIENT_MISSING_EXPIRATION = 0x803380c9;
enum ERROR_WSMAN_CLIENT_PULL_INVALID_FLAGS = 0x803380ca;
enum ERROR_WSMAN_CLIENT_PUSH_UNSUPPORTED_TRANSPORT = 0x803380cb;
enum ERROR_WSMAN_CLIENT_PUSH_HOST_TOO_LONG = 0x803380cc;
enum ERROR_WSMAN_CLIENT_COMPRESSION_INVALID_OPTION = 0x803380cd;
enum ERROR_WSMAN_CLIENT_DELIVERENDSUBSCRIPTION_NULL_PARAM = 0x803380ce;
enum ERROR_WSMAN_CLIENT_DELIVEREVENTS_NULL_PARAM = 0x803380cf;
enum ERROR_WSMAN_CLIENT_GETBOOKMARK_NULL_PARAM = 0x803380d0;
enum ERROR_WSMAN_CLIENT_DECODEOBJECT_NULL_PARAM = 0x803380d1;
enum ERROR_WSMAN_CLIENT_ENCODEOBJECT_NULL_PARAM = 0x803380d2;
enum ERROR_WSMAN_CLIENT_ENUMERATORADDOBJECT_NULL_PARAM = 0x803380d3;
enum ERROR_WSMAN_CLIENT_ENUMERATORNEXTOBJECT_NULL_PARAM = 0x803380d4;
enum ERROR_WSMAN_CLIENT_CONSTRUCTERROR_NULL_PARAM = 0x803380d5;
enum ERROR_WSMAN_SERVER_NONPULLSUBSCRIBE_NULL_PARAM = 0x803380d6;
enum ERROR_WSMAN_CLIENT_UNENCRYPTED_HTTP_ONLY = 0x803380d7;
enum ERROR_WSMAN_CANNOT_USE_CERTIFICATES_FOR_HTTP = 0x803380d8;
enum ERROR_WSMAN_CONNECTIONSTR_INVALID = 0x803380d9;
enum ERROR_WSMAN_TRANSPORT_NOT_SUPPORTED = 0x803380da;
enum ERROR_WSMAN_PORT_INVALID = 0x803380db;
enum ERROR_WSMAN_CONFIG_PORT_INVALID = 0x803380dc;
enum ERROR_WSMAN_SENDHEARBEAT_EMPTY_ENUMERATOR = 0x803380dd;
enum ERROR_WSMAN_CLIENT_UNENCRYPTED_DISABLED = 0x803380de;
enum ERROR_WSMAN_CLIENT_BASIC_AUTHENTICATION_DISABLED = 0x803380df;
enum ERROR_WSMAN_CLIENT_DIGEST_AUTHENTICATION_DISABLED = 0x803380e0;
enum ERROR_WSMAN_CLIENT_NEGOTIATE_AUTHENTICATION_DISABLED = 0x803380e1;
enum ERROR_WSMAN_CLIENT_KERBEROS_AUTHENTICATION_DISABLED = 0x803380e2;
enum ERROR_WSMAN_CLIENT_CERTIFICATES_AUTHENTICATION_DISABLED = 0x803380e3;
enum ERROR_WSMAN_SERVER_NOT_TRUSTED = 0x803380e4;
enum ERROR_WSMAN_EXPLICIT_CREDENTIALS_REQUIRED = 0x803380e5;
enum ERROR_WSMAN_CERT_THUMBPRINT_NOT_BLANK = 0x803380e6;
enum ERROR_WSMAN_CERT_THUMBPRINT_BLANK = 0x803380e7;
enum ERROR_WSMAN_CONFIG_CANNOT_SHARE_SSL_CONFIG = 0x803380e8;
enum ERROR_WSMAN_CONFIG_CERT_CN_DOES_NOT_MATCH_HOSTNAME = 0x803380e9;
enum ERROR_WSMAN_CONFIG_HOSTNAME_CHANGE_WITHOUT_CERT = 0x803380ea;
enum ERROR_WSMAN_CONFIG_THUMBPRINT_SHOULD_BE_EMPTY = 0x803380eb;
enum ERROR_WSMAN_INVALID_IPFILTER = 0x803380ec;
enum ERROR_WSMAN_CANNOT_CHANGE_KEYS = 0x803380ed;
enum ERROR_WSMAN_CERT_INVALID_USAGE = 0x803380ee;
enum ERROR_WSMAN_RESPONSE_NO_RESULTS = 0x803380ef;
enum ERROR_WSMAN_CREATE_RESPONSE_NO_EPR = 0x803380f0;
enum ERROR_WSMAN_RESPONSE_INVALID_ENUMERATION_CONTEXT = 0x803380f1;
enum ERROR_WSMAN_RESPONSE_NO_XML_FRAGMENT_WRAPPER = 0x803380f2;
enum ERROR_WSMAN_RESPONSE_INVALID_MESSAGE_INFORMATION_HEADER = 0x803380f3;
enum ERROR_WSMAN_RESPONSE_NO_SOAP_HEADER_BODY = 0x803380f4;
enum ERROR_WSMAN_HTTP_NO_RESPONSE_DATA = 0x803380f5;
enum ERROR_WSMAN_RESPONSE_INVALID_SOAP_FAULT = 0x803380f6;
enum ERROR_WSMAN_HTTP_INVALID_CONTENT_TYPE_IN_RESPONSE_DATA = 0x803380f7;
enum ERROR_WSMAN_HTTP_CONTENT_TYPE_MISSMATCH_RESPONSE_DATA = 0x803380f8;
enum ERROR_WSMAN_CANNOT_DECRYPT = 0x803380f9;
enum ERROR_WSMAN_INVALID_URI_WMI_SINGLETON = 0x803380fa;
enum ERROR_WSMAN_INVALID_URI_WMI_ENUM_WQL = 0x803380fb;
enum ERROR_WSMAN_NO_IDENTIFY_FOR_LOCAL_SESSION = 0x803380fc;
enum ERROR_WSMAN_NO_PUSH_SUBSCRIPTION_FOR_LOCAL_SESSION = 0x803380fd;
enum ERROR_WSMAN_INVALID_SUBSCRIPTION_MANAGER = 0x803380fe;
enum ERROR_WSMAN_NON_PULL_SUBSCRIPTION_NOT_SUPPORTED = 0x803380ff;
enum ERROR_WSMAN_WMI_MAX_NESTED = 0x80338100;
enum ERROR_WSMAN_REMOTE_CIMPATH_NOT_SUPPORTED = 0x80338101;
enum ERROR_WSMAN_WMI_PROVIDER_NOT_CAPABLE = 0x80338102;
enum ERROR_WSMAN_WMI_INVALID_VALUE = 0x80338103;
enum ERROR_WSMAN_WMI_SVC_ACCESS_DENIED = 0x80338104;
enum ERROR_WSMAN_WMI_PROVIDER_ACCESS_DENIED = 0x80338105;
enum ERROR_WSMAN_WMI_CANNOT_CONNECT_ACCESS_DENIED = 0x80338106;
enum ERROR_WSMAN_INVALID_FILTER_XML = 0x80338107;
enum ERROR_WSMAN_ENUMERATE_WMI_INVALID_KEY = 0x80338108;
enum ERROR_WSMAN_INVALID_FRAGMENT_PATH_BLANK = 0x80338109;
enum ERROR_WSMAN_INVALID_CHARACTERS_IN_RESPONSE = 0x8033810a;
enum ERROR_WSMAN_KERBEROS_IPADDRESS = 0x8033810b;
enum ERROR_WSMAN_CLIENT_WORKGROUP_NO_KERBEROS = 0x8033810c;
enum ERROR_WSMAN_INVALID_BATCH_SETTINGS_PARAMETER = 0x8033810d;
enum ERROR_WSMAN_SERVER_DESTINATION_LOCALHOST = 0x8033810e;
enum ERROR_WSMAN_UNKNOWN_HTTP_STATUS_RETURNED = 0x8033810f;
enum ERROR_WSMAN_UNSUPPORTED_HTTP_STATUS_REDIRECT = 0x80338110;
enum ERROR_WSMAN_HTTP_REQUEST_TOO_LARGE_STATUS = 0x80338111;
enum ERROR_WSMAN_HTTP_SERVICE_UNAVAILABLE_STATUS = 0x80338112;
enum ERROR_WSMAN_HTTP_NOT_FOUND_STATUS = 0x80338113;
enum ERROR_WSMAN_EVENTING_MISSING_LOCALE_IN_DELIVERY = 0x80338114;
enum ERROR_WSMAN_QUICK_CONFIG_FAILED_CERT_REQUIRED = 0x80338115;
enum ERROR_WSMAN_QUICK_CONFIG_FIREWALL_EXCEPTIONS_DISALLOWED = 0x80338116;
enum ERROR_WSMAN_QUICK_CONFIG_LOCAL_POLICY_CHANGE_DISALLOWED = 0x80338117;
enum ERROR_WSMAN_INVALID_SELECTOR_NAME = 0x80338118;
enum ERROR_WSMAN_ENCODING_TYPE = 0x80338119;
enum ERROR_WSMAN_ENDPOINT_UNAVAILABLE_INVALID_VALUE = 0x8033811a;
enum ERROR_WSMAN_INVALID_HEADER = 0x8033811b;
enum ERROR_WSMAN_ENUMERATE_UNSUPPORTED_EXPIRATION_TYPE = 0x8033811c;
enum ERROR_WSMAN_MAX_ELEMENTS_NOT_SUPPORTED = 0x8033811d;
enum ERROR_WSMAN_WMI_PROVIDER_INVALID_PARAMETER = 0x8033811e;
enum ERROR_WSMAN_CLIENT_MULTIPLE_ENUM_MODE_FLAGS = 0x8033811f;
enum ERROR_WINRS_CLIENT_INVALID_FLAG = 0x80338120;
enum ERROR_WINRS_CLIENT_NULL_PARAM = 0x80338121;
enum ERROR_WSMAN_CANNOT_PROCESS_FILTER = 0x80338122;
enum ERROR_WSMAN_CLIENT_ENUMERATORADDEVENT_NULL_PARAM = 0x80338123;
enum ERROR_WSMAN_ADDOBJECT_MISSING_OBJECT = 0x80338124;
enum ERROR_WSMAN_ADDOBJECT_MISSING_EPR = 0x80338125;
enum ERROR_WSMAN_NETWORK_TIMEDOUT = 0x80338126;
enum ERROR_WINRS_RECEIVE_IN_PROGRESS = 0x80338127;
enum ERROR_WINRS_RECEIVE_NO_RESPONSE_DATA = 0x80338128;
enum ERROR_WINRS_CLIENT_CREATESHELL_NULL_PARAM = 0x80338129;
enum ERROR_WINRS_CLIENT_CLOSESHELL_NULL_PARAM = 0x8033812a;
enum ERROR_WINRS_CLIENT_FREECREATESHELLRESULT_NULL_PARAM = 0x8033812b;
enum ERROR_WINRS_CLIENT_RUNCOMMAND_NULL_PARAM = 0x8033812c;
enum ERROR_WINRS_CLIENT_FREERUNCOMMANDRESULT_NULL_PARAM = 0x8033812d;
enum ERROR_WINRS_CLIENT_SIGNAL_NULL_PARAM = 0x8033812e;
enum ERROR_WINRS_CLIENT_RECEIVE_NULL_PARAM = 0x8033812f;
enum ERROR_WINRS_CLIENT_FREEPULLRESULT_NULL_PARAM = 0x80338130;
enum ERROR_WINRS_CLIENT_PULL_NULL_PARAM = 0x80338131;
enum ERROR_WINRS_CLIENT_CLOSERECEIVEHANDLE_NULL_PARAM = 0x80338132;
enum ERROR_WINRS_CLIENT_SEND_NULL_PARAM = 0x80338133;
enum ERROR_WINRS_CLIENT_PUSH_NULL_PARAM = 0x80338134;
enum ERROR_WINRS_CLIENT_CLOSESENDHANDLE_NULL_PARAM = 0x80338135;
enum ERROR_WINRS_CLIENT_GET_NULL_PARAM = 0x80338136;
enum ERROR_WSMAN_POLYMORPHISM_MODE_UNSUPPORTED = 0x80338137;
enum ERROR_WSMAN_REQUEST_NOT_SUPPORTED_AT_SERVICE = 0x80338138;
enum ERROR_WSMAN_URI_NON_DMTF_CLASS = 0x80338139;
enum ERROR_WSMAN_URI_WRONG_DMTF_VERSION = 0x8033813a;
enum ERROR_WSMAN_DIFFERENT_CIM_SELECTOR = 0x8033813b;
enum ERROR_WSMAN_PUSHSUBSCRIPTION_INVALIDUSERACCOUNT = 0x8033813c;
enum ERROR_WSMAN_EVENTING_NONDOMAINJOINED_PUBLISHER = 0x8033813d;
enum ERROR_WSMAN_EVENTING_NONDOMAINJOINED_COLLECTOR = 0x8033813e;
enum ERROR_WSMAN_CONFIG_READONLY_PROPERTY = 0x8033813f;
enum ERROR_WINRS_CODE_PAGE_NOT_SUPPORTED = 0x80338140;
enum ERROR_WSMAN_CLIENT_DISABLE_LOOPBACK_WITH_EXPLICIT_CREDENTIALS = 0x80338141;
enum ERROR_WSMAN_CLIENT_INVALID_DISABLE_LOOPBACK = 0x80338142;
enum ERROR_WSMAN_CLIENT_ENUM_RECEIVED_TOO_MANY_ITEMS = 0x80338143;
enum ERROR_WSMAN_MULTIPLE_CREDENTIALS = 0x80338144;
enum ERROR_WSMAN_AUTHENTICATION_INVALID_FLAG = 0x80338145;
enum ERROR_WSMAN_CLIENT_CREDENTIALS_FOR_DEFAULT_AUTHENTICATION = 0x80338146;
enum ERROR_WSMAN_CLIENT_USERNAME_AND_PASSWORD_NEEDED = 0x80338147;
enum ERROR_WSMAN_CLIENT_INVALID_CERT_DNS_OR_UPN = 0x80338148;
enum ERROR_WSMAN_CREATESHELL_NULL_ENVIRONMENT_VARIABLE_NAME = 0x80338149;
enum ERROR_WSMAN_SHELL_ALREADY_CLOSED = 0x8033814a;
enum ERROR_WSMAN_CREATESHELL_NULL_STREAMID = 0x8033814b;
enum ERROR_WSMAN_SHELL_INVALID_SHELL_HANDLE = 0x8033814c;
enum ERROR_WSMAN_SHELL_INVALID_COMMAND_HANDLE = 0x8033814d;
enum ERROR_WSMAN_RUNSHELLCOMMAND_NULL_ARGUMENT = 0x8033814e;
enum ERROR_WSMAN_COMMAND_ALREADY_CLOSED = 0x8033814f;
enum ERROR_WSMAN_SENDSHELLINPUT_INVALID_STREAMID_INDEX = 0x80338150;
enum ERROR_WSMAN_SHELL_SYNCHRONOUS_NOT_SUPPORTED = 0x80338151;
enum ERROR_WSMAN_NO_CERTMAPPING_OPERATION_FOR_LOCAL_SESSION = 0x80338152;
enum ERROR_WSMAN_CERTMAPPING_CONFIGLIMIT_EXCEEDED = 0x80338153;
enum ERROR_WSMAN_CERTMAPPING_INVALIDUSERCREDENTIALS = 0x80338154;
enum ERROR_WSMAN_CERT_INVALID_USAGE_CLIENT = 0x80338155;
enum ERROR_WSMAN_CERT_MISSING_AUTH_FLAG = 0x80338156;
enum ERROR_WSMAN_CERT_MULTIPLE_CREDENTIALS_FLAG = 0x80338157;
enum ERROR_WSMAN_CONFIG_SHELL_URI_INVALID = 0x80338158;
enum ERROR_WSMAN_CONFIG_SHELL_URI_CMDSHELLURI_NOTPERMITTED = 0x80338159;
enum ERROR_WSMAN_CONFIG_SHELLURI_INVALID_PROCESSPATH = 0x8033815a;
enum ERROR_WINRS_SHELL_URI_INVALID = 0x8033815b;
enum ERROR_WSMAN_INVALID_SECURITY_DESCRIPTOR = 0x8033815c;
enum ERROR_WSMAN_POLICY_TOO_COMPLEX = 0x8033815d;
enum ERROR_WSMAN_POLICY_CANNOT_COMPLY = 0x8033815e;
enum ERROR_WSMAN_INVALID_CONNECTIONRETRY = 0x8033815f;
enum ERROR_WSMAN_URISECURITY_INVALIDURIKEY = 0x80338160;
enum ERROR_WSMAN_CERTMAPPING_INVALIDSUBJECTKEY = 0x80338161;
enum ERROR_WSMAN_CERTMAPPING_INVALIDISSUERKEY = 0x80338162;
enum ERROR_WSMAN_INVALID_PUBLISHERS_TYPE = 0x80338163;
enum ERROR_WSMAN_CLIENT_INVALID_DELIVERY_RETRY = 0x80338164;
enum ERROR_WSMAN_CLIENT_NULL_PUBLISHERS = 0x80338165;
enum ERROR_WSMAN_CLIENT_NULL_ISSUERS = 0x80338166;
enum ERROR_WSMAN_CLIENT_NO_SOURCES = 0x80338167;
enum ERROR_WSMAN_INVALID_SUBSCRIBE_OBJECT = 0x80338168;
enum ERROR_WSMAN_PUBLIC_FIREWALL_PROFILE_ACTIVE = 0x80338169;
enum ERROR_WSMAN_CERTMAPPING_PASSWORDTOOLONG = 0x8033816a;
enum ERROR_WSMAN_CERTMAPPING_PASSWORDBLANK = 0x8033816b;
enum ERROR_WSMAN_CERTMAPPING_PASSWORDUSERTUPLE = 0x8033816c;
enum ERROR_WSMAN_INVALID_PROVIDER_RESPONSE = 0x8033816d;
enum ERROR_WSMAN_SHELL_NOT_INITIALIZED = 0x8033816e;
enum ERROR_WSMAN_CONFIG_SHELLURI_INVALID_OPERATION_ON_KEY = 0x8033816f;
enum ERROR_WSMAN_HTTP_STATUS_SERVER_ERROR = 0x80338170;
enum ERROR_WSMAN_HTTP_STATUS_BAD_REQUEST = 0x80338171;
enum ERROR_WSMAN_CONFIG_CANNOT_CHANGE_CERTMAPPING_KEYS = 0x80338172;
enum ERROR_WSMAN_HTML_ERROR = 0x80338173;
enum ERROR_WSMAN_CLIENT_INITIALIZE_NULL_PARAM = 0x80338174;
enum ERROR_WSMAN_CLIENT_INVALID_INIT_APPLICATION_FLAG = 0x80338175;
enum ERROR_WSMAN_CLIENT_INVALID_DEINIT_APPLICATION_FLAG = 0x80338176;
enum ERROR_WSMAN_CLIENT_SETSESSIONOPTION_NULL_PARAM = 0x80338177;
enum ERROR_WSMAN_CLIENT_SETSESSIONOPTION_INVALID_PARAM = 0x80338178;
enum ERROR_WSMAN_CLIENT_GETSESSIONOPTION_INVALID_PARAM = 0x80338179;
enum ERROR_WSMAN_CLIENT_CREATESHELL_NULL_PARAM = 0x8033817a;
enum ERROR_WSMAN_CLIENT_INVALID_CREATE_SHELL_FLAG = 0x8033817b;
enum ERROR_WSMAN_CLIENT_INVALID_CLOSE_SHELL_FLAG = 0x8033817c;
enum ERROR_WSMAN_CLIENT_INVALID_CLOSE_COMMAND_FLAG = 0x8033817d;
enum ERROR_WSMAN_CLIENT_CLOSESHELL_NULL_PARAM = 0x8033817e;
enum ERROR_WSMAN_CLIENT_CLOSECOMMAND_NULL_PARAM = 0x8033817f;
enum ERROR_WSMAN_CLIENT_RUNCOMMAND_NULL_PARAM = 0x80338180;
enum ERROR_WSMAN_CLIENT_INVALID_RUNCOMMAND_FLAG = 0x80338181;
enum ERROR_WSMAN_CLIENT_RUNCOMMAND_NOTCOMPLETED = 0x80338182;
enum ERROR_WSMAN_NO_COMMAND_RESPONSE = 0x80338183;
enum ERROR_WSMAN_INVALID_OPTIONSET = 0x80338184;
enum ERROR_WSMAN_NO_COMMANDID = 0x80338185;
enum ERROR_WSMAN_CLIENT_SIGNAL_NULL_PARAM = 0x80338186;
enum ERROR_WSMAN_CLIENT_INVALID_SIGNAL_SHELL_FLAG = 0x80338187;
enum ERROR_WSMAN_CLIENT_SEND_NULL_PARAM = 0x80338188;
enum ERROR_WSMAN_CLIENT_INVALID_SEND_SHELL_FLAG = 0x80338189;
enum ERROR_WSMAN_CLIENT_INVALID_SEND_SHELL_PARAMETER = 0x8033818a;
enum ERROR_WSMAN_SHELL_INVALID_INPUT_STREAM = 0x8033818b;
enum ERROR_WSMAN_CLIENT_RECEIVE_NULL_PARAM = 0x8033818c;
enum ERROR_WSMAN_SHELL_INVALID_DESIRED_STREAMS = 0x8033818d;
enum ERROR_WSMAN_CLIENT_INVALID_RECEIVE_SHELL_FLAG = 0x8033818e;
enum ERROR_WSMAN_NO_RECEIVE_RESPONSE = 0x8033818f;
enum ERROR_WSMAN_PLUGIN_CONFIGURATION_CORRUPTED = 0x80338190;
enum ERROR_WSMAN_INVALID_FILEPATH = 0x80338191;
enum ERROR_WSMAN_FILE_NOT_PRESENT = 0x80338192;
enum ERROR_WSMAN_IISCONFIGURATION_READ_FAILED = 0x80338193;
enum ERROR_WSMAN_CLIENT_INVALID_LOCALE = 0x80338194;
enum ERROR_WSMAN_CLIENT_INVALID_UI_LANGUAGE = 0x80338195;
enum ERROR_WSMAN_CLIENT_GETERRORMESSAGE_NULL_PARAM = 0x80338196;
enum ERROR_WSMAN_CLIENT_INVALID_LANGUAGE_CODE = 0x80338197;
enum ERROR_WSMAN_CLIENT_INVALID_GETERRORMESSAGE_FLAG = 0x80338198;
enum ERROR_WSMAN_REDIRECT_REQUESTED = 0x80338199;
enum ERROR_WSMAN_PROXY_AUTHENTICATION_INVALID_FLAG = 0x8033819a;
enum ERROR_WSMAN_CLIENT_CREDENTIALS_FOR_PROXY_AUTHENTICATION = 0x8033819b;
enum ERROR_WSMAN_PROXY_ACCESS_TYPE = 0x8033819c;
enum ERROR_WSMAN_INVALID_OPTION_NO_PROXY_SERVER = 0x8033819d;
enum ERROR_WSMAN_CLIENT_GETSESSIONOPTION_DWORD_NULL_PARAM = 0x8033819e;
enum ERROR_WSMAN_CLIENT_GETSESSIONOPTION_DWORD_INVALID_PARAM = 0x8033819f;
enum ERROR_WSMAN_CLIENT_GETSESSIONOPTION_STRING_INVALID_PARAM = 0x803381a0;
enum ERROR_WSMAN_CREDSSP_USERNAME_PASSWORD_NEEDED = 0x803381a1;
enum ERROR_WSMAN_CLIENT_CREDSSP_AUTHENTICATION_DISABLED = 0x803381a2;
enum ERROR_WSMAN_CLIENT_ALLOWFRESHCREDENTIALS = 0x803381a3;
enum ERROR_WSMAN_CLIENT_ALLOWFRESHCREDENTIALS_NTLMONLY = 0x803381a4;
enum ERROR_WSMAN_QUOTA_MAX_SHELLS = 0x803381a5;
enum ERROR_WSMAN_QUOTA_MAX_OPERATIONS = 0x803381a6;
enum ERROR_WSMAN_QUOTA_USER = 0x803381a7;
enum ERROR_WSMAN_QUOTA_SYSTEM = 0x803381a8;
enum ERROR_WSMAN_DIFFERENT_AUTHZ_TOKEN = 0x803381a9;
enum ERROR_WSMAN_REDIRECT_LOCATION_NOT_AVAILABLE = 0x803381aa;
enum ERROR_WSMAN_QUOTA_MAX_SHELLUSERS = 0x803381ab;
enum ERROR_WSMAN_REMOTESHELLS_NOT_ALLOWED = 0x803381ac;
enum ERROR_WSMAN_PULL_PARAMS_NOT_SAME_AS_ENUM = 0x803381ad;
enum ERROR_WSMAN_DEPRECATED_CONFIG_SETTING = 0x803381ae;
enum ERROR_WSMAN_URI_SECURITY_URI = 0x803381af;
enum ERROR_WSMAN_CANNOT_USE_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS_FOR_HTTP = 0x803381b0;
enum ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_HTTP = 0x803381b1;
enum ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_KERBEROS = 0x803381b2;
enum ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_CREDSSP = 0x803381b3;
enum ERROR_WSMAN_CLIENT_MULTIPLE_PROXY_AUTH_FLAGS = 0x803381b4;
enum ERROR_WSMAN_INVALID_REDIRECT_ERROR = 0x803381b5;
enum ERROR_REDIRECT_LOCATION_TOO_LONG = 0x803381b6;
enum ERROR_REDIRECT_LOCATION_INVALID = 0x803381b7;
enum ERROR_SERVICE_CBT_HARDENING_INVALID = 0x803381b8;
enum ERROR_WSMAN_NAME_NOT_RESOLVED = 0x803381b9;
enum ERROR_WSMAN_SSL_CONNECTION_ABORTED = 0x803381ba;
enum ERROR_WSMAN_DEFAULTAUTH_IPADDRESS = 0x803381bb;
enum ERROR_WSMAN_CUSTOMREMOTESHELL_DEPRECATED = 0x803381bc;
enum ERROR_WSMAN_FEATURE_DEPRECATED = 0x803381bd;
enum ERROR_WSMAN_INVALID_USESSL_PARAM = 0x803381be;
enum ERROR_WSMAN_INVALID_CONFIGSDDL_URL = 0x803381bf;
enum ERROR_WSMAN_ENUMERATE_SHELLCOMAMNDS_FILTER_EXPECTED = 0x803381c0;
enum ERROR_WSMAN_ENUMERATE_SHELLCOMMANDS_EPRS_NOTSUPPORTED = 0x803381c1;
enum ERROR_WSMAN_CLIENT_CREATESHELL_NAME_INVALID = 0x803381c2;
enum ERROR_WSMAN_RUNAS_INVALIDUSERCREDENTIALS = 0x803381c3;
enum ERROR_WINRS_SHELL_DISCONNECTED = 0x803381c4;
enum ERROR_WINRS_SHELL_DISCONNECT_NOT_SUPPORTED = 0x803381c5;
enum ERROR_WINRS_SHELL_CLIENTSESSIONID_MISMATCH = 0x803381c6;
enum ERROR_WSMAN_CLIENT_DISCONNECTSHELL_NULL_PARAM = 0x803381c7;
enum ERROR_WSMAN_CLIENT_RECONNECTSHELL_NULL_PARAM = 0x803381c8;
enum ERROR_WSMAN_CLIENT_CONNECTSHELL_NULL_PARAM = 0x803381c9;
enum ERROR_WSMAN_CLIENT_CONNECTCOMMAND_NULL_PARAM = 0x803381ca;
enum ERROR_WINRS_CONNECT_RESPONSE_BAD_BODY = 0x803381cb;
enum ERROR_WSMAN_COMMAND_TERMINATED = 0x803381cc;
enum ERROR_WINRS_SHELL_CONNECTED_TO_DIFFERENT_CLIENT = 0x803381cd;
enum ERROR_WINRS_SHELL_DISCONNECT_OPERATION_NOT_GRACEFUL = 0x803381ce;
enum ERROR_WINRS_SHELL_DISCONNECT_OPERATION_NOT_VALID = 0x803381cf;
enum ERROR_WINRS_SHELL_RECONNECT_OPERATION_NOT_VALID = 0x803381d0;
enum ERROR_WSMAN_CONFIG_GROUP_POLICY_CHANGE_NOTIFICATION_SUBSCRIPTION_FAILED = 0x803381d1;
enum ERROR_WSMAN_CLIENT_RECONNECTSHELLCOMMAND_NULL_PARAM = 0x803381d2;
enum ERROR_WINRS_SHELLCOMMAND_RECONNECT_OPERATION_NOT_VALID = 0x803381d3;
enum ERROR_WINRS_SHELLCOMMAND_CLIENTID_NOT_VALID = 0x803381d4;
enum ERROR_WINRS_SHELL_CLIENTID_NOT_VALID = 0x803381d5;
enum ERROR_WINRS_SHELLCOMMAND_CLIENTID_RESOURCE_CONFLICT = 0x803381d6;
enum ERROR_WINRS_SHELL_CLIENTID_RESOURCE_CONFLICT = 0x803381d7;
enum ERROR_WINRS_SHELLCOMMAND_DISCONNECT_OPERATION_NOT_VALID = 0x803381d8;
enum ERROR_WSMAN_SUBSCRIBE_WMI_INVALID_KEY = 0x803381d9;
enum ERROR_WSMAN_CLIENT_INVALID_DISCONNECT_SHELL_FLAG = 0x803381da;
enum ERROR_WSMAN_CLIENT_INVALID_SHELL_COMMAND_PAIR = 0x803381db;
enum ERROR_WSMAN_SEMANTICCALLBACK_TIMEDOUT = 0x803381dc;
enum ERROR_WSMAN_SERVICE_REMOTE_ACCESS_DISABLED = 0x803381dd;
enum ERROR_WSMAN_SERVICE_STREAM_DISCONNECTED = 0x803381de;
enum ERROR_WSMAN_CREATESHELL_RUNAS_FAILED = 0x803381df;
enum ERROR_WSMAN_INVALID_XML_RUNAS_DISABLED = 0x803381e0;
enum ERROR_WSMAN_WRONG_METADATA = 0x803381e1;
enum ERROR_WSMAN_UNSUPPORTED_TYPE = 0x803381e2;
enum ERROR_WSMAN_REMOTE_CONNECTION_NOT_ALLOWED = 0x803381e3;
enum ERROR_WSMAN_QUOTA_MAX_SHELLS_PPQ = 0x803381e4;
enum ERROR_WSMAN_QUOTA_MAX_USERS_PPQ = 0x803381e5;
enum ERROR_WSMAN_QUOTA_MAX_PLUGINSHELLS_PPQ = 0x803381e6;
enum ERROR_WSMAN_QUOTA_MAX_PLUGINOPERATIONS_PPQ = 0x803381e7;
enum ERROR_WSMAN_QUOTA_MAX_OPERATIONS_USER_PPQ = 0x803381e8;
enum ERROR_WSMAN_QUOTA_MAX_COMMANDS_PER_SHELL_PPQ = 0x803381e9;
enum ERROR_WSMAN_QUOTA_MIN_REQUIREMENT_NOT_AVAILABLE_PPQ = 0x803381ea;
enum ERROR_WSMAN_NEW_DESERIALIZER = 0x803381eb;
enum ERROR_WSMAN_DESERIALIZE_CLASS = 0x803381ec;
enum ERROR_WSMAN_GETCLASS = 0x803381ed;
enum ERROR_WSMAN_NEW_SESSION = 0x803381ee;
enum ERROR_WSMAN_NULL_KEY = 0x803381ef;
enum ERROR_WSMAN_MUTUAL_AUTH_FAILED = 0x803381f0;
enum ERROR_WSMAN_UNSUPPORTED_OCTETTYPE = 0x803381f1;
enum ERROR_WINRS_IDLETIMEOUT_OUTOFBOUNDS = 0x803381f2;
enum ERROR_WSMAN_INSUFFICIENT_METADATA_FOR_BASIC = 0x803381f3;
enum ERROR_WSMAN_INVALID_LITERAL_URI = 0x803381f4;
enum ERROR_WSMAN_OBJECTONLY_INVALID = 0x803381f5;
enum ERROR_WSMAN_MISSING_CLASSNAME = 0x803381f6;
enum ERROR_WSMAN_EVENTING_INVALID_ENCODING_IN_DELIVERY = 0x803381f7;
enum ERROR_WSMAN_DESTINATION_INVALID = 0x803381f8;
enum ERROR_WSMAN_UNSUPPORTED_FEATURE_IDENTIFY = 0x803381f9;
enum ERROR_WSMAN_CLIENT_SESSION_UNUSABLE = 0x803381fa;
enum ERROR_WSMAN_VIRTUALACCOUNT_NOTSUPPORTED = 0x803381fb;
enum ERROR_WSMAN_VIRTUALACCOUNT_NOTSUPPORTED_DOWNLEVEL = 0x803381fc;
enum ERROR_WSMAN_RUNASUSER_MANAGEDACCOUNT_LOGON_FAILED = 0x803381fd;
enum ERROR_WSMAN_CERTMAPPING_CREDENTIAL_MANAGEMENT_FAILIED = 0x803381fe;
struct WSMAN_DATA_TEXT
{
    uint bufferLength;
    const(wchar)* buffer;
}
struct WSMAN_DATA_BINARY
{
    uint dataLength;
    ubyte* data;
}
alias WSManDataType = int;
enum : int
{
    WSMAN_DATA_NONE        = 0x00000000,
    WSMAN_DATA_TYPE_TEXT   = 0x00000001,
    WSMAN_DATA_TYPE_BINARY = 0x00000002,
    WSMAN_DATA_TYPE_DWORD  = 0x00000004,
}

struct WSMAN_DATA
{
    WSManDataType type;
    union
    {
        WSMAN_DATA_TEXT text;
        WSMAN_DATA_BINARY binaryData;
        uint number;
    }
}
struct WSMAN_ERROR
{
    uint code;
    const(wchar)* errorDetail;
    const(wchar)* language;
    const(wchar)* machineName;
    const(wchar)* pluginName;
}
struct WSMAN_USERNAME_PASSWORD_CREDS
{
    const(wchar)* username;
    const(wchar)* password;
}
alias WSManAuthenticationFlags = int;
enum : int
{
    WSMAN_FLAG_DEFAULT_AUTHENTICATION  = 0x00000000,
    WSMAN_FLAG_NO_AUTHENTICATION       = 0x00000001,
    WSMAN_FLAG_AUTH_DIGEST             = 0x00000002,
    WSMAN_FLAG_AUTH_NEGOTIATE          = 0x00000004,
    WSMAN_FLAG_AUTH_BASIC              = 0x00000008,
    WSMAN_FLAG_AUTH_KERBEROS           = 0x00000010,
    WSMAN_FLAG_AUTH_CREDSSP            = 0x00000080,
    WSMAN_FLAG_AUTH_CLIENT_CERTIFICATE = 0x00000020,
}

struct WSMAN_AUTHENTICATION_CREDENTIALS
{
    uint authenticationMechanism;
    union
    {
        WSMAN_USERNAME_PASSWORD_CREDS userAccount;
        const(wchar)* certificateThumbprint;
    }
}
struct WSMAN_OPTION
{
    const(wchar)* name;
    const(wchar)* value;
    BOOL mustComply;
}
struct WSMAN_OPTION_SET
{
    uint optionsCount;
    WSMAN_OPTION* options;
    BOOL optionsMustUnderstand;
}
struct WSMAN_OPTION_SETEX
{
    uint optionsCount;
    WSMAN_OPTION* options;
    BOOL optionsMustUnderstand;
    PWSTR* optionTypes;
}
struct WSMAN_KEY
{
    const(wchar)* key;
    const(wchar)* value;
}
struct WSMAN_SELECTOR_SET
{
    uint numberKeys;
    WSMAN_KEY* keys;
}
struct WSMAN_FRAGMENT
{
    const(wchar)* path;
    const(wchar)* dialect;
}
struct WSMAN_FILTER
{
    const(wchar)* filter;
    const(wchar)* dialect;
}
struct WSMAN_OPERATION_INFO
{
    WSMAN_FRAGMENT fragment;
    WSMAN_FILTER filter;
    WSMAN_SELECTOR_SET selectorSet;
    WSMAN_OPTION_SET optionSet;
    void* reserved;
    uint version_;
}
struct WSMAN_OPERATION_INFOEX
{
    WSMAN_FRAGMENT fragment;
    WSMAN_FILTER filter;
    WSMAN_SELECTOR_SET selectorSet;
    WSMAN_OPTION_SETEX optionSet;
    uint version_;
    const(wchar)* uiLocale;
    const(wchar)* dataLocale;
}
struct WSMAN_API
{
}
alias WSManProxyAccessType = int;
enum : int
{
    WSMAN_OPTION_PROXY_IE_PROXY_CONFIG      = 0x00000001,
    WSMAN_OPTION_PROXY_WINHTTP_PROXY_CONFIG = 0x00000002,
    WSMAN_OPTION_PROXY_AUTO_DETECT          = 0x00000004,
    WSMAN_OPTION_PROXY_NO_PROXY_SERVER      = 0x00000008,
}

struct WSMAN_PROXY_INFO
{
    uint accessType;
    WSMAN_AUTHENTICATION_CREDENTIALS authenticationCredentials;
}
struct WSMAN_SESSION
{
}
alias WSManSessionOption = int;
enum : int
{
    WSMAN_OPTION_DEFAULT_OPERATION_TIMEOUTMS          = 0x00000001,
    WSMAN_OPTION_MAX_RETRY_TIME                       = 0x0000000b,
    WSMAN_OPTION_TIMEOUTMS_CREATE_SHELL               = 0x0000000c,
    WSMAN_OPTION_TIMEOUTMS_RUN_SHELL_COMMAND          = 0x0000000d,
    WSMAN_OPTION_TIMEOUTMS_RECEIVE_SHELL_OUTPUT       = 0x0000000e,
    WSMAN_OPTION_TIMEOUTMS_SEND_SHELL_INPUT           = 0x0000000f,
    WSMAN_OPTION_TIMEOUTMS_SIGNAL_SHELL               = 0x00000010,
    WSMAN_OPTION_TIMEOUTMS_CLOSE_SHELL                = 0x00000011,
    WSMAN_OPTION_SKIP_CA_CHECK                        = 0x00000012,
    WSMAN_OPTION_SKIP_CN_CHECK                        = 0x00000013,
    WSMAN_OPTION_UNENCRYPTED_MESSAGES                 = 0x00000014,
    WSMAN_OPTION_UTF16                                = 0x00000015,
    WSMAN_OPTION_ENABLE_SPN_SERVER_PORT               = 0x00000016,
    WSMAN_OPTION_MACHINE_ID                           = 0x00000017,
    WSMAN_OPTION_LOCALE                               = 0x00000019,
    WSMAN_OPTION_UI_LANGUAGE                          = 0x0000001a,
    WSMAN_OPTION_MAX_ENVELOPE_SIZE_KB                 = 0x0000001c,
    WSMAN_OPTION_SHELL_MAX_DATA_SIZE_PER_MESSAGE_KB   = 0x0000001d,
    WSMAN_OPTION_REDIRECT_LOCATION                    = 0x0000001e,
    WSMAN_OPTION_SKIP_REVOCATION_CHECK                = 0x0000001f,
    WSMAN_OPTION_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS = 0x00000020,
    WSMAN_OPTION_USE_SSL                              = 0x00000021,
    WSMAN_OPTION_USE_INTEARACTIVE_TOKEN               = 0x00000022,
}

struct WSMAN_OPERATION
{
}
alias WSManCallbackFlags = int;
enum : int
{
    WSMAN_FLAG_CALLBACK_END_OF_OPERATION                       = 0x00000001,
    WSMAN_FLAG_CALLBACK_END_OF_STREAM                          = 0x00000008,
    WSMAN_FLAG_CALLBACK_SHELL_SUPPORTS_DISCONNECT              = 0x00000020,
    WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTED                 = 0x00000040,
    WSMAN_FLAG_CALLBACK_NETWORK_FAILURE_DETECTED               = 0x00000100,
    WSMAN_FLAG_CALLBACK_RETRYING_AFTER_NETWORK_FAILURE         = 0x00000200,
    WSMAN_FLAG_CALLBACK_RECONNECTED_AFTER_NETWORK_FAILURE      = 0x00000400,
    WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTING                = 0x00000800,
    WSMAN_FLAG_CALLBACK_RETRY_ABORTED_DUE_TO_INTERNAL_ERROR    = 0x00001000,
    WSMAN_FLAG_CALLBACK_RECEIVE_DELAY_STREAM_REQUEST_PROCESSED = 0x00002000,
}

struct WSMAN_SHELL
{
}
struct WSMAN_COMMAND
{
}
struct WSMAN_STREAM_ID_SET
{
    uint streamIDsCount;
    PWSTR* streamIDs;
}
struct WSMAN_ENVIRONMENT_VARIABLE
{
    const(wchar)* name;
    const(wchar)* value;
}
struct WSMAN_ENVIRONMENT_VARIABLE_SET
{
    uint varsCount;
    WSMAN_ENVIRONMENT_VARIABLE* vars;
}
struct WSMAN_SHELL_STARTUP_INFO_V10
{
    WSMAN_STREAM_ID_SET* inputStreamSet;
    WSMAN_STREAM_ID_SET* outputStreamSet;
    uint idleTimeoutMs;
    const(wchar)* workingDirectory;
    WSMAN_ENVIRONMENT_VARIABLE_SET* variableSet;
}
struct WSMAN_SHELL_STARTUP_INFO_V11
{
    WSMAN_SHELL_STARTUP_INFO_V10 __AnonymousBase_wsman_L665_C48;
    const(wchar)* name;
}
struct WSMAN_SHELL_DISCONNECT_INFO
{
    uint idleTimeoutMs;
}
alias WSManShellFlag = int;
enum : int
{
    WSMAN_FLAG_NO_COMPRESSION              = 0x00000001,
    WSMAN_FLAG_DELETE_SERVER_SESSION       = 0x00000002,
    WSMAN_FLAG_SERVER_BUFFERING_MODE_DROP  = 0x00000004,
    WSMAN_FLAG_SERVER_BUFFERING_MODE_BLOCK = 0x00000008,
    WSMAN_FLAG_RECEIVE_DELAY_OUTPUT_STREAM = 0x00000010,
}

struct WSMAN_RECEIVE_DATA_RESULT
{
    const(wchar)* streamId;
    WSMAN_DATA streamData;
    const(wchar)* commandState;
    uint exitCode;
}
struct WSMAN_CONNECT_DATA
{
    WSMAN_DATA data;
}
struct WSMAN_CREATE_SHELL_DATA
{
    WSMAN_DATA data;
}
union WSMAN_RESPONSE_DATA
{
    WSMAN_RECEIVE_DATA_RESULT receiveData;
    WSMAN_CONNECT_DATA connectData;
    WSMAN_CREATE_SHELL_DATA createData;
}
alias WSMAN_SHELL_COMPLETION_FUNCTION = void function(void*, uint, WSMAN_ERROR*, WSMAN_SHELL*, WSMAN_COMMAND*, WSMAN_OPERATION*, WSMAN_RESPONSE_DATA*);
struct WSMAN_SHELL_ASYNC
{
    void* operationContext;
    WSMAN_SHELL_COMPLETION_FUNCTION completionFunction;
}
struct WSMAN_COMMAND_ARG_SET
{
    uint argsCount;
    PWSTR* args;
}
struct WSMAN_CERTIFICATE_DETAILS
{
    const(wchar)* subject;
    const(wchar)* issuerName;
    const(wchar)* issuerThumbprint;
    const(wchar)* subjectName;
}
struct WSMAN_SENDER_DETAILS
{
    const(wchar)* senderName;
    const(wchar)* authenticationMechanism;
    WSMAN_CERTIFICATE_DETAILS* certificateDetails;
    HANDLE clientToken;
    const(wchar)* httpURL;
}
struct WSMAN_PLUGIN_REQUEST
{
    WSMAN_SENDER_DETAILS* senderDetails;
    const(wchar)* locale;
    const(wchar)* resourceUri;
    WSMAN_OPERATION_INFO* operationInfo;
    int shutdownNotification;
    HANDLE shutdownNotificationHandle;
    const(wchar)* dataLocale;
}
alias WSMAN_PLUGIN_RELEASE_SHELL_CONTEXT = void function(void*);
alias WSMAN_PLUGIN_RELEASE_COMMAND_CONTEXT = void function(void*, void*);
alias WSMAN_PLUGIN_STARTUP = uint function(uint, const(wchar)*, const(wchar)*, void**);
alias WSMAN_PLUGIN_SHUTDOWN = uint function(void*, uint, uint);
alias WSMAN_PLUGIN_SHELL = void function(void*, WSMAN_PLUGIN_REQUEST*, uint, WSMAN_SHELL_STARTUP_INFO_V11*, WSMAN_DATA*);
alias WSMAN_PLUGIN_COMMAND = void function(WSMAN_PLUGIN_REQUEST*, uint, void*, const(wchar)*, WSMAN_COMMAND_ARG_SET*);
alias WSMAN_PLUGIN_SEND = void function(WSMAN_PLUGIN_REQUEST*, uint, void*, void*, const(wchar)*, WSMAN_DATA*);
alias WSMAN_PLUGIN_RECEIVE = void function(WSMAN_PLUGIN_REQUEST*, uint, void*, void*, WSMAN_STREAM_ID_SET*);
alias WSMAN_PLUGIN_SIGNAL = void function(WSMAN_PLUGIN_REQUEST*, uint, void*, void*, const(wchar)*);
alias WSMAN_PLUGIN_CONNECT = void function(WSMAN_PLUGIN_REQUEST*, uint, void*, void*, WSMAN_DATA*);
struct WSMAN_AUTHZ_QUOTA
{
    uint maxAllowedConcurrentShells;
    uint maxAllowedConcurrentOperations;
    uint timeslotSize;
    uint maxAllowedOperationsPerTimeslot;
}
alias WSMAN_PLUGIN_AUTHORIZE_USER = void function(void*, WSMAN_SENDER_DETAILS*, uint);
alias WSMAN_PLUGIN_AUTHORIZE_OPERATION = void function(void*, WSMAN_SENDER_DETAILS*, uint, uint, const(wchar)*, const(wchar)*);
alias WSMAN_PLUGIN_AUTHORIZE_QUERY_QUOTA = void function(void*, WSMAN_SENDER_DETAILS*, uint);
alias WSMAN_PLUGIN_AUTHORIZE_RELEASE_CONTEXT = void function(void*);
enum CLSID_WSMan = GUID(0xbced617b, 0xec03, 0x420b, [0x85, 0x8, 0x97, 0x7d, 0xc7, 0xa6, 0x86, 0xbd]);
struct WSMan
{
}
enum CLSID_WSManInternal = GUID(0x7de087a5, 0x5dcb, 0x4df7, [0xbb, 0x12, 0x9, 0x24, 0xad, 0x8f, 0xbd, 0x9a]);
struct WSManInternal
{
}
alias WSManSessionFlags = int;
enum : int
{
    WSManFlagUTF8                              = 0x00000001,
    WSManFlagCredUsernamePassword              = 0x00001000,
    WSManFlagSkipCACheck                       = 0x00002000,
    WSManFlagSkipCNCheck                       = 0x00004000,
    WSManFlagUseNoAuthentication               = 0x00008000,
    WSManFlagUseDigest                         = 0x00010000,
    WSManFlagUseNegotiate                      = 0x00020000,
    WSManFlagUseBasic                          = 0x00040000,
    WSManFlagUseKerberos                       = 0x00080000,
    WSManFlagNoEncryption                      = 0x00100000,
    WSManFlagUseClientCertificate              = 0x00200000,
    WSManFlagEnableSPNServerPort               = 0x00400000,
    WSManFlagUTF16                             = 0x00800000,
    WSManFlagUseCredSsp                        = 0x01000000,
    WSManFlagSkipRevocationCheck               = 0x02000000,
    WSManFlagAllowNegotiateImplicitCredentials = 0x04000000,
    WSManFlagUseSsl                            = 0x08000000,
}

alias WSManEnumFlags = int;
enum : int
{
    WSManFlagNonXmlText                 = 0x00000001,
    WSManFlagReturnObject               = 0x00000000,
    WSManFlagReturnEPR                  = 0x00000002,
    WSManFlagReturnObjectAndEPR         = 0x00000004,
    WSManFlagHierarchyDeep              = 0x00000000,
    WSManFlagHierarchyShallow           = 0x00000020,
    WSManFlagHierarchyDeepBasePropsOnly = 0x00000040,
    WSManFlagAssociatedInstance         = 0x00000000,
    WSManFlagAssociationInstance        = 0x00000080,
}

alias WSManProxyAccessTypeFlags = int;
enum : int
{
    WSManProxyIEConfig      = 0x00000001,
    WSManProxyWinHttpConfig = 0x00000002,
    WSManProxyAutoDetect    = 0x00000004,
    WSManProxyNoProxyServer = 0x00000008,
}

alias WSManProxyAuthenticationFlags = int;
enum : int
{
    WSManFlagProxyAuthenticationUseNegotiate = 0x00000001,
    WSManFlagProxyAuthenticationUseBasic     = 0x00000002,
    WSManFlagProxyAuthenticationUseDigest    = 0x00000004,
}

enum IID_IWSMan = GUID(0x190d8637, 0x5cd3, 0x496d, [0xad, 0x24, 0x69, 0x63, 0x6b, 0xb5, 0xa3, 0xb5]);
interface IWSMan : IDispatch
{
    HRESULT CreateSession(BSTR, int, IDispatch, IDispatch*);
    HRESULT CreateConnectionOptions(IDispatch*);
    HRESULT get_CommandLine(BSTR*);
    HRESULT get_Error(BSTR*);
}
enum IID_IWSManEx = GUID(0x2d53bdaa, 0x798e, 0x49e6, [0xa1, 0xaa, 0x74, 0xd0, 0x12, 0x56, 0xf4, 0x11]);
interface IWSManEx : IWSMan
{
    HRESULT CreateResourceLocator(BSTR, IDispatch*);
    HRESULT SessionFlagUTF8(int*);
    HRESULT SessionFlagCredUsernamePassword(int*);
    HRESULT SessionFlagSkipCACheck(int*);
    HRESULT SessionFlagSkipCNCheck(int*);
    HRESULT SessionFlagUseDigest(int*);
    HRESULT SessionFlagUseNegotiate(int*);
    HRESULT SessionFlagUseBasic(int*);
    HRESULT SessionFlagUseKerberos(int*);
    HRESULT SessionFlagNoEncryption(int*);
    HRESULT SessionFlagEnableSPNServerPort(int*);
    HRESULT SessionFlagUseNoAuthentication(int*);
    HRESULT EnumerationFlagNonXmlText(int*);
    HRESULT EnumerationFlagReturnEPR(int*);
    HRESULT EnumerationFlagReturnObjectAndEPR(int*);
    HRESULT GetErrorMessage(uint, BSTR*);
    HRESULT EnumerationFlagHierarchyDeep(int*);
    HRESULT EnumerationFlagHierarchyShallow(int*);
    HRESULT EnumerationFlagHierarchyDeepBasePropsOnly(int*);
    HRESULT EnumerationFlagReturnObject(int*);
}
enum IID_IWSManEx2 = GUID(0x1d1b5ae0, 0x42d9, 0x4021, [0x82, 0x61, 0x39, 0x87, 0x61, 0x95, 0x12, 0xe9]);
interface IWSManEx2 : IWSManEx
{
    HRESULT SessionFlagUseClientCertificate(int*);
}
enum IID_IWSManEx3 = GUID(0x6400e966, 0x11d, 0x4eac, [0x84, 0x74, 0x4, 0x9e, 0x8, 0x48, 0xaf, 0xad]);
interface IWSManEx3 : IWSManEx2
{
    HRESULT SessionFlagUTF16(int*);
    HRESULT SessionFlagUseCredSsp(int*);
    HRESULT EnumerationFlagAssociationInstance(int*);
    HRESULT EnumerationFlagAssociatedInstance(int*);
    HRESULT SessionFlagSkipRevocationCheck(int*);
    HRESULT SessionFlagAllowNegotiateImplicitCredentials(int*);
    HRESULT SessionFlagUseSsl(int*);
}
enum IID_IWSManConnectionOptions = GUID(0xf704e861, 0x9e52, 0x464f, [0xb7, 0x86, 0xda, 0x5e, 0xb2, 0x32, 0xf, 0xdd]);
interface IWSManConnectionOptions : IDispatch
{
    HRESULT get_UserName(BSTR*);
    HRESULT put_UserName(BSTR);
    HRESULT put_Password(BSTR);
}
enum IID_IWSManConnectionOptionsEx = GUID(0xef43edf7, 0x2a48, 0x4d93, [0x95, 0x26, 0x8b, 0xd6, 0xab, 0x6d, 0x4a, 0x6b]);
interface IWSManConnectionOptionsEx : IWSManConnectionOptions
{
    HRESULT get_CertificateThumbprint(BSTR*);
    HRESULT put_CertificateThumbprint(BSTR);
}
enum IID_IWSManConnectionOptionsEx2 = GUID(0xf500c9ec, 0x24ee, 0x48ab, [0xb3, 0x8d, 0xfc, 0x9a, 0x16, 0x4c, 0x65, 0x8e]);
interface IWSManConnectionOptionsEx2 : IWSManConnectionOptionsEx
{
    HRESULT SetProxy(int, int, BSTR, BSTR);
    HRESULT ProxyIEConfig(int*);
    HRESULT ProxyWinHttpConfig(int*);
    HRESULT ProxyAutoDetect(int*);
    HRESULT ProxyNoProxyServer(int*);
    HRESULT ProxyAuthenticationUseNegotiate(int*);
    HRESULT ProxyAuthenticationUseBasic(int*);
    HRESULT ProxyAuthenticationUseDigest(int*);
}
enum IID_IWSManSession = GUID(0xfc84fc58, 0x1286, 0x40c4, [0x9d, 0xa0, 0xc8, 0xef, 0x6e, 0xc2, 0x41, 0xe0]);
interface IWSManSession : IDispatch
{
    HRESULT Get(VARIANT, int, BSTR*);
    HRESULT Put(VARIANT, BSTR, int, BSTR*);
    HRESULT Create(VARIANT, BSTR, int, BSTR*);
    HRESULT Delete(VARIANT, int);
    HRESULT Invoke(BSTR, VARIANT, BSTR, int, BSTR*);
    HRESULT Enumerate(VARIANT, BSTR, BSTR, int, IDispatch*);
    HRESULT Identify(int, BSTR*);
    HRESULT get_Error(BSTR*);
    HRESULT get_BatchItems(int*);
    HRESULT put_BatchItems(int);
    HRESULT get_Timeout(int*);
    HRESULT put_Timeout(int);
}
enum IID_IWSManEnumerator = GUID(0xf3457ca9, 0xabb9, 0x4fa5, [0xb8, 0x50, 0x90, 0xe8, 0xca, 0x30, 0xe, 0x7f]);
interface IWSManEnumerator : IDispatch
{
    HRESULT ReadItem(BSTR*);
    HRESULT get_AtEndOfStream(short*);
    HRESULT get_Error(BSTR*);
}
enum IID_IWSManResourceLocator = GUID(0xa7a1ba28, 0xde41, 0x466a, [0xad, 0xa, 0xc4, 0x5, 0x9e, 0xad, 0x74, 0x28]);
interface IWSManResourceLocator : IDispatch
{
    HRESULT put_ResourceURI(BSTR);
    HRESULT get_ResourceURI(BSTR*);
    HRESULT AddSelector(BSTR, VARIANT);
    HRESULT ClearSelectors();
    HRESULT get_FragmentPath(BSTR*);
    HRESULT put_FragmentPath(BSTR);
    HRESULT get_FragmentDialect(BSTR*);
    HRESULT put_FragmentDialect(BSTR);
    HRESULT AddOption(BSTR, VARIANT, BOOL);
    HRESULT put_MustUnderstandOptions(BOOL);
    HRESULT get_MustUnderstandOptions(BOOL*);
    HRESULT ClearOptions();
    HRESULT get_Error(BSTR*);
}
enum IID_IWSManResourceLocatorInternal = GUID(0xeffaead7, 0x7ec8, 0x4716, [0xb9, 0xbe, 0xf2, 0xe7, 0xe9, 0xfb, 0x4a, 0xdb]);
interface IWSManResourceLocatorInternal : IUnknown
{
}
enum IID_IWSManInternal = GUID(0x4ae2b1d, 0x9954, 0x4d99, [0x94, 0xa9, 0xa9, 0x61, 0xe7, 0x2c, 0x3a, 0x13]);
interface IWSManInternal : IDispatch
{
    HRESULT ConfigSDDL(IDispatch, VARIANT, int, BSTR*);
}
